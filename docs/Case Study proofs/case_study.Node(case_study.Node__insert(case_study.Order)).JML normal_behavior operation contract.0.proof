\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:off",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : false
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 100000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_INVARIANT",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "../../../property-checker-out/case_study";

\proofObligation "#Proof Obligation Settings
#Sun Mar 17 16:07:48 CET 2024
contract=case_study.Node[case_study.Node\\:\\:insert(case_study.Order)].JML normal_behavior operation contract.0
name=case_study.Node[case_study.Node\\:\\:insert(case_study.Order)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "florian" ) (keyVersion "27183cea39cd71d8280021bab8de03c8490dcfd2"))

(autoModeTime "23655")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "14") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "13"))
 (builtin "One Step Simplification" (formula "6"))
(rule "polySimp_addComm0" (formula "14") (term "1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "1,1,1"))
(rule "elementOfInfiniteUnion" (formula "14") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "sortsDisjointModuloNull" (formula "11"))
(rule "replace_known_right" (formula "11") (term "1") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
(rule "false_right" (formula "11"))
(rule "assignment" (formula "13") (term "1"))
 (builtin "One Step Simplification" (formula "13"))
(rule "Free_class_invariant_axiom_for_case_study_Node" (formula "10") (ifseqformula "12"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "polySimp_addComm0" (formula "17") (term "1,1,1,1"))
(rule "sortsDisjointModuloNull" (formula "14") (term "0,1"))
(rule "Class_invariant_axiom_for_case_study_Node" (formula "7") (ifseqformula "19"))
(rule "true_left" (formula "7"))
(rule "commute_and_2" (formula "6") (term "1"))
(rule "limit_java_lang_Object__inv_free_" (formula "10"))
(rule "replace_known_left" (formula "10") (term "1") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "10"))
(rule "cnf_rightDist" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "cnf_rightDist" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "commute_or" (formula "7"))
(rule "cnf_rightDist" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "commute_or" (formula "6"))
(rule "cnf_rightDist" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "commute_or" (formula "7"))
(rule "cnf_rightDist" (formula "6"))
 (builtin "One Step Simplification" (formula "6"))
(rule "commute_or" (formula "6"))
(rule "commute_and_2" (formula "21") (term "1,1"))
(rule "commute_and" (formula "18") (term "0,1"))
(rule "cnf_rightDist" (formula "21") (term "0,1"))
(rule "commute_or" (formula "21") (term "1,0,1"))
(rule "cnf_rightDist" (formula "21") (term "1"))
(rule "cnf_rightDist" (formula "21") (term "1,1"))
(rule "commute_or" (formula "21") (term "0,1,1"))
(rule "cnf_rightDist" (formula "21") (term "0,1"))
(rule "commute_or" (formula "21") (term "0,0,1"))
(rule "cnf_rightDist" (formula "21") (term "1,0,1"))
(rule "commute_or" (formula "21") (term "0,1,0,1"))
(rule "cnf_rightDist" (formula "21") (term "0,0,1"))
(rule "commute_or_2" (formula "21") (term "1,0,0,1"))
(rule "shift_paren_or" (formula "21") (term "0,0,0,1"))
(rule "commute_or" (formula "21") (term "0,0,0,0,1"))
 (builtin "One Step Simplification" (formula "21"))
(rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_insert,savedHeapBefore_insert"))
 (builtin "One Step Simplification" (formula "24"))
(rule "shift_paren_and" (formula "21") (term "0,1"))
(rule "shift_paren_and" (formula "21") (term "1"))
(rule "commute_and_2" (formula "21") (term "1"))
(rule "ifElseUnfold" (formula "24") (term "1") (inst "#boolv=b"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "b"))
(rule "compound_less_equal_than_comparison_2" (formula "24") (term "1") (inst "#v1=i_1") (inst "#v0=i"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "i"))
 (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore___getPrice_trampoline,result___getPrice_trampoline,exc_0") (contract "case_study.Order[case_study.Order::__getPrice_trampoline(boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (__getPrice_trampoline)"
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "12")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "24"))
   (rule "andLeft" (formula "24"))
   (rule "eqSymm" (formula "24"))
   (rule "assignment" (formula "28") (term "1"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "variableDeclarationAssign" (formula "28") (term "1"))
   (rule "variableDeclaration" (formula "28") (term "1") (newnames "i_1"))
   (rule "Free_class_invariant_axiom_for_case_study_Order" (formula "23") (ifseqformula "26"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "inEqSimp_commuteGeq" (formula "29") (term "1,1,1"))
   (rule "Class_invariant_axiom_for_case_study_Order" (formula "32") (ifseqformula "33"))
   (rule "true_left" (formula "32"))
   (rule "limit_java_lang_Object__inv_free_" (formula "26"))
   (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "27"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "limit_java_lang_Object__inv_free_" (formula "24"))
   (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "shift_paren_and" (formula "32") (term "1"))
   (rule "commute_and" (formula "32") (term "0,1"))
   (rule "shift_paren_and" (formula "31") (term "1"))
   (rule "commute_and" (formula "31") (term "0,1"))
   (rule "commute_and_2" (formula "21") (term "0,0,1"))
   (rule "methodCallWithAssignmentUnfoldTarget" (formula "36") (term "1") (inst "#v0=o"))
   (rule "variableDeclaration" (formula "36") (term "1") (newnames "o"))
   (rule "assignment_read_attribute_this" (formula "36") (term "1"))
    (builtin "One Step Simplification" (formula "36"))
    (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore___getPrice_trampoline_0,result___getPrice_trampoline_0,exc_1") (contract "case_study.Order[case_study.Order::__getPrice_trampoline(boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (__getPrice_trampoline)"
       (builtin "One Step Simplification" (formula "37"))
       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "15")))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "35"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "35"))
      (rule "andLeft" (formula "34"))
      (rule "notLeft" (formula "35"))
      (rule "eqSymm" (formula "35"))
      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "34"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "37"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "replace_known_right" (formula "17") (term "0,0,1") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "assignment" (formula "38") (term "1"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "Free_class_invariant_axiom_for_case_study_Order" (formula "14") (ifseqformula "35"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "inEqSimp_commuteGeq" (formula "20") (term "1,1,1"))
      (rule "Class_invariant_axiom_for_case_study_Order" (formula "40") (ifseqformula "42"))
      (rule "true_left" (formula "40"))
      (rule "limit_java_lang_Object__inv_free_" (formula "17"))
      (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "limit_java_lang_Object__inv_free_" (formula "15"))
      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "16"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "shift_paren_and" (formula "23") (term "1"))
      (rule "commute_and" (formula "23") (term "0,1"))
      (rule "shift_paren_and" (formula "22") (term "1"))
      (rule "commute_and" (formula "22") (term "0,1"))
      (rule "less_equal_than_comparison_simple" (formula "46") (term "1"))
       (builtin "One Step Simplification" (formula "46"))
      (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,1,0"))
      (rule "commute_and_2" (formula "27") (term "0,1"))
      (rule "commute_and" (formula "27") (term "0,0,0,1"))
      (rule "commute_and_2" (formula "27") (term "0,0,1"))
      (rule "commute_and_2" (formula "27") (term "0,1"))
      (rule "commute_and_2" (formula "27") (term "1"))
      (rule "ifElseSplit" (formula "46"))
      (branch "if _newHead.__getPrice_trampoline(true) <= this.head.__getPrice_trampoline(true) true"
          (builtin "One Step Simplification" (formula "47"))
          (builtin "One Step Simplification" (formula "1"))
          (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore___insertHead_trampoline,exc_2,heapAfter___insertHead_trampoline,anon_heap___insertHead_trampoline") (contract "case_study.Node[case_study.Node::__insertHead_trampoline(case_study.Order,boolean,boolean,boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
         (branch "Post (__insertHead_trampoline)"
             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "48")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "47")))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "49"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "49"))
            (rule "polySimp_addComm0" (formula "51") (term "1"))
            (rule "polySimp_addComm0" (formula "48") (term "1,1,1"))
            (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=case_study_Node_head_0"))
            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "48") (term "1,1,1,1,0,1"))
            (rule "hideAuxiliaryEq" (formula "50"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "50") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "48") (term "1,1,1,1,0,1"))
            (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_packed_0"))
            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "hideAuxiliaryEq" (formula "46"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "46") (term "0"))
            (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=case_study_Node_size_0"))
            (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "48") (term "0,1,1"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "48") (term "0,1,0"))
            (rule "hideAuxiliaryEq" (formula "51"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "51") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "48") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "48") (term "0,1,1"))
            (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=java_lang_Object_packed_1"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")) (ifInst ""  (formula "5")))
            (rule "eqSymm" (formula "47") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "47") (term "0,0"))
            (rule "replace_known_right" (formula "47") (term "0,0,0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")))
            (rule "hideAuxiliaryEq" (formula "47"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "47") (term "0"))
            (rule "pullOutSelect" (formula "47") (term "0,1,0,1") (inst "selectSK=case_study_Product_price_0"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "sortsDisjointModuloNull" (formula "47") (term "0,0,0"))
            (rule "replace_known_right" (formula "47") (term "1,0,0,0") (ifseqformula "56"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,1"))
            (rule "pullOutSelect" (formula "48") (term "0,0,0") (inst "selectSK=case_study_Node_tail_0"))
            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "49") (term "1,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,1,2,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "49") (term "0,0,0,0,1"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "47") (term "1,1,1,0,0,1,0,0"))
            (rule "hideAuxiliaryEq" (formula "48"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "48") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "48") (term "0,0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "47") (term "1,1,1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "47") (term "1,1,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "48") (term "1,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "47") (term "1,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "47") (term "1,1,1,0,0,1,0,0"))
            (rule "pullOutSelect" (formula "48") (term "0,1,0,1") (inst "selectSK=case_study_Product_price_1"))
            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,0"))
            (rule "replace_known_right" (formula "48") (term "1,0,0,0") (ifseqformula "57"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "pullOutSelect" (formula "47") (term "1,1,2,0") (inst "selectSK=case_study_Node_head_1"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "replaceKnownSelect_taclet0000_12" (formula "48") (term "1,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_12" (formula "48") (term "1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_12" (formula "48") (term "1,1,0,0,1,0,0"))
            (rule "pullOutSelect" (formula "50") (term "1,1,1,1") (inst "selectSK=case_study_Node_size_1"))
            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "pullOutSelect" (formula "49") (term "0,0,0,0,0") (inst "selectSK=case_study_Order_product_0"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownSelect_taclet0000_14" (formula "50") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0000_14" (formula "50") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0000_14" (formula "50") (term "1,0,0,1,0,0"))
            (rule "sortsDisjointModuloNull" (formula "49") (term "0,0,0"))
            (rule "replace_known_right" (formula "49") (term "1,0,0,0") (ifseqformula "60"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "48") (term "1,2,0") (inst "selectSK=case_study_Order_product_1"))
            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "replaceKnownSelect_taclet0000_15" (formula "49") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0000_15" (formula "49") (term "0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_15" (formula "49") (term "1,0,0,1,0,0"))
            (rule "eqSymm" (formula "48") (term "0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "48") (term "0,0,0"))
            (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "limit_java_lang_Object__inv_free_" (formula "54"))
            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "55"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "Class_invariant_axiom_for_case_study_Node" (formula "58") (ifseqformula "62"))
            (rule "true_left" (formula "58"))
            (rule "Free_class_invariant_axiom_for_case_study_Node" (formula "55") (ifseqformula "61"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "55") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "55") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "55") (term "0,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "55") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "55") (term "0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "55") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "0,0,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "55") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "0,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "55") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "55") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,0,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_8" (formula "55") (term "1,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "55") (term "0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "55") (term "1,0,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,0,0,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "0,0,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,0,1,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "55") (term "0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,0,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_13" (formula "55") (term "0,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "55") (term "0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "55") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "55") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,1,0,1,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,0,0,0,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "55") (term "1,0,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,0,0,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "0,0,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,0,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "55") (term "0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,0,1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_13" (formula "55") (term "0,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_9" (formula "55") (term "1,1,1,1,0,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_0" (formula "55") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "55") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "55") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,1,0,1,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,0,0,0,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "55") (term "0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,0,1,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_10" (formula "55") (term "1,1,1,1,0,1,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_1" (formula "55") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "eqSymm" (formula "59") (term "0,1"))
            (rule "polySimp_addComm0" (formula "62") (term "1,1,1,1"))
            (rule "sortsDisjointModuloNull" (formula "59") (term "0,1"))
            (rule "pullOutSelect" (formula "62") (term "1,1,0,1,0,1,1") (inst "selectSK=case_study_Node_head_2"))
            (rule "simplifySelectOfAnonEQ" (formula "62") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "pullOutSelect" (formula "63") (term "0,0,0,0,1,1") (inst "selectSK=case_study_Node_tail_1"))
            (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "62") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "62") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "62") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "64") (term "0,0,1,0,1"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "64") (term "1,1,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "62") (term "0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0000_17" (formula "62") (term "1,0,0,1,1,0,0"))
            (rule "eqSymm" (formula "62") (term "0,0,0"))
            (rule "pullOutSelect" (formula "57") (term "0,1") (inst "selectSK=java_lang_Object_packed_2"))
            (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "pullOutSelect" (formula "55") (term "0,1") (inst "selectSK=java_lang_Object_packed_3"))
            (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "sortsDisjointModuloNull" (formula "55") (term "0,0,0"))
            (rule "replace_known_right" (formula "55") (term "1,0,0,0") (ifseqformula "72"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "pullOutSelect" (formula "66") (term "1,0,1,0,1,1") (inst "selectSK=case_study_Order_product_2"))
            (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "eqSymm" (formula "66") (term "0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "66") (term "0,0,0"))
            (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "66"))
            (rule "pullOutSelect" (formula "67") (term "1,1,1,1,1") (inst "selectSK=case_study_Node_size_2"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "eqSymm" (formula "67") (term "0,0,0"))
            (rule "pullOutSelect" (formula "68") (term "0,1,0,1,1") (inst "selectSK=case_study_Product_price_2"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "eqSymm" (formula "68") (term "0,0,0"))
            (rule "sortsDisjointModuloNull" (formula "68") (term "0,0,0"))
            (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "75"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "cnf_rightDist" (formula "53"))
            (rule "andLeft" (formula "53"))
            (rule "methodCallEmpty" (formula "77") (term "1"))
            (rule "cnf_rightDist" (formula "47") (term "0,0"))
            (rule "cnf_rightDist" (formula "52") (term "0,0"))
            (rule "limit_java_lang_Object__inv_free_" (formula "58"))
            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "commute_and" (formula "63") (term "0,1"))
            (rule "cnf_rightDist" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "commute_or" (formula "54"))
            (rule "cnf_rightDist" (formula "68") (term "0,0"))
            (rule "cnf_rightDist" (formula "72") (term "0,1"))
            (rule "cnf_rightDist" (formula "67") (term "0,0"))
            (rule "commute_or" (formula "47") (term "0,0,0"))
            (rule "commute_or" (formula "47") (term "1,0,0"))
            (rule "commute_or" (formula "52") (term "0,0,0"))
            (rule "commute_or" (formula "52") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "61") (term "0,0"))
            (rule "cnf_rightDist" (formula "53"))
            (rule "andLeft" (formula "53"))
            (rule "commute_or" (formula "53"))
            (rule "cnf_rightDist" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "commute_or" (formula "55"))
            (rule "commute_or" (formula "54"))
            (rule "cnf_rightDist" (formula "53"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "commute_or" (formula "53"))
            (rule "commute_or" (formula "70") (term "1,0,0"))
            (rule "commute_or" (formula "70") (term "0,0,0"))
            (rule "commute_and_2" (formula "74") (term "1,1"))
            (rule "commute_or" (formula "74") (term "1,0,1"))
            (rule "commute_or" (formula "74") (term "0,0,1"))
            (rule "commute_or" (formula "69") (term "1,0,0"))
            (rule "commute_or" (formula "69") (term "0,0,0"))
            (rule "commute_or" (formula "63") (term "0,0,0"))
            (rule "commute_or" (formula "63") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "72") (term "0,0"))
            (rule "commute_or" (formula "72") (term "1,0,0"))
            (rule "commute_or" (formula "72") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "74") (term "1"))
            (rule "cnf_rightDist" (formula "74") (term "1,1"))
            (rule "commute_or" (formula "74") (term "0,1,1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,0") (ifseqformula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0,0") (ifseqformula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,1,1,1") (ifseqformula "2"))
            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "81"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,0,1") (ifseqformula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1,1,1") (ifseqformula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,0,1") (ifseqformula "2"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "1") (ifseqformula "2"))
            (rule "cnf_rightDist" (formula "81") (term "0,1"))
            (rule "commute_or" (formula "81") (term "0,0,1"))
            (rule "tryEmpty" (formula "88") (term "1"))
            (rule "cnf_rightDist" (formula "81") (term "1,0,1"))
            (rule "commute_or" (formula "81") (term "0,1,0,1"))
            (rule "cnf_rightDist" (formula "81") (term "0,0,1"))
            (rule "commute_or_2" (formula "81") (term "1,0,0,1"))
            (rule "shift_paren_or" (formula "81") (term "0,0,0,1"))
             (builtin "One Step Simplification" (formula "81"))
            (rule "commute_or" (formula "81") (term "0,0,0,1"))
            (rule "shift_paren_and" (formula "81") (term "0,1"))
            (rule "shift_paren_and" (formula "81") (term "1"))
            (rule "emptyModality" (formula "88") (term "1"))
            (rule "andRight" (formula "88"))
            (branch "Case 1"
               (rule "andRight" (formula "88"))
               (branch "Case 1"
                  (rule "andRight" (formula "88"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "replaceKnownSelect_taclet0000_4" (formula "88") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "88") (term "0"))
                     (rule "close" (formula "88") (ifseqformula "83"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "88") (userinteraction))
                     (rule "Class_invariant_axiom_for_case_study_Node" (formula "88") (ifseqformula "87") (userinteraction))
                     (rule "closeTrue" (formula "88"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "88"))
                  (rule "closeTrue" (formula "88"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "88") (userinteraction))
               (rule "allRight" (formula "88") (inst "sk=f_0") (userinteraction))
               (rule "allRight" (formula "88") (inst "sk=o_0") (userinteraction))
               (rule "orRight" (formula "88"))
               (rule "orRight" (formula "88"))
               (rule "selectOfAnonEQ" (formula "90") (term "1") (ifseqformula "52") (userinteraction))
               (rule "ifthenelse_split" (formula "90") (term "1") (userinteraction))
               (branch " (o_0, f_0) ∊ self.* ∧ ¬f_0 = java.lang.Object::<created> ∨ (o_0, f_0) ∊ freshLocs(heap) TRUE"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
                  (rule "andLeft" (formula "1"))
                  (rule "typeEqDerived" (formula "90") (term "0,1") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "90"))
                  (rule "notLeft" (formula "2"))
                  (rule "eqSymm" (formula "92"))
                  (rule "polySimp_homoEq" (formula "10") (term "1"))
                  (rule "polySimp_homoEq" (formula "34") (term "1,0,0,0,0,1"))
                  (rule "polySimp_homoEq" (formula "34") (term "1,1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "82") (term "1,1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "82") (term "1,1,0,0,0,1"))
                  (rule "polySimp_homoEq" (formula "11") (term "1"))
                  (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,1,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,1,1,0,0,1"))
                  (rule "polySimp_addComm1" (formula "82") (term "0,1,1,0,0,0,1"))
                  (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                  (rule "inEqSimp_gtToGeq" (formula "76") (term "1"))
                  (rule "mul_literals" (formula "76") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "76") (term "0,0,1"))
                  (rule "inEqSimp_gtToGeq" (formula "33") (term "1"))
                  (rule "mul_literals" (formula "33") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "33") (term "0,0,1"))
                  (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "84"))
                  (rule "polySimp_homoEq" (formula "64") (term "1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "64") (term "0,0,1"))
                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "19"))
                  (rule "ssubsortDirect" (formula "43") (term "0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "notLeft" (formula "43"))
                  (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "85"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "replace_known_right" (formula "44") (term "0,0,0,1") (ifseqformula "85"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "48"))
                  (rule "ssubsortDirect" (formula "30") (term "0"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "notLeft" (formula "30"))
                  (rule "replace_known_left" (formula "29") (term "1,0,1") (ifseqformula "30"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "86"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "86"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "19"))
                  (rule "ssubsortDirect" (formula "43") (term "0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "notLeft" (formula "43"))
                  (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "replace_known_right" (formula "44") (term "0,0,0,1") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "18"))
                  (rule "ssubsortDirect" (formula "31") (term "0"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "52"))
                  (rule "ssubsortDirect" (formula "66") (term "0"))
                   (builtin "One Step Simplification" (formula "66"))
                  (rule "applyEq" (formula "92") (term "0,0,0") (ifseqformula "1"))
                  (rule "replace_known_right" (formula "92") (term "0,0") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "92"))
                  (rule "notRight" (formula "92"))
                  (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "83"))
                  (rule "polySimp_homoEq" (formula "60") (term "1"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,1"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,1"))
                  (rule "add_literals" (formula "60") (term "0,0,1"))
                  (rule "add_zero_left" (formula "60") (term "0,1"))
                  (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "53"))
                  (rule "ssubsortDirect" (formula "73") (term "0"))
                   (builtin "One Step Simplification" (formula "73"))
                  (rule "notLeft" (formula "73"))
                  (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "49"))
                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "19"))
                  (rule "ssubsortDirect" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "52"))
                  (rule "ssubsortDirect" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "replace_known_right" (formula "28") (term "0,0,1") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "applyEq" (formula "77") (term "1,0,1") (ifseqformula "85"))
                  (rule "polySimp_addAssoc" (formula "77") (term "0,1"))
                  (rule "add_literals" (formula "77") (term "0,0,1"))
                  (rule "add_zero_left" (formula "77") (term "0,1"))
                  (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "56"))
                  (rule "ssubsortDirect" (formula "77") (term "0"))
                   (builtin "One Step Simplification" (formula "77"))
                  (rule "applyEq" (formula "96") (term "0,0,0,1") (ifseqformula "2"))
                  (rule "castDel" (formula "96") (term "0,0,1"))
                  (rule "replace_known_right" (formula "96") (term "0,1") (ifseqformula "95"))
                   (builtin "One Step Simplification" (formula "96"))
                  (rule "applyEq" (formula "67") (term "0,1") (ifseqformula "85"))
                  (rule "polySimp_homoEq" (formula "67") (term "1"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,0,1"))
                  (rule "mul_literals" (formula "67") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "67") (term "0,0,1"))
                  (rule "add_literals" (formula "67") (term "0,0,0,1"))
                  (rule "add_zero_left" (formula "67") (term "0,0,1"))
                  (rule "applyEq" (formula "69") (term "1,0,0,1,0,0") (ifseqformula "84"))
                  (rule "replace_known_left" (formula "69") (term "0,1,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "69"))
                  (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "69"))
                  (rule "hideAuxiliaryEq" (formula "69"))
                  (rule "applyEq" (formula "70") (term "1") (ifseqformula "83"))
                  (rule "applyEq" (formula "60") (term "1,0,0,1,0,0") (ifseqformula "83"))
                  (rule "replace_known_left" (formula "60") (term "0,1,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "applyEqReverse" (formula "61") (term "1,1,0") (ifseqformula "60"))
                  (rule "applyEqReverse" (formula "61") (term "0,0,0,0,0") (ifseqformula "60"))
                  (rule "applyEqReverse" (formula "61") (term "1,2,0") (ifseqformula "60"))
                  (rule "applyEqReverse" (formula "61") (term "1,0,0,1,0,0") (ifseqformula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "51"))
                  (rule "ssubsortDirect" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "applyEq" (formula "70") (term "1") (ifseqformula "82"))
                  (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "51"))
                  (rule "ssubsortDirect" (formula "22") (term "0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "56"))
                  (rule "ssubsortDirect" (formula "72") (term "0"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "19"))
                  (rule "ssubsortDirect" (formula "33") (term "0"))
                   (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "20"))
                  (rule "ssubsortDirect" (formula "40") (term "0"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "52"))
                  (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "56"))
                  (rule "ssubsortDirect" (formula "74") (term "0"))
                   (builtin "One Step Simplification" (formula "74"))
                  (rule "notLeft" (formula "74"))
                  (rule "replace_known_right" (formula "86") (term "1") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "86"))
                  (rule "false_right" (formula "86"))
                  (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "56"))
                  (rule "ssubsortDirect" (formula "80") (term "0"))
                   (builtin "One Step Simplification" (formula "80"))
                  (rule "andLeft" (formula "80"))
                  (rule "andLeft" (formula "80"))
                  (rule "andLeft" (formula "80"))
                  (rule "andLeft" (formula "80"))
                  (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "86"))
                  (rule "polySimp_homoEq" (formula "66") (term "0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                  (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0"))
                  (rule "add_zero_left" (formula "66") (term "0,0"))
                  (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "20"))
                  (rule "ssubsortDirect" (formula "44") (term "0"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "applyEq" (formula "98") (term "1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "98") (term "1,1") (ifseqformula "2"))
                  (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "86"))
                  (rule "polySimp_homoEq" (formula "64") (term "1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                  (rule "add_literals" (formula "64") (term "0,0,1"))
                  (rule "add_zero_left" (formula "64") (term "0,1"))
                  (rule "applyEq" (formula "60") (term "1,1,0,0,1,0,0") (ifseqformula "85"))
                  (rule "replace_known_left" (formula "60") (term "0,1,0,0") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "applyEqReverse" (formula "64") (term "0,0") (ifseqformula "60"))
                  (rule "applyEqReverse" (formula "63") (term "0,1") (ifseqformula "60"))
                  (rule "hideAuxiliaryEq" (formula "60"))
                  (rule "applyEq" (formula "70") (term "1") (ifseqformula "71"))
                  (rule "applyEq" (formula "96") (term "0,1,0") (ifseqformula "2"))
                  (rule "castDel" (formula "96") (term "1,0"))
                  (rule "close" (formula "96") (ifseqformula "5"))
               )
               (branch " (o_0, f_0) ∊ self.* ∧ ¬f_0 = java.lang.Object::<created> ∨ (o_0, f_0) ∊ freshLocs(heap) FALSE"
                   (builtin "One Step Simplification" (formula "91"))
                  (rule "closeTrue" (formula "91"))
               )
            )
         )
         (branch "Exceptional Post (__insertHead_trampoline)"
             (builtin "One Step Simplification" (formula "45"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "48"))
            (rule "notLeft" (formula "46"))
            (rule "close" (formula "49") (ifseqformula "48"))
         )
         (branch "Pre (__insertHead_trampoline)"
             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "2")) (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
            (rule "polySimp_homoEq" (formula "28") (term "1,0,0,0,0,1"))
            (rule "polySimp_homoEq" (formula "8") (term "1"))
            (rule "polySimp_homoEq" (formula "9") (term "1"))
            (rule "polySimp_homoEq" (formula "28") (term "1,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1"))
            (rule "polySimp_addComm1" (formula "9") (term "0,1"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,1,0,0,1"))
            (rule "inEqSimp_gtToGeq" (formula "27") (term "1"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "27") (term "0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0"))
            (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "40"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "42"))
            (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "notLeft" (formula "36"))
            (rule "replace_known_right" (formula "37") (term "0,0,0,1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "notLeft" (formula "36"))
            (rule "replace_known_right" (formula "37") (term "0,0,0,1") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "39"))
            (rule "ssubsortDirect" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "notLeft" (formula "23"))
            (rule "replace_known_left" (formula "25") (term "1,0,1") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "12"))
            (rule "ssubsortDirect" (formula "28") (term "0"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "44"))
            (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "12"))
            (rule "ssubsortDirect" (formula "25") (term "0"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "34") (term "0"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "12"))
            (rule "ssubsortDirect" (formula "27") (term "0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "43"))
            (rule "ssubsortDirect" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "37") (term "0"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "43"))
            (rule "ssubsortDirect" (formula "21") (term "0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "replace_known_right" (formula "23") (term "0,0,1") (ifseqformula "45"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "43"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "42"))
            (rule "ssubsortDirect" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "40") (term "0"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "andLeft" (formula "40"))
            (rule "replace_known_left" (formula "39") (term "0,1") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "43"))
            (rule "ssubsortDirect" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "39") (term "0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "polySimp_sepPosMonomial" (formula "8") (term "1"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1"))
            (rule "mul_literals" (formula "8") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "9") (term "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1"))
            (rule "mul_literals" (formula "9") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
            (rule "mul_literals" (formula "29") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "27") (term "1"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
            (rule "mul_literals" (formula "27") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26"))
            (rule "mul_literals" (formula "26") (term "1"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
            (rule "times_zero_1" (formula "21") (term "0,0"))
            (rule "add_zero_left" (formula "21") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "40"))
            (rule "times_zero_1" (formula "41") (term "0,0"))
            (rule "add_zero_left" (formula "41") (term "0"))
            (rule "Free_class_invariant_axiom_for_case_study_Product" (formula "20") (ifseqformula "48"))
            (rule "qeq_literals" (formula "20") (term "0,0,1,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "leq_literals" (formula "20") (term "1,0,1,1,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "leq_literals" (formula "20") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "qeq_literals" (formula "20") (term "0,1,1,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "51"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "51"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "23"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "30"))
            (rule "times_zero_1" (formula "25") (term "0,0"))
            (rule "add_zero_left" (formula "25") (term "0"))
            (rule "Free_class_invariant_axiom_for_case_study_Customer" (formula "42") (ifseqformula "58"))
            (rule "leq_literals" (formula "42") (term "1,0,1,1"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "qeq_literals" (formula "42") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "andLeft" (formula "42"))
            (rule "andLeft" (formula "42"))
            (rule "andLeft" (formula "42"))
            (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "40"))
            (rule "ssubsortDirect" (formula "42") (term "0"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "40"))
            (rule "ssubsortDirect" (formula "44") (term "0"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "notLeft" (formula "44"))
            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "40"))
            (rule "ssubsortDirect" (formula "44") (term "0"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "44"))
            (rule "leq_literals" (formula "50") (term "0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "true_left" (formula "50"))
            (rule "Free_class_invariant_axiom_for_case_study_Customer" (formula "18") (ifseqformula "59"))
            (rule "qeq_literals" (formula "18") (term "0,0,1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "leq_literals" (formula "18") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "16"))
            (rule "ssubsortDirect" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "notLeft" (formula "20"))
            (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "16"))
            (rule "ssubsortDirect" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "16"))
            (rule "ssubsortDirect" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "20"))
            (rule "leq_literals" (formula "30") (term "0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "Free_class_invariant_axiom_for_case_study_Product" (formula "50") (ifseqformula "63"))
            (rule "qeq_literals" (formula "50") (term "0,0,1,1,0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "leq_literals" (formula "50") (term "1,0,1,1"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "qeq_literals" (formula "50") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "leq_literals" (formula "50") (term "0,1,1,0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "50") (term "0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "53") (term "0"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "andLeft" (formula "53"))
            (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "55") (term "0"))
             (builtin "One Step Simplification" (formula "55"))
            (rule "andLeft" (formula "55"))
            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "notLeft" (formula "52"))
            (rule "applyEq" (formula "53") (term "0") (ifseqformula "59"))
            (rule "applyEq" (formula "52") (term "0") (ifseqformula "58"))
            (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "57"))
            (rule "times_zero_1" (formula "53") (term "0,0"))
            (rule "add_zero_left" (formula "53") (term "0"))
            (rule "Class_invariant_axiom_for_case_study_Node" (formula "73") (ifseqformula "72"))
            (rule "closeTrue" (formula "73"))
         )
      )
      (branch "if _newHead.__getPrice_trampoline(true) <= this.head.__getPrice_trampoline(true) false"
          (builtin "One Step Simplification" (formula "47"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "elim_double_block_2" (formula "47") (term "1"))
          (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore___insertTail_trampoline,exc_2,heapAfter___insertTail_trampoline,anon_heap___insertTail_trampoline") (contract "case_study.Node[case_study.Node::__insertTail_trampoline(case_study.Order,boolean,boolean,boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
         (branch "Post (__insertTail_trampoline)"
             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "47")))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "44"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "48"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "47"))
            (rule "andLeft" (formula "48"))
            (rule "polySimp_addComm0" (formula "50") (term "1"))
            (rule "polySimp_addComm0" (formula "47") (term "1,1,1"))
            (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=case_study_Node_head_0"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "57")) (ifInst ""  (formula "2")))
            (rule "replaceKnownSelect_taclet0100_0" (formula "47") (term "1,1,1,1,0,1"))
            (rule "eqSymm" (formula "50"))
            (rule "hideAuxiliaryEq" (formula "50"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_1" (formula "49") (term "1"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_1" (formula "47") (term "1,1,1,1,0,1"))
            (rule "elementOfInfiniteUnion" (formula "49") (term "0,0"))
             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "2")) (ifInst ""  (formula "56")))
            (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_packed_0"))
            (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")) (ifInst ""  (formula "2")))
            (rule "elementOfInfiniteUnion" (formula "45") (term "0,0"))
             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "2")) (ifInst ""  (formula "57")))
            (rule "hideAuxiliaryEq" (formula "45"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "45") (term "0"))
            (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=case_study_Node_size_0"))
            (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "57")) (ifInst ""  (formula "2")))
            (rule "replaceKnownSelect_taclet0100_4" (formula "47") (term "0,1,0"))
            (rule "replaceKnownSelect_taclet0100_4" (formula "47") (term "0,1,1"))
            (rule "elementOfInfiniteUnion" (formula "50") (term "0,0"))
             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "2")) (ifInst ""  (formula "57")))
            (rule "hideAuxiliaryEq" (formula "50"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "50") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "47") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "47") (term "0,1,1"))
            (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_packed_1"))
            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
            (rule "elementOfInfiniteUnion" (formula "46") (term "0,0"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "56")))
            (rule "hideAuxiliaryEq" (formula "46"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_7" (formula "46") (term "0"))
            (rule "pullOutSelect" (formula "46") (term "0,0,0,0,1") (inst "selectSK=case_study_Node_tail_0"))
            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "56")) (ifInst ""  (formula "2")))
            (rule "replaceKnownSelect_taclet0100_8" (formula "47") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "47") (term "1,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "47") (term "1,1,1,0,1,0,1"))
            (rule "elementOfInfiniteUnion" (formula "46") (term "0,0"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "2")) (ifInst ""  (formula "56")))
            (rule "hideAuxiliaryEq" (formula "46"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "46") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "46") (term "0,0,0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "46") (term "1,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "46") (term "1,1,1,0,1,0,1"))
            (rule "pullOutSelect" (formula "46") (term "1,1,0,1") (inst "selectSK=case_study_Product_price_0"))
            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "elementOfInfiniteUnion" (formula "46") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "pullOutSelect" (formula "47") (term "1,1,1,1") (inst "selectSK=case_study_Node_size_1"))
            (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "elementOfInfiniteUnion" (formula "47") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "pullOutSelect" (formula "48") (term "0,1,0,1") (inst "selectSK=case_study_Product_price_1"))
            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "elementOfInfiniteUnion" (formula "48") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "pullOutSelect" (formula "46") (term "0,0,0,1,0,0") (inst "selectSK=case_study_Order_product_0"))
            (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "57")))
            (rule "replaceKnownSelect_taclet0100_13" (formula "47") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "47") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "47") (term "0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "47") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "47") (term "0,0,0,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "47") (term "0,1,0,0,0,0,0,0"))
            (rule "elementOfInfiniteUnion" (formula "46") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "57")))
            (rule "ifthenelse_negated" (formula "46") (term "0"))
            (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0,0,0") (inst "selectSK=case_study_Order_product_1"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownSelect_taclet0100_14" (formula "50") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0100_14" (formula "50") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0100_14" (formula "50") (term "0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_14" (formula "50") (term "0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_14" (formula "50") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_14" (formula "50") (term "0,1,0,0,0,0,0,0"))
            (rule "elementOfInfiniteUnion" (formula "49") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "pullOutSelect" (formula "49") (term "0,0,0,1,0,0") (inst "selectSK=case_study_Node_head_1"))
            (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "replaceKnownSelect_taclet0100_15" (formula "50") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0100_15" (formula "50") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0100_15" (formula "50") (term "0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_15" (formula "50") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_15" (formula "50") (term "0,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_15" (formula "50") (term "0,0,0,1,0,0,0,0"))
            (rule "elementOfInfiniteUnion" (formula "49") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "limit_java_lang_Object__inv_free_" (formula "53"))
            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "54"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "Class_invariant_axiom_for_case_study_Node" (formula "57") (ifseqformula "62"))
            (rule "true_left" (formula "57"))
            (rule "Free_class_invariant_axiom_for_case_study_Node" (formula "54") (ifseqformula "61"))
            (rule "replaceKnownSelect_taclet0100_2" (formula "54") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "54") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0100_2" (formula "54") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet0100_4" (formula "54") (term "0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "54") (term "0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "54") (term "0,1,1,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "0,0,0,1,1"))
            (rule "replaceKnownSelect_taclet0100_2" (formula "54") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "0,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "54") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_0" (formula "54") (term "0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,0,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_2" (formula "54") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,0,0,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0100_0" (formula "54") (term "1,0,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "0,0,1,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,0,1,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_1" (formula "54") (term "0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,0,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_11" (formula "54") (term "0,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "54") (term "0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_2" (formula "54") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_0" (formula "54") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,0,0,0,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,1,0,1,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,0,0,1,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_1" (formula "54") (term "1,0,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "0,0,1,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,0,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0100_2" (formula "54") (term "0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,1,1,1,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,0,1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_11" (formula "54") (term "0,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0100_8" (formula "54") (term "1,1,1,1,0,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_0" (formula "54") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "54") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_1" (formula "54") (term "1,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,0,0,0,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,1,0,1,1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_3" (formula "54") (term "0,0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,1,1,1,1,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_12" (formula "54") (term "1,1,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,0,1,1,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_9" (formula "54") (term "1,1,1,1,0,1,0,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_1" (formula "54") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "replace_known_right" (formula "59") (term "0,1") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "true_left" (formula "59"))
            (rule "polySimp_addComm0" (formula "60") (term "1,1,1,1"))
            (rule "sortsDisjointModuloNull" (formula "58") (term "0,1"))
            (rule "replace_known_right" (formula "58") (term "1,0,1") (ifseqformula "65"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "pullOutSelect" (formula "59") (term "1,1,0,1,0,1,1") (inst "selectSK=case_study_Node_head_2"))
            (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "elementOfInfiniteUnion" (formula "59") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "59"))
            (rule "pullOutSelect" (formula "60") (term "0,0,0,0,1,1") (inst "selectSK=case_study_Node_tail_1"))
            (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "59") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "59") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "61") (term "0,0,1,0,1"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "59") (term "0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "59") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "61") (term "1,1,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "59") (term "1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_17" (formula "59") (term "1,0,0,1,1,0,0"))
            (rule "elementOfInfiniteUnion" (formula "60") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "pullOutSelect" (formula "56") (term "0,1") (inst "selectSK=java_lang_Object_packed_2"))
            (rule "simplifySelectOfAnonEQ" (formula "56") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "elementOfInfiniteUnion" (formula "56") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "56"))
            (rule "pullOutSelect" (formula "54") (term "0,1") (inst "selectSK=java_lang_Object_packed_3"))
            (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "68")))
            (rule "elementOfInfiniteUnion" (formula "54") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "68")))
            (rule "ifthenelse_negated" (formula "54") (term "0"))
            (rule "pullOutSelect" (formula "63") (term "0,1,0,1,1") (inst "selectSK=case_study_Product_price_2"))
            (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "elementOfInfiniteUnion" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "pullOutSelect" (formula "64") (term "1,1,1,1,1") (inst "selectSK=case_study_Node_size_2"))
            (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "elementOfInfiniteUnion" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "pullOutSelect" (formula "63") (term "1,0,0,1,1,0,0") (inst "selectSK=case_study_Order_product_2"))
            (rule "simplifySelectOfAnonEQ" (formula "63") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "replaceKnownSelect_taclet0100_22" (formula "64") (term "1,1,0"))
            (rule "replaceKnownSelect_taclet0100_22" (formula "64") (term "1,2,0"))
            (rule "replaceKnownSelect_taclet0100_22" (formula "64") (term "0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_22" (formula "64") (term "0,0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_22" (formula "64") (term "0,1,0,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_22" (formula "64") (term "0,0,0,1,0,0,0,0"))
            (rule "elementOfInfiniteUnion" (formula "63") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "commute_and" (formula "44") (term "0,0,1,0"))
            (rule "cnf_rightDist" (formula "52"))
            (rule "andLeft" (formula "52"))
            (rule "methodCallEmpty" (formula "75") (term "1"))
            (rule "commute_and" (formula "48") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "ifthenelse_negated" (formula "48") (term "0"))
            (rule "commute_and_2" (formula "47") (term "0,0,0"))
            (rule "commute_and_2" (formula "51") (term "0,0,0"))
            (rule "commute_and_2" (formula "50") (term "0,0,0"))
            (rule "commute_and" (formula "49") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "ifthenelse_negated" (formula "49") (term "0"))
            (rule "limit_java_lang_Object__inv_free_" (formula "57"))
            (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "58"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "Free_class_invariant_axiom_for_case_study_Order" (formula "58") (ifseqformula "73"))
            (rule "replaceKnownSelect_taclet0100_19" (formula "58") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0100_19" (formula "58") (term "0,0,1,0"))
            (rule "replaceKnownSelect_taclet0100_19" (formula "58") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "58") (term "0,0,0,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "58") (term "1,0,1,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "58") (term "0,0,1,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "58") (term "1,1,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_19" (formula "58") (term "0,0,1,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_19" (formula "58") (term "0,0,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_13" (formula "58") (term "1,0,1,1,0,0,0,0,0"))
            (rule "replaceKnownSelect_taclet0100_19" (formula "58") (term "0,0,0,0,0,0,0,0,0"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "58"))
            (rule "andLeft" (formula "58"))
            (rule "inEqSimp_commuteLeq" (formula "65") (term "1,1,1"))
            (rule "pullOutSelect" (formula "65") (term "0,0,1") (inst "selectSK=case_study_Order_witness_0"))
            (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "81")))
            (rule "replaceKnownSelect_taclet0100_23" (formula "64") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0100_23" (formula "64") (term "1,1,1,1"))
            (rule "replaceKnownSelect_taclet0100_23" (formula "66") (term "0,1,1,1"))
            (rule "elementOfInfiniteUnion" (formula "65") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "81")))
            (rule "ifthenelse_negated" (formula "65") (term "0"))
            (rule "inEqSimp_commuteGeq" (formula "66") (term "1,1,1"))
            (rule "pullOutSelect" (formula "64") (term "0,0,0,1,1") (inst "selectSK=case_study_Order_customer_0"))
            (rule "simplifySelectOfAnonEQ" (formula "64") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "82")))
            (rule "replaceKnownSelect_taclet0100_24" (formula "59") (term "1"))
            (rule "replaceKnownSelect_taclet0100_24" (formula "58") (term "1,0,1"))
            (rule "replaceKnownSelect_taclet0100_24" (formula "62") (term "0,0,1"))
            (rule "replaceKnownSelect_taclet0100_24" (formula "65") (term "1,0,1,1,1"))
            (rule "elementOfInfiniteUnion" (formula "64") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "82")))
            (rule "ifthenelse_negated" (formula "64") (term "0"))
            (rule "pullOutSelect" (formula "60") (term "0,1") (inst "selectSK=java_lang_Object_packed_4"))
            (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "elementOfInfiniteUnion" (formula "60") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "pullOutSelect" (formula "68") (term "0,1,1,1") (inst "selectSK=case_study_Product_ageRestriction_0"))
            (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "elementOfInfiniteUnion" (formula "68") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "pullOutSelect" (formula "58") (term "0,1") (inst "selectSK=java_lang_Object_packed_5"))
            (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "elementOfInfiniteUnion" (formula "58") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "pullOutSelect" (formula "67") (term "0,1,1,1") (inst "selectSK=case_study_Customer_age_0"))
            (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "elementOfInfiniteUnion" (formula "67") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "inEqSimp_commuteGeq" (formula "68") (term "1,1,1"))
            (rule "cnf_rightDist" (formula "81") (term "0,1"))
            (rule "cnf_rightDist" (formula "53"))
            (rule "andLeft" (formula "53"))
            (rule "commute_and" (formula "77") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "77"))
            (rule "ifthenelse_negated" (formula "77") (term "0"))
            (rule "commute_and_2" (formula "82") (term "1,1"))
            (rule "cnf_rightDist" (formula "52"))
            (rule "andLeft" (formula "52"))
            (rule "commute_and" (formula "79") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "79"))
            (rule "ifthenelse_negated" (formula "79") (term "0"))
            (rule "commute_and" (formula "74") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "ifthenelse_negated" (formula "74") (term "0"))
            (rule "commute_or" (formula "54"))
            (rule "limit_java_lang_Object__inv_free_" (formula "65"))
            (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "65"))
            (rule "commute_or" (formula "52"))
            (rule "commute_and" (formula "83") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "83"))
            (rule "ifthenelse_negated" (formula "83") (term "0"))
            (rule "commute_and_2" (formula "82") (term "0,0,0"))
            (rule "commute_and_2" (formula "81") (term "0,0,0"))
            (rule "limit_java_lang_Object__inv_free_" (formula "62"))
            (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "63"))
             (builtin "One Step Simplification" (formula "62"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0,0") (ifseqformula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,1,1,1") (ifseqformula "1"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "92"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "hideAuxiliaryEq" (formula "48"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "67") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "68") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "70") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "76") (term "0,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "0,0,0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "48") (term "0,1,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "0,1,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "65") (term "0,1,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_29" (formula "75") (term "0,0,0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "74") (term "0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "74"))
            (rule "hideAuxiliaryEq" (formula "74"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_30" (formula "75") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_30" (formula "73") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_30" (formula "75") (term "1,1,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_30" (formula "73") (term "0,1,1,1"))
            (rule "replace_known_left" (formula "71") (term "0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "71"))
            (rule "hideAuxiliaryEq" (formula "71"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "64") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "63") (term "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "69") (term "0,0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "1,2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "72") (term "0,0,0,1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "0,1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "0,0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "1,0,0,1,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "0,1,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "0,1,0,1,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "61") (term "0,0,0,0,0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_31" (formula "71") (term "0,0,0,0,0,0,0,0"))
            (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "hideAuxiliaryEq" (formula "58"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "73") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "71") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "69") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "68") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "61") (term "0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "58") (term "0,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0100_32" (formula "65") (term "0,0"))
            (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "true_left" (formula "58"))
            (rule "inEqSimp_commuteLeq" (formula "70") (term "1,1,1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0,1") (ifseqformula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1,1,1") (ifseqformula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "1,0") (ifseqformula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "1,1,0,1") (ifseqformula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "1") (ifseqformula "1"))
            (rule "cnf_rightDist" (formula "57") (term "0,0"))
            (rule "cnf_rightDist" (formula "56") (term "0,0"))
            (rule "cnf_rightDist" (formula "59"))
            (rule "andLeft" (formula "59"))
            (rule "commute_or" (formula "86") (term "1,0,1"))
            (rule "commute_or" (formula "86") (term "0,0,1"))
            (rule "cnf_rightDist" (formula "58"))
             (builtin "One Step Simplification" (formula "58"))
            (rule "tryEmpty" (formula "94") (term "1"))
            (rule "limit_java_lang_Object__inv_free_" (formula "72"))
            (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "71")))
            (rule "true_left" (formula "72"))
            (rule "commute_or" (formula "59"))
            (rule "commute_or" (formula "60"))
            (rule "commute_or" (formula "58"))
            (rule "limit_java_lang_Object__inv_free_" (formula "68"))
            (rule "replace_known_left" (formula "68") (term "1") (ifseqformula "69"))
             (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
            (rule "true_left" (formula "68"))
            (rule "cnf_rightDist" (formula "84") (term "0,0"))
            (rule "cnf_rightDist" (formula "83") (term "0,0"))
            (rule "commute_and_2" (formula "69") (term "0,0,0"))
            (rule "commute_and_2" (formula "75") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "53") (term "0,0"))
            (rule "commute_or" (formula "57") (term "0,0,0"))
            (rule "commute_or" (formula "56") (term "0,0,0"))
            (rule "commute_and_2" (formula "65") (term "0,0,0"))
            (rule "commute_or" (formula "84") (term "0,0,0"))
            (rule "commute_and_2" (formula "73") (term "0,0,0"))
            (rule "shift_paren_and" (formula "74") (term "1"))
            (rule "commute_or" (formula "83") (term "0,0,0"))
            (rule "commute_or" (formula "53") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "86") (term "1"))
            (rule "shift_paren_and" (formula "76") (term "1"))
            (rule "commute_and" (formula "74") (term "0,1"))
            (rule "cnf_rightDist" (formula "57") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "56") (term "1,0,0"))
            (rule "commute_and" (formula "76") (term "0,1"))
            (rule "cnf_rightDist" (formula "86") (term "1,1"))
            (rule "commute_or" (formula "86") (term "0,1,1"))
            (rule "cnf_rightDist" (formula "69") (term "0,0"))
            (rule "commute_or" (formula "69") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "75") (term "0,0"))
            (rule "commute_or" (formula "75") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "84") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "83") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "65") (term "0,0"))
            (rule "commute_or" (formula "65") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "53") (term "1,0,0"))
            (rule "cnf_rightDist" (formula "73") (term "0,0"))
            (rule "commute_or" (formula "73") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "57") (term "0,0,0"))
            (rule "commute_or" (formula "57") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "56") (term "0,0,0"))
            (rule "commute_or" (formula "56") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "84") (term "0,0,0"))
            (rule "commute_or" (formula "84") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "86") (term "0,1"))
            (rule "commute_or" (formula "86") (term "0,0,1"))
            (rule "cnf_rightDist" (formula "83") (term "0,0,0"))
            (rule "commute_or" (formula "83") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "53") (term "0,0,0"))
            (rule "commute_or" (formula "53") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "69") (term "1,0,0"))
            (rule "commute_or" (formula "69") (term "1,1,0,0"))
            (rule "cnf_rightDist" (formula "69") (term "0,0,0"))
            (rule "commute_or" (formula "69") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "75") (term "1,0,0"))
            (rule "commute_or" (formula "75") (term "1,1,0,0"))
            (rule "cnf_rightDist" (formula "75") (term "0,0,0"))
            (rule "commute_or" (formula "75") (term "1,0,0,0"))
            (rule "cnf_rightDist" (formula "65") (term "1,0,0"))
            (rule "commute_or" (formula "65") (term "1,1,0,0"))
            (rule "emptyModality" (formula "94") (term "1"))
            (rule "andRight" (formula "94"))
            (branch "Case 1"
               (rule "andRight" (formula "94"))
               (branch "Case 1"
                  (rule "andRight" (formula "94"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "94"))
                     (rule "replaceKnownSelect_taclet0100_4" (formula "94") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0100_5" (formula "94") (term "0"))
                     (rule "close" (formula "94") (ifseqformula "88"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "94") (userinteraction))
                     (rule "Class_invariant_axiom_for_case_study_Node" (formula "94") (ifseqformula "93") (userinteraction))
                     (rule "closeTrue" (formula "94"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "94"))
                  (rule "closeTrue" (formula "94"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "94") (userinteraction))
               (rule "allRight" (formula "94") (inst "sk=f_0") (userinteraction))
               (rule "allRight" (formula "94") (inst "sk=o_0") (userinteraction))
               (rule "orRight" (formula "94"))
               (rule "orRight" (formula "94"))
               (rule "selectOfAnonEQ" (formula "96") (term "1") (ifseqformula "51") (userinteraction))
               (rule "ifthenelse_split" (formula "96") (term "1") (userinteraction))
               (branch " (o_0, f_0) ∊ infiniteUnion{case_study.Node n;}(if ( ¬ n = null ∧ n.<created> = TRUE) then (n.*) else (∅)) ∧ ¬f_0 = java.lang.Object::<created> ∨ (o_0, f_0) ∊ freshLocs(heap) TRUE"
                  (rule "orLeft" (formula "1") (userinteraction))
                  (branch " (o_0, f_0) ∊ infiniteUnion{case_study.Node n;}(if ( ¬ n = null ∧ n.<created> = TRUE) then (n.*) else (∅)) ∧ ¬f_0 = java.lang.Object::<created>"
                     (rule "andLeft" (formula "1") (userinteraction))
                     (rule "elementOfInfiniteUnion" (formula "1") (userinteraction))
                     (rule "exLeft" (formula "1") (inst "sk=n_0") (userinteraction))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "typeEqDerived" (formula "97") (term "0,1") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "97"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "eqSymm" (formula "100"))
                     (rule "polySimp_homoEq" (formula "88") (term "0,1,0,1"))
                     (rule "polySimp_homoEq" (formula "34") (term "1,0,0,0,0,1"))
                     (rule "polySimp_homoEq" (formula "11") (term "1"))
                     (rule "polySimp_homoEq" (formula "10") (term "1"))
                     (rule "polySimp_homoEq" (formula "34") (term "1,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "88") (term "0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,1,0,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "10") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,1,1,0,0,1"))
                     (rule "inEqSimp_geqRight" (formula "94"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "34") (term "1"))
                     (rule "mul_literals" (formula "34") (term "1,0,0,1"))
                     (rule "add_literals" (formula "34") (term "0,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "83") (term "1"))
                     (rule "mul_literals" (formula "83") (term "1,0,0,1"))
                     (rule "add_literals" (formula "83") (term "0,0,1"))
                     (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "50"))
                     (rule "ssubsortDirect" (formula "73") (term "0"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "applyEq" (formula "83") (term "1,0,1") (ifseqformula "91"))
                     (rule "polySimp_addAssoc" (formula "83") (term "0,1"))
                     (rule "add_literals" (formula "83") (term "0,0,1"))
                     (rule "add_zero_left" (formula "83") (term "0,1"))
                     (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "20"))
                     (rule "ssubsortDirect" (formula "37") (term "0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "50"))
                     (rule "ssubsortDirect" (formula "30") (term "0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "replace_known_right" (formula "77") (term "0,0,0,0,0") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "77") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
                     (rule "replace_known_right" (formula "69") (term "1,1,0,1,0,0") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
                     (rule "replace_known_right" (formula "78") (term "0,0,0,1") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "30")))
                     (rule "replace_known_left" (formula "80") (term "1,0,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "replace_known_left" (formula "32") (term "1,0,1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "ifthenelse_negated" (formula "76") (term "0"))
                     (rule "applyEq" (formula "99") (term "0,1,0,0") (ifseqformula "3"))
                     (rule "castDel" (formula "99") (term "1,0,0"))
                     (rule "replace_known_left" (formula "99") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "99"))
                     (rule "notRight" (formula "99"))
                     (rule "applyEq" (formula "101") (term "1,0") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "100") (term "0,0,0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "100") (term "0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "100"))
                     (rule "notRight" (formula "100"))
                     (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "53"))
                     (rule "applyEq" (formula "85") (term "0,0") (ifseqformula "57"))
                     (rule "ssubsortDirect" (formula "85") (term "0"))
                      (builtin "One Step Simplification" (formula "85"))
                     (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "22"))
                     (rule "ssubsortDirect" (formula "47") (term "0"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "notLeft" (formula "47"))
                     (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "replace_known_right" (formula "48") (term "0,0,0,1") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "22"))
                     (rule "ssubsortDirect" (formula "46") (term "0"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "notLeft" (formula "46"))
                     (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "replace_known_right" (formula "46") (term "0,0,0,1") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "46"))
                     (rule "applyEq" (formula "89") (term "0,0") (ifseqformula "55"))
                     (rule "ssubsortDirect" (formula "89") (term "0"))
                      (builtin "One Step Simplification" (formula "89"))
                     (rule "andLeft" (formula "89"))
                     (rule "andLeft" (formula "89"))
                     (rule "andLeft" (formula "91"))
                     (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "21"))
                     (rule "ssubsortDirect" (formula "37") (term "0"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "54"))
                     (rule "ssubsortDirect" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "applyEqRigid" (formula "108") (term "1,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "67") (term "0,1") (ifseqformula "98"))
                     (rule "polySimp_homoEq" (formula "67") (term "1"))
                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "67") (term "1,0,1"))
                     (rule "mul_literals" (formula "67") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "67") (term "0,1"))
                     (rule "add_literals" (formula "67") (term "0,0,1"))
                     (rule "add_zero_left" (formula "67") (term "0,1"))
                     (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "54"))
                     (rule "ssubsortDirect" (formula "30") (term "0"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "replace_known_right" (formula "59") (term "0,0,1,0,0,0") (ifseqformula "99"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "99")) (ifInst ""  (formula "99")) (ifInst ""  (formula "99")))
                     (rule "replace_known_right" (formula "75") (term "0,0,1,0,0,0") (ifseqformula "99"))
                      (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "99")) (ifInst ""  (formula "99")) (ifInst ""  (formula "99")))
                     (rule "replace_known_right" (formula "81") (term "1,1,0,1,0,0") (ifseqformula "99"))
                      (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "99")) (ifInst ""  (formula "99")) (ifInst ""  (formula "99")))
                     (rule "replace_known_right" (formula "82") (term "0,0,1") (ifseqformula "99"))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "99"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "replace_known_left" (formula "75") (term "0,0,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "19")))
                     (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "75"))
                     (rule "hideAuxiliaryEq" (formula "75"))
                     (rule "replace_known_left" (formula "80") (term "0,0,1,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "19")))
                     (rule "applyEqReverse" (formula "81") (term "1,1") (ifseqformula "80"))
                     (rule "hideAuxiliaryEq" (formula "80"))
                     (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "19")))
                     (rule "applyEqReverse" (formula "65") (term "1,1") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "66") (term "1,0") (ifseqformula "59"))
                     (rule "hideAuxiliaryEq" (formula "59"))
                     (rule "replace_known_right" (formula "32") (term "0,0,1") (ifseqformula "96"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "74"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "inEqSimp_commuteGeq" (formula "78") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "63") (term "1"))
                     (rule "inEqSimp_commuteGeq" (formula "64") (term "0"))
                     (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "52"))
                     (rule "ssubsortDirect" (formula "70") (term "0"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "21"))
                     (rule "ssubsortDirect" (formula "34") (term "0"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "applyEq" (formula "65") (term "0,1") (ifseqformula "92"))
                     (rule "polySimp_homoEq" (formula "65") (term "1"))
                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "65") (term "1,0,1"))
                     (rule "mul_literals" (formula "65") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "65") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "65") (term "0,0,1"))
                     (rule "add_literals" (formula "65") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "65") (term "0,0,1"))
                     (rule "applyEq" (formula "62") (term "0,1") (ifseqformula "92"))
                     (rule "polySimp_homoEq" (formula "62") (term "1"))
                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "62") (term "1,0,1"))
                     (rule "mul_literals" (formula "62") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "62") (term "0,1"))
                     (rule "add_literals" (formula "62") (term "0,0,1"))
                     (rule "add_zero_left" (formula "62") (term "0,1"))
                     (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "53"))
                     (rule "applyEq" (formula "79") (term "0,0") (ifseqformula "57"))
                     (rule "ssubsortDirect" (formula "79") (term "0"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "22"))
                     (rule "ssubsortDirect" (formula "45") (term "0"))
                      (builtin "One Step Simplification" (formula "45"))
                     (rule "applyEq" (formula "66") (term "0,1") (ifseqformula "92"))
                     (rule "polySimp_homoEq" (formula "66") (term "1"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,0,1"))
                     (rule "mul_literals" (formula "66") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "66") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "66") (term "0,0,1"))
                     (rule "add_literals" (formula "66") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "66") (term "0,0,1"))
                     (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "92"))
                     (rule "polySimp_homoEq" (formula "66") (term "0"))
                     (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "66") (term "1,0,0"))
                     (rule "mul_literals" (formula "66") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                     (rule "add_literals" (formula "66") (term "0,0,0"))
                     (rule "add_zero_left" (formula "66") (term "0,0"))
                     (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "21"))
                     (rule "ssubsortDirect" (formula "32") (term "0"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "53"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "52"))
                     (rule "ssubsortDirect" (formula "31") (term "0"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "78") (term "1") (ifseqformula "79"))
                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "22"))
                     (rule "ssubsortDirect" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "andLeft" (formula "48"))
                     (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "50"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "5"))
                     (rule "castDel" (formula "2") (term "0"))
                     (rule "close" (formula "99") (ifseqformula "2"))
                  )
                  (branch "(o_0, f_0) ∊ freshLocs(heap)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch " (o_0, f_0) ∊ infiniteUnion{case_study.Node n;}(if ( ¬ n = null ∧ n.<created> = TRUE) then (n.*) else (∅)) ∧ ¬f_0 = java.lang.Object::<created> ∨ (o_0, f_0) ∊ freshLocs(heap) FALSE"
                   (builtin "One Step Simplification" (formula "97"))
                  (rule "closeTrue" (formula "97"))
               )
            )
         )
         (branch "Exceptional Post (__insertTail_trampoline)"
             (builtin "One Step Simplification" (formula "44"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "andLeft" (formula "44"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "46"))
            (rule "andLeft" (formula "45"))
            (rule "andLeft" (formula "47"))
            (rule "notLeft" (formula "45"))
            (rule "close" (formula "49") (ifseqformula "48"))
         )
         (branch "Pre (__insertTail_trampoline)"
             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (ifInst ""  (formula "45")) (ifInst ""  (formula "4")))
            (rule "polySimp_homoEq" (formula "8") (term "1"))
            (rule "polySimp_homoEq" (formula "7") (term "1"))
            (rule "polySimp_homoEq" (formula "27") (term "1,0,0,0,0,1"))
            (rule "polySimp_homoEq" (formula "27") (term "1,1,0,0,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1"))
            (rule "polySimp_addComm1" (formula "7") (term "0,1"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0,0,0,1"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,1,0,0,1"))
            (rule "inEqSimp_geqRight" (formula "43"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "27") (term "1"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "27") (term "0,0,1"))
            (rule "inEqSimp_commuteGeq" (formula "47") (term "0"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "42"))
            (rule "inEqSimp_commuteLeq" (formula "47") (term "0"))
            (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "notLeft" (formula "36"))
            (rule "replace_known_right" (formula "37") (term "0,0,0,1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "40"))
            (rule "ssubsortDirect" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "41"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "40"))
            (rule "ssubsortDirect" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "replace_known_right" (formula "23") (term "0,0,0,1") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "39"))
            (rule "ssubsortDirect" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "39"))
            (rule "ssubsortDirect" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "43"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "12"))
            (rule "ssubsortDirect" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "35") (term "0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "replace_known_right" (formula "36") (term "0,0,0,1") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "12"))
            (rule "ssubsortDirect" (formula "27") (term "0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "12"))
            (rule "ssubsortDirect" (formula "26") (term "0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "43"))
            (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "33") (term "0"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "36") (term "0"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "39") (term "0"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "andLeft" (formula "39"))
            (rule "replace_known_left" (formula "41") (term "0,1") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "43"))
            (rule "ssubsortDirect" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "42"))
            (rule "inEqSimp_commuteGeq" (formula "53") (term "0"))
            (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "13"))
            (rule "ssubsortDirect" (formula "41") (term "0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "polySimp_sepPosMonomial" (formula "9") (term "1"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1"))
            (rule "mul_literals" (formula "9") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "8") (term "1"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1"))
            (rule "mul_literals" (formula "8") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "29") (term "1"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1"))
            (rule "mul_literals" (formula "29") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "27") (term "1"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1"))
            (rule "mul_literals" (formula "27") (term "0,1,1"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26"))
            (rule "mul_literals" (formula "26") (term "1"))
            (rule "inEqSimp_subsumption0" (formula "53") (term "0") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
            (rule "mul_literals" (formula "53") (term "0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "53") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
            (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "53") (term "0,0,0"))
            (rule "qeq_literals" (formula "53") (term "0,0"))
             (builtin "One Step Simplification" (formula "53"))
            (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "40"))
            (rule "times_zero_1" (formula "39") (term "0,0"))
            (rule "add_zero_left" (formula "39") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
            (rule "times_zero_1" (formula "21") (term "0,0"))
            (rule "add_zero_left" (formula "21") (term "0"))
            (rule "Free_class_invariant_axiom_for_case_study_Product" (formula "20") (ifseqformula "50"))
            (rule "leq_literals" (formula "20") (term "1,0,1,1,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "qeq_literals" (formula "20") (term "0,0,1,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "qeq_literals" (formula "20") (term "0,1,1,0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "leq_literals" (formula "20") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "24") (term "0"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "23") (term "0"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "notLeft" (formula "22"))
            (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "18"))
            (rule "ssubsortDirect" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "51"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "51"))
            (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "29"))
            (rule "times_zero_1" (formula "24") (term "0,0"))
            (rule "add_zero_left" (formula "24") (term "0"))
            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
            (rule "mul_literals" (formula "22") (term "0,0"))
            (rule "add_zero_left" (formula "22") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "22"))
            (rule "mul_literals" (formula "22") (term "1"))
            (rule "Free_class_invariant_axiom_for_case_study_Customer" (formula "17") (ifseqformula "56"))
            (rule "leq_literals" (formula "17") (term "1,0,1,1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "qeq_literals" (formula "17") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "17"))
            (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "15"))
            (rule "ssubsortDirect" (formula "17") (term "0"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "15"))
            (rule "ssubsortDirect" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "15"))
            (rule "ssubsortDirect" (formula "19") (term "0"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "19"))
            (rule "leq_literals" (formula "30") (term "0"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "true_left" (formula "30"))
            (rule "Free_class_invariant_axiom_for_case_study_Customer" (formula "44") (ifseqformula "61"))
            (rule "leq_literals" (formula "44") (term "1,0,1,1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "qeq_literals" (formula "44") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "42"))
            (rule "ssubsortDirect" (formula "47") (term "0"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "andLeft" (formula "47"))
            (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "42"))
            (rule "ssubsortDirect" (formula "44") (term "0"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "42"))
            (rule "ssubsortDirect" (formula "46") (term "0"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "notLeft" (formula "46"))
            (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "46"))
            (rule "leq_literals" (formula "51") (term "0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "true_left" (formula "51"))
            (rule "Free_class_invariant_axiom_for_case_study_Product" (formula "50") (ifseqformula "61"))
            (rule "qeq_literals" (formula "50") (term "0,0,1,1,0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "leq_literals" (formula "50") (term "0,1,1,0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "qeq_literals" (formula "50") (term "0,0,1,1"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "leq_literals" (formula "50") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "andLeft" (formula "50"))
            (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "58"))
            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "54") (term "0"))
             (builtin "One Step Simplification" (formula "54"))
            (rule "andLeft" (formula "54"))
            (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "50") (term "0"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "notLeft" (formula "52"))
            (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "58"))
            (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "48"))
            (rule "ssubsortDirect" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "andLeft" (formula "52"))
            (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "25"))
            (rule "leq_literals" (formula "52") (term "0"))
             (builtin "One Step Simplification" (formula "52"))
            (rule "true_left" (formula "52"))
            (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "57"))
            (rule "times_zero_1" (formula "53") (term "0,0"))
            (rule "add_zero_left" (formula "53") (term "0"))
            (rule "Class_invariant_axiom_for_case_study_Node" (formula "73") (ifseqformula "72"))
            (rule "closeTrue" (formula "73"))
         )
      )
   )
   (branch "Exceptional Post (__getPrice_trampoline)"
       (builtin "One Step Simplification" (formula "37"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "36"))
      (rule "notLeft" (formula "34"))
      (rule "close" (formula "37") (ifseqformula "36"))
   )
   (branch "Pre (__getPrice_trampoline)"
       (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")))
      (rule "polySimp_homoEq" (formula "7") (term "1"))
      (rule "polySimp_homoEq" (formula "8") (term "1"))
      (rule "polySimp_homoEq" (formula "21") (term "1,1,0,0,0,1"))
      (rule "polySimp_homoEq" (formula "21") (term "1,1,0,0,1"))
      (rule "polySimp_addComm1" (formula "7") (term "0,1"))
      (rule "polySimp_addComm1" (formula "8") (term "0,1"))
      (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0,0,0,1"))
      (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0,0,1"))
      (rule "inEqSimp_gtToGeq" (formula "20") (term "1"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "20") (term "0,0,1"))
      (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "12"))
      (rule "ssubsortDirect" (formula "30") (term "0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "notLeft" (formula "30"))
      (rule "replace_known_right" (formula "31") (term "0,0,0,1") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
      (rule "ssubsortDirect" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "notLeft" (formula "19"))
      (rule "replace_known_right" (formula "18") (term "0,0,1") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "true_left" (formula "18"))
      (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "11"))
      (rule "ssubsortDirect" (formula "16") (term "0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
      (rule "ssubsortDirect" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "19"))
      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "12"))
      (rule "ssubsortDirect" (formula "32") (term "0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "andLeft" (formula "32"))
      (rule "andLeft" (formula "32"))
      (rule "notLeft" (formula "32"))
      (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "36"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "31"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "11"))
      (rule "ssubsortDirect" (formula "18") (term "0"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "11"))
      (rule "ssubsortDirect" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "12"))
      (rule "ssubsortDirect" (formula "28") (term "0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "12"))
      (rule "ssubsortDirect" (formula "25") (term "0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "12"))
      (rule "ssubsortDirect" (formula "33") (term "0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "polySimp_sepPosMonomial" (formula "7") (term "1"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1"))
      (rule "mul_literals" (formula "7") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1"))
      (rule "polySimp_sepPosMonomial" (formula "8") (term "1"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1"))
      (rule "mul_literals" (formula "8") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1"))
      (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1"))
      (rule "mul_literals" (formula "21") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
      (rule "polySimp_sepPosMonomial" (formula "20") (term "1"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1"))
      (rule "mul_literals" (formula "20") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18"))
      (rule "mul_literals" (formula "18") (term "1"))
      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
      (rule "times_zero_1" (formula "31") (term "0,0"))
      (rule "add_zero_left" (formula "31") (term "0"))
      (rule "commute_and" (formula "41"))
      (rule "Free_class_invariant_axiom_for_case_study_Customer" (formula "27") (ifseqformula "36"))
      (rule "leq_literals" (formula "27") (term "1,0,1,1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "qeq_literals" (formula "27") (term "0,1,1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "27"))
      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "25"))
      (rule "ssubsortDirect" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "notLeft" (formula "29"))
      (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "25"))
      (rule "ssubsortDirect" (formula "29") (term "0"))
       (builtin "One Step Simplification" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "25"))
      (rule "ssubsortDirect" (formula "27") (term "0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "29"))
      (rule "leq_literals" (formula "34") (term "0"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "Free_class_invariant_axiom_for_case_study_Product" (formula "33") (ifseqformula "41"))
      (rule "leq_literals" (formula "33") (term "1,0,1,1"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "qeq_literals" (formula "33") (term "0,1,1"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "qeq_literals" (formula "33") (term "0,0,1,1,0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "leq_literals" (formula "33") (term "0,1,1,0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "applyEq" (formula "36") (term "0,1,1") (ifseqformula "41"))
      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "37") (term "0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "andLeft" (formula "37"))
      (rule "applyEq" (formula "36") (term "0,0,1") (ifseqformula "42"))
      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "35") (term "0"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "notLeft" (formula "35"))
      (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "33") (term "0"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "35") (term "0"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "andLeft" (formula "35"))
      (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "41"))
      (rule "times_zero_1" (formula "37") (term "0,0"))
      (rule "add_zero_left" (formula "37") (term "0"))
      (rule "Free_class_invariant_axiom_for_case_study_Order" (formula "15") (ifseqformula "46"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "inEqSimp_commuteGeq" (formula "21") (term "1,1,1"))
      (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "13"))
      (rule "ssubsortDirect" (formula "15") (term "0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "13"))
      (rule "ssubsortDirect" (formula "17") (term "0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "13"))
      (rule "ssubsortDirect" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "notLeft" (formula "19"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,1") (ifseqformula "49"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "13"))
      (rule "ssubsortDirect" (formula "21") (term "0"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "22"))
      (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "50"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "13"))
      (rule "ssubsortDirect" (formula "19") (term "0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
      (rule "times_zero_1" (formula "20") (term "0,0"))
      (rule "add_zero_left" (formula "20") (term "0"))
      (rule "Class_invariant_axiom_for_case_study_Order" (formula "59") (term "1") (ifseqformula "55"))
       (builtin "One Step Simplification" (formula "59"))
      (rule "referencedObjectIsCreatedRight" (formula "59") (ifseqformula "55"))
      (rule "close" (formula "59") (ifseqformula "1"))
   )
   (branch "Null reference (o = null)"
       (builtin "One Step Simplification" (formula "36"))
      (rule "notRight" (formula "36"))
      (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "notLeft" (formula "20"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "34"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "33"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "true_left" (formula "19"))
      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "31"))
       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
      (rule "true_left" (formula "17"))
      (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "polySimp_homoEq" (formula "8") (term "1"))
      (rule "polySimp_homoEq" (formula "9") (term "1"))
      (rule "polySimp_addComm1" (formula "8") (term "0,1"))
      (rule "polySimp_addComm1" (formula "9") (term "0,1"))
      (rule "applyEq" (formula "11") (term "1,1,1,1") (ifseqformula "1"))
      (rule "applyEq" (formula "29") (term "0") (ifseqformula "12"))
      (rule "ssubsortDirect" (formula "29"))
      (rule "closeTrue" (formula "29"))
   )
)
(branch "Exceptional Post (__getPrice_trampoline)"
    (builtin "One Step Simplification" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "24"))
   (rule "notLeft" (formula "22"))
   (rule "close" (formula "25") (ifseqformula "24"))
)
(branch "Pre (__getPrice_trampoline)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
   (rule "polySimp_homoEq" (formula "21") (term "1,1,0,0,0,1"))
   (rule "polySimp_homoEq" (formula "21") (term "1,1,0,0,1"))
   (rule "polySimp_homoEq" (formula "8") (term "1"))
   (rule "polySimp_homoEq" (formula "7") (term "1"))
   (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "21") (term "0,1,1,0,0,1"))
   (rule "polySimp_addComm1" (formula "8") (term "0,1"))
   (rule "polySimp_addComm1" (formula "7") (term "0,1"))
   (rule "inEqSimp_gtToGeq" (formula "20") (term "1"))
   (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
   (rule "add_zero_right" (formula "20") (term "0,0,1"))
   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "11"))
   (rule "ssubsortDirect" (formula "18") (term "0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "11"))
   (rule "ssubsortDirect" (formula "18") (term "0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "notLeft" (formula "18"))
   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "20"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "false_right" (formula "21"))
   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "11"))
   (rule "ssubsortDirect" (formula "18") (term "0"))
    (builtin "One Step Simplification" (formula "18"))
   (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "11"))
   (rule "ssubsortDirect" (formula "19") (term "0"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "11"))
   (rule "ssubsortDirect" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "11"))
   (rule "ssubsortDirect" (formula "13") (term "0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "polySimp_sepPosMonomial" (formula "8") (term "1"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1"))
   (rule "mul_literals" (formula "8") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1"))
   (rule "polySimp_sepPosMonomial" (formula "7") (term "1"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1"))
   (rule "mul_literals" (formula "7") (term "0,1,1"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1"))
   (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
   (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
   (rule "polySimp_rightDist" (formula "21") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
   (rule "mul_literals" (formula "21") (term "0,1,1"))
   (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
   (rule "polySimp_sepPosMonomial" (formula "20") (term "1"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
   (rule "polySimp_rightDist" (formula "20") (term "1,1"))
   (rule "mul_literals" (formula "20") (term "0,1,1"))
   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
   (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
   (rule "mul_literals" (formula "18") (term "1"))
   (rule "Class_invariant_axiom_for_case_study_Order" (formula "27") (ifseqformula "25"))
   (rule "closeTrue" (formula "27"))
)
(branch "Null reference (_newHead = null)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
   (rule "closeTrue" (formula "24"))
)
)
}
