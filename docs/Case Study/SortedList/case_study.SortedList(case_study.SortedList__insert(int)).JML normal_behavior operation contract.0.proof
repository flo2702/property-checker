\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:safe",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 100000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_EXPAND",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_OFF",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_INSTANTIATE",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_OFF",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "../../../property-checker-out/case_study";

\proofObligation "#Proof Obligation Settings
#Fri Jun 14 12:05:15 CEST 2024
contract=case_study.SortedList[case_study.SortedList\\:\\:insert(int)].JML normal_behavior operation contract.0
name=case_study.SortedList[case_study.SortedList\\:\\:insert(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "florian" ) (keyVersion "7ff2d9dc3ea43e071577b3f8d0e3a537f9213982"))

(autoModeTime "91254")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "10") (term "1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "elementOfUnion" (formula "10") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "elementOfInfiniteUnion" (formula "10") (term "1,0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "10"))
(rule "Class_invariant_axiom_for_case_study_SortedList" (formula "6") (ifseqformula "9"))
(rule "true_left" (formula "6"))
(rule "Free_class_invariant_axiom_for_case_study_SortedList" (formula "7") (ifseqformula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "polySimp_homoEq" (formula "10") (term "1,1,1"))
(rule "polySimp_addComm0" (formula "10") (term "0,0,1,1,1"))
(rule "polySimp_addComm1" (formula "10") (term "0,1,1,1"))
(rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "10") (term "0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "applyEq" (formula "9") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "9") (term "0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "polySimp_sepPosMonomial" (formula "10") (term "1,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,1"))
(rule "commute_and" (formula "5") (term "0"))
(rule "limit_java_lang_Object__inv_free_" (formula "8"))
(rule "replace_known_left" (formula "8") (term "1") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "8"))
(rule "cnf_rightDist" (formula "11") (term "0"))
(rule "commute_or" (formula "11") (term "1,0"))
(rule "cnf_rightDist" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "commute_or" (formula "5"))
(rule "cnf_rightDist" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "commute_or" (formula "6"))
(rule "cnf_rightDist" (formula "5"))
 (builtin "One Step Simplification" (formula "5"))
(rule "commute_or" (formula "5"))
(rule "cnf_rightDist" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "cnf_rightDist" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "commute_or" (formula "14"))
(rule "cnf_rightDist" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "commute_or" (formula "13"))
(rule "cnf_rightDist" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "commute_or" (formula "14"))
(rule "cnf_rightDist" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "commute_or_2" (formula "14"))
(rule "shift_paren_or" (formula "13"))
(rule "commute_or" (formula "13") (term "0"))
 (builtin "One Step Simplification" (formula "13"))
(rule "true_left" (formula "13"))
(rule "methodBodyExpand" (formula "19") (term "1") (newnames "heapBefore_insert,savedHeapBefore_insert,_newHeadBefore_insert"))
 (builtin "One Step Simplification" (formula "19"))
 (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_havocPacked,exc_0,heapAfter_havocPacked,anon_heap_havocPacked") (contract "case_study.SortedList[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (havocPacked)"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "andLeft" (formula "19"))
    (builtin "JML assume" (formula "22"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "impRight" (formula "22"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=b"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "b"))
   (rule "compound_equality_comparison_1" (formula "23") (term "1") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "s"))
   (rule "assignment_read_attribute_this" (formula "23") (term "1"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=case_study_SortedList_first_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "equality_comparison_simple" (formula "23") (term "1"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "ifElseSplit" (formula "23"))
   (branch "if this.first == null true"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "eval_order_access4_this" (formula "17") (term "1") (inst "#v1=s_1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "s_1"))
      (rule "applyEq" (formula "10") (term "1") (ifseqformula "1"))
      (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "12") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
      (rule "limit_java_lang_Object__inv_free_" (formula "11"))
      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "11"))
       (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore___INIT_trampoline,result___INIT_trampoline,exc_1,heapAfter___INIT_trampoline,anon_heap___INIT_trampoline") (contract "case_study.SortedListNode[case_study.SortedListNode::__INIT_trampoline(int)].JML normal_behavior operation contract.0") (modality "diamond"))
      (branch "Post (__INIT_trampoline)"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "21"))
         (rule "notLeft" (formula "20"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "26"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_left" (formula "19") (term "1,1,0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "26")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
         (rule "true_left" (formula "19"))
         (rule "assignment" (formula "27") (term "1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "assignment_write_attribute_this" (formula "27") (term "1"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=case_study_SortedListNode_size_0"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")))
         (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=java_lang_Object_packed_1"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")))
         (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
         (rule "hideAuxiliaryEq" (formula "18"))
         (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=case_study_SortedListNode_head_0"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")))
         (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
         (rule "hideAuxiliaryEq" (formula "20"))
         (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=case_study_SortedListNode_tail_0"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")) (ifInst ""  (formula "25")))
         (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
         (rule "hideAuxiliaryEq" (formula "21"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "ifEqualsTRUE" (formula "24"))
          (builtin "One Step Simplification" (formula "24"))
         (rule "orRight" (formula "24"))
         (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=java_lang_Object_created__1"))
         (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "28")))
         (rule "replaceKnownSelect_taclet000_12" (formula "17") (term "2,0"))
         (rule "replaceKnownSelect_taclet000_12" (formula "17") (term "0,0,0,0"))
         (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "applyEqReverse" (formula "18") (term "0") (ifseqformula "17"))
         (rule "hideAuxiliaryEq" (formula "17"))
         (rule "hideAuxiliaryEqConcrete2" (formula "26"))
         (rule "limit_java_lang_Object__inv_free_" (formula "19"))
         (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "20") (ifseqformula "27"))
         (rule "replaceKnownSelect_taclet000_6" (formula "20") (term "0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "20") (term "0,0,1"))
         (rule "replaceKnownSelect_taclet000_4" (formula "20") (term "0,1,1,0"))
         (rule "replaceKnownSelect_taclet000_6" (formula "20") (term "0,0,1,0"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "20") (term "0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "20") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,1,0,0"))
         (rule "replaceKnownSelect_taclet000_6" (formula "20") (term "0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "0,0,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "20") (term "0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,0,1,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "0,0,0,1,1"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,0,0,1,0,1,1"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,0,1,1,0,1,1"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,1,1,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,0,1,1,1,1"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,1,0,1,1,1,1,1"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,1,0,1,0,1,1,1"))
         (rule "replaceKnownSelect_taclet000_10" (formula "20") (term "1,0,0,0,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,0,0,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,0,1,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,1,1,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,1,0,1,1,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,1,0,1,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "20") (term "1,0,0,0,0,1,1,1"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "replace_known_left" (formula "23") (term "0,0,1") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "inEqSimp_gtToGeq" (formula "22") (term "1"))
         (rule "mul_literals" (formula "22") (term "1,0,0,1"))
         (rule "add_literals" (formula "22") (term "0,0,1"))
         (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "18"))
         (rule "ssubsortDirect" (formula "20") (term "0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "applyEq" (formula "21") (term "1") (ifseqformula "24"))
         (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "18"))
         (rule "ssubsortDirect" (formula "22") (term "0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "24"))
         (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "25"))
         (rule "add_literals" (formula "22") (term "0"))
         (rule "qeq_literals" (formula "22"))
         (rule "true_left" (formula "22"))
         (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=java_lang_Object_packed_2"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "13"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "elementOfSingleton" (formula "20") (term "0,0"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "eqSymm" (formula "20") (term "0,0"))
         (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "30"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "20"))
         (rule "hideAuxiliaryEq" (formula "20"))
         (rule "preincrement_attribute" (formula "29") (term "1") (inst "#v=s_2"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "s_2"))
         (rule "assignment" (formula "29") (term "1"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "eval_order_access4" (formula "29") (term "1") (inst "#v1=i") (inst "#v0=s_3"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "s_3"))
         (rule "assignment" (formula "29") (term "1"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "i"))
         (rule "compound_int_cast_expression" (formula "29") (term "1") (inst "#v=i_1"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "i_1"))
         (rule "remove_parentheses_right" (formula "29") (term "1"))
         (rule "compound_addition_1" (formula "29") (term "1") (inst "#v=i_2"))
         (rule "variableDeclarationAssign" (formula "29") (term "1"))
         (rule "variableDeclaration" (formula "29") (term "1") (newnames "i_2"))
         (rule "assignment_read_attribute" (formula "29") (term "1"))
         (branch "Normal Execution (s_2 != null)"
             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
             (builtin "One Step Simplification" (formula "30"))
            (rule "false_right" (formula "29"))
            (rule "dismissNonSelectedField" (formula "29") (term "0,1,0"))
            (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=case_study_SortedList_size_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "6")))
            (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")) (ifInst ""  (formula "5")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "7"))
            (rule "assignmentAdditionInt" (formula "29") (term "1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "translateJavaAddInt" (formula "29") (term "0,1,0"))
            (rule "add_literals" (formula "29") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "29") (term "1"))
            (rule "assignment" (formula "29") (term "1"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "assignment_write_attribute" (formula "29") (term "1"))
            (branch "Normal Execution (s_3 != null)"
                (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "28")))
                (builtin "One Step Simplification" (formula "30"))
               (rule "false_right" (formula "29"))
                (builtin "JML assume" (formula "29"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "impRight" (formula "29"))
               (rule "dismissNonSelectedField" (formula "1") (term "1"))
               (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=case_study_SortedList_first_1"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "1") (ifseqformula "28"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_homoEq" (formula "4") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,0,0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,0,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "4") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "4") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,1"))
               (rule "replaceKnownSelect_taclet000_10" (formula "4") (term "0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "4") (term "0,0,0,1"))
               (rule "replace_known_left" (formula "4") (term "0,0,1") (ifseqformula "26"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "3") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "3") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
               (rule "replaceKnownSelect_taclet000_4" (formula "3") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "3") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "1"))
               (rule "replaceKnownSelect_taclet000_10" (formula "2") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "2") (term "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1"))
               (rule "replaceKnownSelect_taclet000_10" (formula "1") (term "1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "1") (term "1,0,1"))
               (rule "inEqSimp_gtToGeq" (formula "3") (term "1"))
               (rule "mul_literals" (formula "3") (term "1,0,0,1"))
               (rule "add_literals" (formula "3") (term "0,0,1"))
               (rule "applyEq" (formula "2") (term "1") (ifseqformula "25"))
               (rule "applyEq" (formula "1") (term "1,0,1") (ifseqformula "25"))
               (rule "replaceKnownSelect_taclet000_16" (formula "1") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_18" (formula "1") (term "0,1"))
               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "12"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "25"))
               (rule "add_literals" (formula "2") (term "0,1"))
               (rule "qeq_literals" (formula "2") (term "1"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "4"))
               (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "16"))
               (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet000_6" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_7" (formula "1") (term "0"))
                (builtin "JML assume" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "impRight" (formula "30"))
               (rule "polySimp_homoEq" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0,0,1"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,1,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0,1"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,1,1,0,1"))
               (rule "replaceKnownSelect_taclet000_8" (formula "1") (term "1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_9" (formula "1") (term "1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0,1,1"))
               (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "1,1,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "1,1,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0"))
               (rule "replaceKnownSelect_taclet000_4" (formula "1") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "1") (term "0,1,0"))
               (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "25"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,0,1,1"))
               (rule "replaceKnownSelect_taclet000_4" (formula "1") (term "0,1,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "1") (term "0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
               (rule "replaceKnownSelect_taclet000_10" (formula "1") (term "0,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "1") (term "0,0,0,0,1"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "replaceKnownSelect_taclet000_10" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_11" (formula "1") (term "0"))
                (builtin "JML assert" (formula "30"))
               (branch "Validity"
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "inEqSimp_geqRight" (formula "30"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_SortedList_size_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "leq_literals" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "impRight" (formula "30"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_SortedList_size_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                   (builtin "Use Operation Contract" (formula "30") (newnames "heapBefore_havocPacked_0,exc_2,heapAfter_havocPacked_0,anon_heap_havocPacked_0") (contract "case_study.SortedList[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
                  (branch "Post (havocPacked)"
                      (builtin "One Step Simplification" (formula "32"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                      (builtin "JML assume" (formula "33"))
                      (builtin "One Step Simplification" (formula "33"))
                     (rule "impRight" (formula "33"))
                     (rule "emptyStatement" (formula "34") (term "1"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_3"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "methodCallEmpty" (formula "34") (term "1"))
                     (rule "tryEmpty" (formula "34") (term "1"))
                     (rule "emptyModality" (formula "34") (term "1"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                     (rule "eqSymm" (formula "34") (term "1,0,0,1"))
                     (rule "pullOutSelect" (formula "34") (term "1,1,0,0") (inst "selectSK=case_study_SortedList_size_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                     (rule "replaceKnownSelect_taclet100000_26" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet100000_27" (formula "1") (term "2,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "35") (term "0,0,0,0,0") (inst "selectSK=case_study_SortedList_first_2"))
                     (rule "applyEq" (formula "36") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "replaceKnownSelect_taclet00000_24" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00000_25" (formula "1") (term "2,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__3"))
                     (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "36")))
                     (rule "replaceKnownSelect_taclet0000_20" (formula "2") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "2") (term "2,0"))
                     (rule "replaceKnownSelect_taclet0000_20" (formula "2") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000_21" (formula "2") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "36") (term "1,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "35") (term "1,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "pullOutSelect" (formula "34") (term "0,0,0") (inst "selectSK=case_study_SortedListNode_size_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "replaceKnownSelect_taclet000_13" (formula "1") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replaceKnownSelect_taclet000_4" (formula "1") (term "0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000_5" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "Class_invariant_axiom_for_case_study_SortedList" (formula "34") (term "0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "allRight" (formula "34") (inst "sk=f_0"))
                     (rule "allRight" (formula "34") (inst "sk=o_0"))
                     (rule "orRight" (formula "34"))
                     (rule "orRight" (formula "34"))
                     (rule "orRight" (formula "34"))
                     (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "38"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__5"))
                     (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                     (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Exceptional Post (havocPacked)"
                      (builtin "One Step Simplification" (formula "32"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "andLeft" (formula "27"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "close" (formula "30") (ifseqformula "29"))
                  )
                  (branch "Pre (havocPacked)"
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "wellFormedStorePrimitive" (formula "30"))
                     (rule "wellFormedStoreObject" (formula "30"))
                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
                     (rule "wellFormedAnonEQ" (formula "30") (term "0") (ifseqformula "17"))
                     (rule "replaceKnownSelect_taclet000_13" (formula "30") (term "0,1"))
                     (rule "wellFormedAnonEQ" (formula "30") (term "0,0") (ifseqformula "14"))
                     (rule "replaceKnownAuxiliaryConstant_taclet000_14" (formula "30") (term "0,1"))
                     (rule "replace_known_left" (formula "30") (term "1,0") (ifseqformula "16"))
                      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "4")) (ifInst ""  (formula "13")) (ifInst ""  (formula "18")))
                     (rule "closeTrue" (formula "30"))
                  )
               )
            )
            (branch "Null Reference (s_3 = null)"
                (builtin "One Step Simplification" (formula "30"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (s_2 = null)"
             (builtin "One Step Simplification" (formula "30"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (__INIT_trampoline)"
          (builtin "One Step Simplification" (formula "16"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "17"))
         (rule "close" (formula "21") (ifseqformula "20"))
      )
      (branch "Pre (__INIT_trampoline)"
          (builtin "One Step Simplification" (formula "16"))
         (rule "wellFormedAnonEQ" (formula "16") (ifseqformula "13"))
         (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "3")))
         (rule "closeTrue" (formula "16"))
      )
   )
   (branch "if this.first == null false"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "6"))
      (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "6"))
      (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "6"))
      (rule "applyEq" (formula "16") (term "1,1,1") (ifseqformula "6"))
      (rule "applyEq" (formula "15") (term "1,1,1") (ifseqformula "6"))
      (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "10") (ifseqformula "20"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "polySimp_homoEq" (formula "13") (term "1,1,1"))
      (rule "polySimp_addComm0" (formula "13") (term "0,0,1,1,1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1,1,1"))
      (rule "inEqSimp_gtToGeq" (formula "12") (term "1"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "12") (term "0,0,1"))
      (rule "applyEq" (formula "12") (term "1,0,1") (ifseqformula "6"))
      (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "8"))
      (rule "ssubsortDirect" (formula "10") (term "0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "8"))
      (rule "ssubsortDirect" (formula "12") (term "0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "8"))
      (rule "ssubsortDirect" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_sepPosMonomial" (formula "13") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
      (rule "mul_literals" (formula "12") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "12"))
      (rule "leq_literals" (formula "14") (term "0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "cnf_rightDist" (formula "13") (term "0"))
      (rule "commute_or" (formula "13") (term "1,0"))
      (rule "cnf_rightDist" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "cnf_rightDist" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "commute_or" (formula "14"))
      (rule "cnf_rightDist" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "commute_or" (formula "13"))
      (rule "cnf_rightDist" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "commute_or" (formula "14"))
      (rule "cnf_rightDist" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "commute_or_2" (formula "14"))
      (rule "shift_paren_or" (formula "13"))
      (rule "commute_or" (formula "13") (term "0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "elim_double_block_2" (formula "28") (term "1"))
      (rule "methodCallUnfoldTarget" (formula "28") (term "1") (inst "#v0=s_1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "s_1"))
      (rule "assignment_read_attribute_this" (formula "28") (term "1"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "replaceKnownSelect_taclet0_2" (formula "28") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "28") (term "0,1,0"))
       (builtin "Use Operation Contract" (formula "28") (newnames "heapBefore___insert_trampoline,exc_1,heapAfter___insert_trampoline,anon_heap___insert_trampoline") (contract "case_study.SortedListNode[case_study.SortedListNode::__insert_trampoline(int,boolean,boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
      (branch "Post (__insert_trampoline)"
          (builtin "One Step Simplification" (formula "30"))
          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "30"))
         (rule "polySimp_homoEq" (formula "31"))
         (rule "polySimp_homoEq" (formula "29") (term "1,1"))
         (rule "polySimp_addComm0" (formula "31") (term "0,0"))
         (rule "polySimp_addComm0" (formula "29") (term "0,0,1,1"))
         (rule "polySimp_addComm1" (formula "31") (term "0"))
         (rule "polySimp_addComm1" (formula "29") (term "0,1,1"))
         (rule "blockEmpty" (formula "36") (term "1"))
         (rule "polySimp_sepPosMonomial" (formula "31"))
         (rule "polySimp_mulComm0" (formula "31") (term "1"))
         (rule "polySimp_rightDist" (formula "31") (term "1"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
         (rule "mul_literals" (formula "31") (term "0,1"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
         (rule "polySimp_sepPosMonomial" (formula "29") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,1"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,1"))
         (rule "mul_literals" (formula "29") (term "0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1"))
         (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=java_lang_Object_packed_1"))
         (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")))
         (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")))
         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
         (rule "hideAuxiliaryEq" (formula "28"))
         (rule "pullOutSelect" (formula "29") (term "1,1,0,1") (inst "selectSK=case_study_SortedListNode_head_0"))
         (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
         (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
         (rule "applyEqReverse" (formula "30") (term "1,1,0,1") (ifseqformula "29"))
         (rule "hideAuxiliaryEq" (formula "29"))
         (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_size_0"))
         (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "29"))
         (rule "applyEq" (formula "30") (term "1,1,1,1") (ifseqformula "29"))
         (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
         (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
         (rule "applyEqReverse" (formula "30") (term "1,1,1,1") (ifseqformula "29"))
         (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "29"))
         (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "29"))
         (rule "hideAuxiliaryEq" (formula "29"))
         (rule "pullOutSelect" (formula "29") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_1"))
         (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "elementOfInfiniteUnion" (formula "29") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "inEqSimp_commuteGeq" (formula "30") (term "1,0,1"))
         (rule "pullOutSelect" (formula "30") (term "0,0,0") (inst "selectSK=case_study_SortedListNode_tail_0"))
         (rule "applyEq" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "30"))
         (rule "applyEq" (formula "31") (term "1,0,1,1") (ifseqformula "30"))
         (rule "applyEq" (formula "29") (term "0,0,1,0,0,0") (ifseqformula "30"))
         (rule "applyEq" (formula "29") (term "1,0,0,1,1,0,0") (ifseqformula "30"))
         (rule "applyEq" (formula "31") (term "0,0,0,0,1") (ifseqformula "30"))
         (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "30"))
         (rule "applyEq" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "30"))
         (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "30"))
         (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
         (rule "elementOfInfiniteUnion" (formula "30") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
         (rule "applyEqReverse" (formula "29") (term "1,0,0,1,1,0,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "29") (term "1,0,0,0,0,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "31") (term "0,0,0,0,1") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "31") (term "1,0,1,1") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "29") (term "1,1,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "29") (term "0,0,1,0,0,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "29") (term "1,2,0") (ifseqformula "30"))
         (rule "hideAuxiliaryEq" (formula "30"))
         (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=case_study_SortedListNode_size_1"))
         (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "36")))
         (rule "polySimp_homoEq" (formula "33"))
         (rule "polySimp_addComm1" (formula "33") (term "0"))
         (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "ifthenelse_negated" (formula "32") (term "0"))
         (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "6"))
         (rule "polySimp_sepPosMonomial" (formula "33"))
         (rule "polySimp_mulComm0" (formula "33") (term "1"))
         (rule "polySimp_rightDist" (formula "33") (term "1"))
         (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
         (rule "mul_literals" (formula "33") (term "0,1"))
         (rule "polySimp_elimOne" (formula "33") (term "1,1"))
         (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "33"))
         (rule "polySimp_homoEq" (formula "30") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,1,0"))
         (rule "add_literals" (formula "30") (term "0,0,1,0"))
         (rule "add_zero_left" (formula "30") (term "0,1,0"))
         (rule "applyEq" (formula "30") (term "1,1,1,1") (ifseqformula "33"))
         (rule "polySimp_addAssoc" (formula "30") (term "1,1,1"))
         (rule "add_literals" (formula "30") (term "0,1,1,1"))
         (rule "add_zero_left" (formula "30") (term "1,1,1"))
         (rule "polySimp_invertEq" (formula "30") (term "1,0"))
         (rule "mul_literals" (formula "30") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "30") (term "0,1,0"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0,1,0") (ifseqformula "24"))
         (rule "pullOutSelect" (formula "29") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "applyEq" (formula "30") (term "0,0,0,0,0") (ifseqformula "29"))
         (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "pullOutSelect" (formula "31") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_2"))
         (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "replaceKnownSelect_taclet010_14" (formula "31") (term "0,0,1,1,0,0"))
         (rule "elementOfInfiniteUnion" (formula "31") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "pullOutSelect" (formula "30") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_2"))
         (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_3"))
         (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "limit_java_lang_Object__inv_free_" (formula "35"))
         (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "36"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "39") (ifseqformula "41"))
         (rule "true_left" (formula "39"))
         (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "36") (ifseqformula "40"))
         (rule "replaceKnownSelect_taclet010_4" (formula "36") (term "0,0,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "36") (term "0,0,1"))
         (rule "replaceKnownSelect_taclet010_8" (formula "36") (term "0,1,1,0"))
         (rule "replaceKnownSelect_taclet010_4" (formula "36") (term "0,0,1,0"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,1,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_9" (formula "36") (term "0,1,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "36") (term "0,0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,1,0,0"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "0,0,0,1,1"))
         (rule "replaceKnownSelect_taclet010_4" (formula "36") (term "0,0,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "0,0,0,1,1"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,0,1,0,0,0"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,0,1,1,1,1"))
         (rule "replaceKnownSelect_taclet010_10" (formula "36") (term "1,1,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "36") (term "0,0,0,0,0"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,0,0,1,0,1,1"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,0,1,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,0,1,0,0,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,0,1,1,1,1"))
         (rule "replaceKnownSelect_taclet010_15" (formula "36") (term "0,1,1,1,1"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,0,0,0,0,1,1,1"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,1,0,1,1,1,1,1"))
         (rule "replaceKnownSelect_taclet010_11" (formula "36") (term "1,1,0,1,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,0,0,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,0,1,1,0,1,1"))
         (rule "replaceKnownSelect_taclet010_15" (formula "36") (term "0,1,1,0,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,0,0,0,0,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,1,0,1,1,1,1,1"))
         (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "36") (term "1,1,0,1,0,1,1,1"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "36"))
         (rule "polySimp_homoEq" (formula "39") (term "1,1,1"))
         (rule "polySimp_addComm0" (formula "39") (term "0,0,1,1,1"))
         (rule "polySimp_addComm1" (formula "39") (term "0,1,1,1"))
         (rule "inEqSimp_gtToGeq" (formula "38") (term "1"))
         (rule "mul_literals" (formula "38") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "38") (term "0,0,1"))
         (rule "applyEq" (formula "38") (term "1,0,1") (ifseqformula "41"))
         (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
         (rule "add_literals" (formula "38") (term "0,0,1"))
         (rule "add_zero_left" (formula "38") (term "0,1"))
         (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "28"))
         (rule "ssubsortDirect" (formula "36") (term "0"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "28"))
         (rule "ssubsortDirect" (formula "38") (term "0"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "28"))
         (rule "ssubsortDirect" (formula "39") (term "0"))
          (builtin "One Step Simplification" (formula "39"))
         (rule "polySimp_sepPosMonomial" (formula "39") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "39") (term "1,1,1"))
         (rule "polySimp_rightDist" (formula "39") (term "1,1,1"))
         (rule "mul_literals" (formula "39") (term "0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1"))
         (rule "polySimp_elimOne" (formula "39") (term "1,1,1,1"))
         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=java_lang_Object_packed_2"))
         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "replaceKnownSelect_taclet010_14" (formula "36") (term "0,0,1,1,0,0"))
         (rule "elementOfInfiniteUnion" (formula "36") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
         (rule "pullOutSelect" (formula "40") (term "0,0,1,0") (inst "selectSK=case_study_SortedListNode_tail_1"))
         (rule "applyEq" (formula "41") (term "0,0,0,0,1") (ifseqformula "40"))
         (rule "applyEq" (formula "41") (term "1,0,1,0,1") (ifseqformula "40"))
         (rule "applyEq" (formula "41") (term "1,0,1,1") (ifseqformula "40"))
         (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "replaceKnownSelect_taclet010_14" (formula "40") (term "0,0,1,1,0,0"))
         (rule "elementOfInfiniteUnion" (formula "40") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "pullOutSelect" (formula "36") (term "2,0") (inst "selectSK=java_lang_Object_packed_3"))
         (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "elementOfSingleton" (formula "36") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "sortsDisjointModuloNull" (formula "36") (term "0,0,0"))
         (rule "replace_known_right" (formula "36") (term "1,0,0,0") (ifseqformula "47"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "pullOutSelect" (formula "42") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_3"))
         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "42"))
         (rule "elementOfInfiniteUnion" (formula "42") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "42"))
         (rule "pullOutSelect" (formula "43") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_4"))
         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "elementOfInfiniteUnion" (formula "43") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "pullOutSelect" (formula "41") (term "2,0") (inst "selectSK=case_study_SortedListNode_tail_2"))
         (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "elementOfSingleton" (formula "41") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "pullOutSelect" (formula "43") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_4"))
         (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "elementOfSingleton" (formula "43") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "43"))
         (rule "pullOutSelect" (formula "44") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
         (rule "applyEq" (formula "46") (term "0,0,1,1,0,0") (ifseqformula "44"))
         (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "pullOutSelect" (formula "46") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_5"))
         (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "elementOfSingleton" (formula "46") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "preincrement_attribute" (formula "54") (term "1") (inst "#v=s_2"))
         (rule "variableDeclarationAssign" (formula "54") (term "1"))
         (rule "variableDeclaration" (formula "54") (term "1") (newnames "s_2"))
         (rule "assignment" (formula "54") (term "1"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "eval_order_access4" (formula "54") (term "1") (inst "#v1=i") (inst "#v0=s_3"))
         (rule "variableDeclarationAssign" (formula "54") (term "1"))
         (rule "variableDeclaration" (formula "54") (term "1") (newnames "s_3"))
         (rule "assignment" (formula "54") (term "1"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "variableDeclarationAssign" (formula "54") (term "1"))
         (rule "variableDeclaration" (formula "54") (term "1") (newnames "i"))
         (rule "commute_and_2" (formula "34") (term "1"))
         (rule "commute_and" (formula "31") (term "1,0,0"))
         (rule "commute_and" (formula "33") (term "0,0,0"))
         (rule "commute_and" (formula "33") (term "1,0,0"))
         (rule "commute_and" (formula "27") (term "0,0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1") (ifseqformula "2"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "53"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "9"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "applyEqReverse" (formula "35") (term "1,1,0,1") (ifseqformula "50"))
         (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
         (rule "applyEqReverse" (formula "35") (term "0,1,0") (ifseqformula "50"))
         (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "50"))
         (rule "hideAuxiliaryEq" (formula "50"))
         (rule "eqSymm" (formula "35") (term "1,0,1"))
         (rule "inEqSimp_contradEq7" (formula "35") (term "1,0") (ifseqformula "13"))
         (rule "mul_literals" (formula "35") (term "1,0,0,1,0"))
         (rule "add_zero_right" (formula "35") (term "0,0,1,0"))
         (rule "leq_literals" (formula "35") (term "0,1,0"))
          (builtin "One Step Simplification" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "35"))
         (rule "notLeft" (formula "35"))
         (rule "applyEqReverse" (formula "50") (term "0,1,1,0") (ifseqformula "35"))
         (rule "applyEqReverse" (formula "50") (term "1,1,1,1") (ifseqformula "35"))
         (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
         (rule "hideAuxiliaryEq" (formula "35"))
         (rule "replace_known_right" (formula "32") (term "0,1,0,0,0") (ifseqformula "52"))
          (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "52")))
         (rule "applyEqReverse" (formula "49") (term "1,1,0,1") (ifseqformula "32"))
         (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "32"))
         (rule "hideAuxiliaryEq" (formula "32"))
         (rule "replace_known_right" (formula "33") (term "0,0,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "51")))
         (rule "replace_known_right" (formula "42") (term "0,1,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "51")))
         (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "41"))
         (rule "replace_known_right" (formula "37") (term "0,1,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "51")))
         (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "replace_known_right" (formula "36") (term "0,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "36"))
         (rule "replace_known_right" (formula "32") (term "0,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "51"))
          (builtin "One Step Simplification" (formula "48"))
         (rule "polySimp_homoEq" (formula "48") (term "1,1"))
         (rule "polySimp_addComm1" (formula "48") (term "0,1,1"))
         (rule "ifthenelse_negated" (formula "41") (term "0"))
         (rule "ifthenelse_negated" (formula "30") (term "0"))
         (rule "ifthenelse_negated" (formula "36") (term "0"))
         (rule "ifthenelse_negated" (formula "32") (term "0"))
         (rule "ifthenelse_negated" (formula "31") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "34"))
         (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0,1"))
         (rule "polySimp_sepPosMonomial" (formula "48") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "48") (term "1,1,1"))
         (rule "polySimp_rightDist" (formula "48") (term "1,1,1"))
         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,1"))
         (rule "mul_literals" (formula "48") (term "0,1,1,1"))
         (rule "polySimp_elimOne" (formula "48") (term "1,1,1,1"))
         (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "13"))
         (rule "leq_literals" (formula "40") (term "0"))
          (builtin "One Step Simplification" (formula "40"))
         (rule "true_left" (formula "40"))
         (rule "commute_and" (formula "44") (term "0,0,0"))
         (rule "commute_and" (formula "46") (term "0,0,0"))
         (rule "commute_or_2" (formula "33") (term "0,0"))
         (rule "commute_or_2" (formula "41") (term "0,0"))
         (rule "commute_and" (formula "44") (term "1,0,0"))
         (rule "commute_and" (formula "46") (term "1,0,0"))
         (rule "commute_or_2" (formula "37") (term "0,0"))
         (rule "commute_and_2" (formula "47") (term "1"))
         (rule "commute_or" (formula "33") (term "0,0,0"))
         (rule "commute_or" (formula "41") (term "0,0,0"))
         (rule "commute_or" (formula "37") (term "0,0,0"))
         (rule "cnf_rightDist" (formula "47"))
         (rule "andLeft" (formula "47"))
         (rule "cnf_rightDist" (formula "48"))
         (rule "andLeft" (formula "48"))
         (rule "commute_or" (formula "48"))
         (rule "cnf_rightDist" (formula "47"))
         (rule "andLeft" (formula "47"))
         (rule "commute_or" (formula "47"))
         (rule "cnf_rightDist" (formula "48"))
         (rule "andLeft" (formula "48"))
         (rule "commute_or" (formula "48"))
         (rule "cnf_rightDist" (formula "47"))
          (builtin "One Step Simplification" (formula "47"))
         (rule "commute_or" (formula "47"))
         (rule "compound_int_cast_expression" (formula "57") (term "1") (inst "#v=i_1"))
         (rule "variableDeclarationAssign" (formula "57") (term "1"))
         (rule "variableDeclaration" (formula "57") (term "1") (newnames "i_1"))
         (rule "cnf_rightDist" (formula "44") (term "0,0"))
         (rule "commute_or" (formula "44") (term "0,0,0"))
         (rule "cnf_rightDist" (formula "46") (term "0,0"))
         (rule "commute_or" (formula "46") (term "0,0,0"))
         (rule "cnf_rightDist" (formula "44") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "44"))
         (rule "commute_or_2" (formula "44") (term "1,1,0,0"))
         (rule "commute_or" (formula "44") (term "0,1,1,0,0"))
         (rule "cnf_rightDist" (formula "46") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "46"))
         (rule "commute_or_2" (formula "46") (term "1,1,0,0"))
         (rule "commute_or" (formula "46") (term "0,1,1,0,0"))
         (rule "cnf_rightDist" (formula "44") (term "0,0,0"))
         (rule "commute_or_2" (formula "44") (term "1,0,0,0"))
         (rule "commute_and_2" (formula "44") (term "0,0"))
         (rule "commute_or" (formula "44") (term "0,1,0,0"))
         (rule "cnf_rightDist" (formula "46") (term "0,0,0"))
         (rule "commute_and_2" (formula "46") (term "0,0"))
         (rule "commute_or_2" (formula "46") (term "1,0,0"))
         (rule "commute_or" (formula "46") (term "0,1,0,0"))
         (rule "remove_parentheses_right" (formula "57") (term "1"))
         (rule "shift_paren_and" (formula "44") (term "0,0,0"))
         (rule "commute_and" (formula "44") (term "0,0,0,0"))
         (rule "shift_paren_and" (formula "46") (term "0,0,0"))
         (rule "commute_and" (formula "46") (term "0,0,0,0"))
         (rule "compound_addition_1" (formula "57") (term "1") (inst "#v=i_2"))
         (rule "variableDeclarationAssign" (formula "57") (term "1"))
         (rule "variableDeclaration" (formula "57") (term "1") (newnames "i_2"))
         (rule "assignment_read_attribute" (formula "57") (term "1"))
         (branch "Normal Execution (s_2 != null)"
             (builtin "One Step Simplification" (formula "58"))
             (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "56")))
            (rule "false_right" (formula "57"))
            (rule "pullOutSelect" (formula "57") (term "0,1,0") (inst "selectSK=case_study_SortedList_size_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
            (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
            (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "4"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
            (rule "elementOfSingleton" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "58") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "assignmentAdditionInt" (formula "57") (term "1"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "translateJavaAddInt" (formula "57") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "57") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "57") (term "1"))
            (rule "assignment" (formula "57") (term "1"))
             (builtin "One Step Simplification" (formula "57"))
            (rule "assignment_write_attribute" (formula "57") (term "1"))
            (branch "Normal Execution (s_3 != null)"
                (builtin "One Step Simplification" (formula "58"))
                (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "56")))
               (rule "false_right" (formula "57"))
               (rule "commute_and_2" (formula "44") (term "0,0"))
               (rule "commute_and_2" (formula "46") (term "0,0"))
                (builtin "JML assume" (formula "57"))
                (builtin "One Step Simplification" (formula "57"))
               (rule "impRight" (formula "57"))
               (rule "dismissNonSelectedField" (formula "1") (term "1"))
               (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=case_study_SortedList_first_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
               (rule "replaceKnownSelect_taclet0_2" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "1") (term "2,0"))
               (rule "replaceKnownSelect_taclet0010_31" (formula "1") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0010_32" (formula "1") (term "0,0,1,0,0"))
               (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfInfiniteUnion" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
               (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "1") (ifseqformula "56"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_homoEq" (formula "4") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "4") (term "0,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,0,0,0,1,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "4") (term "1,0,0,0,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "4") (term "1,0,0,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,1,0,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "4") (term "1,0,1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "4") (term "1,0,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "4") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "4") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "4") (term "0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "4") (term "0,0,0,1"))
               (rule "replace_known_right" (formula "4") (term "0,0,1") (ifseqformula "58"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "3") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "3") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,1"))
               (rule "replaceKnownSelect_taclet010_8" (formula "3") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_9" (formula "3") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
               (rule "dismissNonSelectedField" (formula "2") (term "1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "2") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "2") (term "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,0,0,1,1,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "4") (term "1,0,1,0,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "4") (term "1,0,1,0,0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,1"))
               (rule "replaceKnownSelect_taclet010_15" (formula "4") (term "0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_28" (formula "4") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,0,0,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "4") (term "1,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "4") (term "1,0,0,0,1"))
               (rule "replaceKnownSelect_taclet010_19" (formula "4") (term "0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "4") (term "1,1,0,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "4") (term "1,1,0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet010_19" (formula "4") (term "1,0,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "1,1,1,0,1,1"))
               (rule "replaceKnownSelect_taclet010_10" (formula "4") (term "1,1,0,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_29" (formula "4") (term "1,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,0,1,1"))
               (rule "replaceKnownSelect_taclet010_19" (formula "4") (term "0,0,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "1") (term "1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "1") (term "1,0,1"))
               (rule "replaceKnownSelect_taclet010_18" (formula "1") (term "0,1"))
               (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,0,1,1,1"))
               (rule "replaceKnownSelect_taclet010_15" (formula "3") (term "0,1,0,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_28" (formula "3") (term "0,1,0,0,1,1,1"))
               (rule "dismissNonSelectedField" (formula "3") (term "1,1,1,0,1,1,1"))
               (rule "replaceKnownSelect_taclet010_11" (formula "3") (term "1,1,1,0,1,1,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "3") (term "1,1,1,0,1,1,1"))
               (rule "inEqSimp_gtToGeq" (formula "2") (term "1"))
               (rule "mul_literals" (formula "2") (term "1,0,0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "3") (term "0,1,0,1,1"))
               (rule "replaceKnownSelect_taclet010_21" (formula "3") (term "0,1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "3") (term "1,1,0,1,1,1"))
               (rule "replaceKnownSelect_taclet010_19" (formula "3") (term "1,1,0,1,1,1"))
               (rule "replaceKnownSelect_taclet010_22" (formula "3") (term "1,0,1,1,1"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1"))
               (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0,1,1"))
               (rule "applyEq" (formula "2") (term "1,0,1") (ifseqformula "55"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
               (rule "add_literals" (formula "2") (term "0,0,1"))
               (rule "add_zero_left" (formula "2") (term "0,1"))
               (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "32"))
               (rule "ssubsortDirect" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "32"))
               (rule "ssubsortDirect" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "polySimp_sepNegMonomial" (formula "3") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "0,1,1"))
               (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
               (rule "leq_literals" (formula "2") (term "0"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "commute_and_2" (formula "2") (term "1"))
               (rule "cnf_rightDist" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "cnf_rightDist" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "cnf_rightDist" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "commute_or" (formula "2"))
               (rule "cnf_rightDist" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "cnf_rightDist" (formula "2"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "commute_or" (formula "2"))
                (builtin "JML assume" (formula "58"))
                (builtin "One Step Simplification" (formula "58"))
               (rule "impRight" (formula "58"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "1") (ifseqformula "3"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "1,0,1") (ifseqformula "3"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "1") (ifseqformula "30"))
               (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "58"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "2,0") (ifseqformula "27"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "1,0") (ifseqformula "30"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "1,0") (ifseqformula "3"))
                (builtin "JML assume" (formula "64"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "impRight" (formula "64"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0"))
                (builtin "JML assume" (formula "64"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "impRight" (formula "64"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0"))
                (builtin "JML assume" (formula "64"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "impRight" (formula "64"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0"))
                (builtin "JML assume" (formula "64"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "impRight" (formula "64"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0"))
                (builtin "JML assume" (formula "64"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "impRight" (formula "64"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0"))
               (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "0"))
                (builtin "JML assume" (formula "64"))
                (builtin "One Step Simplification" (formula "64"))
               (rule "impRight" (formula "64"))
               (rule "polySimp_homoEq" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "63"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0,1"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,1,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0,0,1"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1,0,1"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,1,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,0,0,0"))
               (rule "replaceKnownSelect_taclet010_11" (formula "1") (term "0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "62"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "dismissNonSelectedField" (formula "2") (term "1,1,0"))
               (rule "dismissNonSelectedField" (formula "2") (term "1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "2") (term "1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "2") (term "1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet010_8" (formula "2") (term "0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_9" (formula "2") (term "0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
               (rule "replaceKnownSelect_taclet010_10" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_29" (formula "1") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1"))
               (rule "replaceKnownSelect_taclet010_6" (formula "1") (term "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_7" (formula "1") (term "1"))
               (rule "dismissNonSelectedField" (formula "62") (term "0"))
               (rule "replaceKnownSelect_taclet010_11" (formula "62") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "62") (term "0"))
               (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0"))
               (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "1,1,1,0"))
               (rule "replaceKnownSelect_taclet010_11" (formula "1") (term "1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_12" (formula "1") (term "1,1,0"))
               (rule "replaceKnownSelect_taclet010_15" (formula "1") (term "1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_28" (formula "1") (term "1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "60"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
                (builtin "JML assert" (formula "64"))
               (branch "Validity"
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "inEqSimp_geqRight" (formula "64"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_SortedList_size_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "55") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "55") (term "1,0,0,1"))
                  (rule "add_literals" (formula "55") (term "0,0,1"))
                  (rule "qeq_literals" (formula "55") (term "0,1"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "notLeft" (formula "55"))
                  (rule "replace_known_right" (formula "52") (term "0,0,0,1,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                  (rule "replace_known_right" (formula "54") (term "0,1,1,0,0,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                  (rule "replace_known_right" (formula "51") (term "0,0,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "replace_known_right" (formula "53") (term "0,0,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "53"))
                  (rule "replace_known_right" (formula "50") (term "0,0,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "true_left" (formula "56"))
                  (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "true_left" (formula "57"))
                  (rule "ifthenelse_negated" (formula "51") (term "0"))
                  (rule "ifthenelse_negated" (formula "53") (term "0"))
                  (rule "ifthenelse_negated" (formula "50") (term "0"))
                  (rule "applyEq" (formula "23") (term "0,1") (ifseqformula "55"))
                  (rule "polySimp_homoEq" (formula "23") (term "1"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                  (rule "add_literals" (formula "23") (term "0,0,1"))
                  (rule "add_zero_left" (formula "23") (term "0,1"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "55"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "55"))
                  (rule "inEqSimp_homoInEq1" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0"))
                  (rule "add_literals" (formula "16") (term "0,0"))
                  (rule "add_zero_left" (formula "16") (term "0"))
                  (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "55"))
                  (rule "polySimp_homoEq" (formula "25") (term "0"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0"))
                  (rule "add_zero_left" (formula "25") (term "0,0"))
                  (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "55"))
                  (rule "polySimp_homoEq" (formula "27") (term "0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0"))
                  (rule "applyEq" (formula "2") (term "1,3,0") (ifseqformula "55"))
                  (rule "polySimp_addAssoc" (formula "2") (term "3,0"))
                  (rule "add_literals" (formula "2") (term "0,3,0"))
                  (rule "applyEq" (formula "8") (term "1") (ifseqformula "55"))
                  (rule "applyEq" (formula "27") (term "1,1,1") (ifseqformula "55"))
                  (rule "polySimp_addAssoc" (formula "27") (term "1,1"))
                  (rule "add_literals" (formula "27") (term "0,1,1"))
                  (rule "add_zero_left" (formula "27") (term "1,1"))
                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "55"))
                  (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "55"))
                  (rule "polySimp_addAssoc" (formula "57") (term "1"))
                  (rule "add_literals" (formula "57") (term "0,1"))
                  (rule "applyEq" (formula "26") (term "1,1,1") (ifseqformula "55"))
                  (rule "polySimp_addAssoc" (formula "26") (term "1,1"))
                  (rule "add_literals" (formula "26") (term "0,1,1"))
                  (rule "add_zero_left" (formula "26") (term "1,1"))
                  (rule "polySimp_invertEq" (formula "23") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                  (rule "mul_literals" (formula "23") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                  (rule "polySimp_invertEq" (formula "25") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                  (rule "polySimp_invertEq" (formula "27") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_invertInEq0" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "23") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,1"))
                  (rule "add_literals" (formula "23") (term "0,0,1"))
                  (rule "qeq_literals" (formula "23") (term "0,1"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "58"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "2") (term "1,3,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "35") (term "1,1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "polySimp_homoEq" (formula "51"))
                  (rule "polySimp_homoEq" (formula "8"))
                  (rule "polySimp_addComm1" (formula "51") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "51"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1"))
                  (rule "polySimp_rightDist" (formula "51") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                  (rule "mul_literals" (formula "51") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                  (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "51"))
                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0"))
                  (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "51"))
                  (rule "polySimp_homoEq" (formula "22") (term "0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "51"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "51"))
                  (rule "polySimp_homoEq" (formula "19") (term "0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0"))
                  (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "51"))
                  (rule "polySimp_homoEq" (formula "17") (term "1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                  (rule "add_literals" (formula "17") (term "0,0,1"))
                  (rule "applyEq" (formula "2") (term "1,3,0") (ifseqformula "51"))
                  (rule "polySimp_addAssoc" (formula "2") (term "3,0"))
                  (rule "add_literals" (formula "2") (term "0,3,0"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "51"))
                  (rule "applyEq" (formula "22") (term "1,1,1") (ifseqformula "51"))
                  (rule "polySimp_addAssoc" (formula "22") (term "1,1"))
                  (rule "add_literals" (formula "22") (term "0,1,1"))
                  (rule "applyEq" (formula "20") (term "1,1,1") (ifseqformula "51"))
                  (rule "polySimp_addAssoc" (formula "20") (term "1,1"))
                  (rule "add_literals" (formula "20") (term "0,1,1"))
                  (rule "applyEq" (formula "53") (term "1,1") (ifseqformula "51"))
                  (rule "polySimp_addAssoc" (formula "53") (term "1"))
                  (rule "add_literals" (formula "53") (term "0,1"))
                  (rule "applyEq" (formula "50") (term "1") (ifseqformula "51"))
                  (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "51"))
                  (rule "polySimp_addAssoc" (formula "33") (term "1"))
                  (rule "add_literals" (formula "33") (term "0,1"))
                  (rule "add_zero_left" (formula "33") (term "1"))
                  (rule "polySimp_sepNegMonomial" (formula "8"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "22") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "19") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                  (rule "mul_literals" (formula "16") (term "1"))
                  (rule "inEqSimp_contradEq3" (formula "19") (term "0") (ifseqformula "1"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0"))
                  (rule "qeq_literals" (formula "19") (term "0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "inEqSimp_contradEq3" (formula "21") (term "0") (ifseqformula "1"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0"))
                  (rule "qeq_literals" (formula "21") (term "0,0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "inEqSimp_contradEq3" (formula "17") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,1"))
                  (rule "add_literals" (formula "17") (term "0,0,1"))
                  (rule "qeq_literals" (formula "17") (term "0,1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "notLeft" (formula "17"))
                  (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "52"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "closeFalse" (formula "16"))
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "64"))
                  (rule "impRight" (formula "64"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_SortedList_size_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "16"))
                  (rule "leq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                   (builtin "Use Operation Contract" (formula "64") (newnames "heapBefore_havocPacked_0,exc_2,heapAfter_havocPacked_0,anon_heap_havocPacked_0") (contract "case_study.SortedList[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
                  (branch "Post (havocPacked)"
                      (builtin "One Step Simplification" (formula "62"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "andLeft" (formula "62"))
                      (builtin "JML assume" (formula "67"))
                      (builtin "One Step Simplification" (formula "67"))
                     (rule "impRight" (formula "67"))
                     (rule "emptyStatement" (formula "68") (term "1"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_4"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "methodCallEmpty" (formula "68") (term "1"))
                     (rule "tryEmpty" (formula "68") (term "1"))
                     (rule "emptyModality" (formula "68") (term "1"))
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "67")))
                     (rule "eqSymm" (formula "68") (term "1,0,0,1"))
                     (rule "pullOutSelect" (formula "68") (term "0,1,0,0") (inst "selectSK=case_study_SortedListNode_size_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "69") (term "1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "69") (term "0,0,0,0,0") (inst "selectSK=case_study_SortedList_first_2"))
                     (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "65"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "replaceKnownSelect_taclet00010_35" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet00010_36" (formula "1") (term "2,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "70") (term "0,1,0,0") (inst "selectSK=case_study_SortedList_size_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "66"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                     (rule "replaceKnownSelect_taclet100010_37" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet100010_38" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
                     (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "elementOfInfiniteUnion" (formula "4") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__4"))
                     (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "73")))
                     (rule "replaceKnownSelect_taclet0010_31" (formula "2") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_32" (formula "2") (term "2,0"))
                     (rule "replaceKnownSelect_taclet0010_31" (formula "2") (term "0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_32" (formula "2") (term "0,0,0,0"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "73") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "3") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "1"))
                     (rule "replaceKnownSelect_taclet010_13" (formula "3") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet010_27" (formula "3") (term "2,0"))
                     (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "72") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "1,0,1,1,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "69")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "68"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "68"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_right" (formula "70") (term "0,0,0,0") (ifseqformula "68"))
                      (builtin "One Step Simplification" (formula "70"))
                     (rule "polySimp_homoEq" (formula "70") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "70") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "70") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "70") (term "0,0,0,0"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "62"))
                     (rule "polySimp_sepNegMonomial" (formula "70") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "70") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__5"))
                     (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "13"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "12"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "69") (term "1,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "68") (term "1,0,0"))
                     (rule "add_literals" (formula "68") (term "0,1,0,0"))
                     (rule "add_zero_left" (formula "68") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "Class_invariant_axiom_for_case_study_SortedList" (formula "68") (term "0") (ifseqformula "67"))
                      (builtin "One Step Simplification" (formula "68"))
                     (rule "allRight" (formula "68") (inst "sk=f_0"))
                     (rule "allRight" (formula "68") (inst "sk=o_0"))
                     (rule "orRight" (formula "68"))
                     (rule "orRight" (formula "68"))
                     (rule "orRight" (formula "68"))
                     (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "72"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "70"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__6"))
                     (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                     (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                     (rule "applyEqReverse" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "73"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "73"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "commute_and_2" (formula "70"))
                     (rule "ifthenelse_split" (formula "41") (term "0"))
                     (branch " ((self.first@heap).tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                        (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "42"))
                        (rule "hideAuxiliaryEq" (formula "42"))
                        (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "41"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "hideAuxiliaryEq" (formula "36"))
                        (rule "replace_known_left" (formula "41") (term "1,0,0,0") (ifseqformula "40"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "40"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "applyEqReverse" (formula "49") (term "0,0,0,0,0,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "37") (term "0,0,0,0,0,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")) (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "52") (term "1,0,1,0,1,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "1,1,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "50") (term "0,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "51") (term "0,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "51") (term "1,1,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "1,0,1,0,1,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "53") (term "1,2,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "0,0,0,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "50") (term "1,2,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "55") (term "0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "0,0,1,1,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "1,0,1,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "53") (term "0,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "1,0,1,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "0,0,1,1,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "1,0,1,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "1,1,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "1,0,1,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "1,0,1,1,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "0,0,0,0,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "53") (term "1,1,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "54") (term "1,0,1,1,0,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "52") (term "0,0,0,0,1,0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "58") (term "0,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "51") (term "1,2,0") (ifseqformula "49"))
                        (rule "applyEqReverse" (formula "50") (term "1,1,0") (ifseqformula "49"))
                        (rule "hideAuxiliaryEq" (formula "35"))
                        (rule "hideAuxiliaryEq" (formula "48"))
                        (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "hideAuxiliaryEq" (formula "35"))
                        (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "hideAuxiliaryEq" (formula "45"))
                        (rule "commute_and" (formula "65") (term "0"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: self.first.tail = null TRUE"
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "53"))
                           (rule "true_left" (formula "53"))
                           (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1,1,0,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "18"))
                           (rule "polySimp_homoEq" (formula "41") (term "1"))
                           (rule "mul_literals" (formula "41") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,1"))
                           (rule "add_zero_left" (formula "41") (term "0,1"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "46") (term "1,3,0,0") (ifseqformula "18"))
                           (rule "add_literals" (formula "46") (term "3,0,0"))
                           (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "18"))
                           (rule "add_literals" (formula "3") (term "3,0"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "18"))
                           (rule "add_literals" (formula "43") (term "1"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "18"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_and_2" (formula "52"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_and" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0"))
                           (rule "cut_direct" (formula "53") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (rule "typeEqDerived" (formula "53") (term "0,0,0") (ifseqformula "1"))
                              (rule "typeEqDerived" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "54"))
                               (builtin "One Step Simplification" (formula "53"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "false_right" (formula "54"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "2") (term "1,0,1,1,0,0"))
                              (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "53") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "false_right" (formula "53"))
                              (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "52"))
                              (rule "applyEq" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "2") (term "0,0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "51") (term "1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "closeTrue" (formula "51"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "notRight" (formula "54"))
                              (rule "ifthenelse_split" (formula "40") (term "0"))
                              (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "40"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "replace_known_right" (formula "40") (term "1,0,1,0,0") (ifseqformula "49"))
                                  (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                 (rule "replace_known_right" (formula "37") (term "0,1,0,0") (ifseqformula "49"))
                                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "37"))
                                 (rule "hideAuxiliaryEq" (formula "37"))
                                 (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "48")))
                                 (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0,0,0,1,0,0,0") (ifseqformula "37"))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "39"))
                                 (rule "hideAuxiliaryEq" (formula "37"))
                                 (rule "hideAuxiliaryEq" (formula "38"))
                                 (rule "replace_known_right" (formula "37") (term "1,0,1,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "45")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "45")))
                                 (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "37"))
                                 (rule "hideAuxiliaryEq" (formula "37"))
                                 (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_commuteLeq" (formula "38"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "55"))
                                    (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "46")))
                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "cut_direct" (formula "19") (term "0"))
                                    (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "7"))
                                       (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "52") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "52") (ifseqformula "1"))
                                    )
                                    (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "ineffectiveCast" (formula "54") (term "1,0") (ifseqformula "2"))
                                       (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "53") (ifseqformula "2"))
                                    )
                                 )
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "53") (ifseqformula "2"))
                                 )
                              )
                              (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "37"))
                                 (rule "hideAuxiliaryEq" (formula "37"))
                                 (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,0,1,0,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0,0,0,0") (ifseqformula "37"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0,0,0,1,0,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "hideAuxiliaryEq" (formula "37"))
                                 (rule "commute_or" (formula "38") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "37") (term "1,0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "2")))
                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "ifthenelse_split" (formula "38") (term "0"))
                                    (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_right" (formula "40") (term "0,0,0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "41") (term "0,1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "notRight" (formula "50"))
                                       (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "39"))
                                       (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "replace_known_right" (formula "39") (term "0,0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "39"))
                                       (rule "inEqSimp_commuteLeq" (formula "40"))
                                       (rule "cut_direct" (formula "20") (term "0"))
                                       (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "ineffectiveCast" (formula "53") (term "1,0") (ifseqformula "3"))
                                          (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "52") (ifseqformula "3"))
                                       )
                                       (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "ineffectiveCast" (formula "54") (term "1,0") (ifseqformula "3"))
                                          (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "53") (ifseqformula "3"))
                                       )
                                    )
                                    (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "inEqSimp_commuteLeq" (formula "39") (term "1"))
                                       (rule "cut_direct" (formula "19") (term "0"))
                                       (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "7"))
                                          (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "20"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "2"))
                                          (rule "close" (formula "52") (ifseqformula "1"))
                                       )
                                       (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "ineffectiveCast" (formula "54") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "53") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "54") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: self.first.tail = null FALSE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "26"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "25"))
                           (rule "polySimp_homoEq" (formula "20") (term "0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                           (rule "polySimp_homoEq" (formula "23") (term "0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_homoEq" (formula "18") (term "1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                           (rule "add_literals" (formula "18") (term "0,0,1"))
                           (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "25"))
                           (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                           (rule "add_literals" (formula "23") (term "0,1,1"))
                           (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "25"))
                           (rule "polySimp_addAssoc" (formula "21") (term "1,1"))
                           (rule "add_literals" (formula "21") (term "0,1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "20") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "cut_direct" (formula "50") (term "0"))
                           (branch "CUT: self.size = 1 TRUE"
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "50"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "49"))
                              (rule "add_literals" (formula "54") (term "3,0,0"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "49"))
                              (rule "qeq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "48"))
                              (rule "polySimp_homoEq" (formula "47") (term "1"))
                              (rule "mul_literals" (formula "47") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "47") (term "0,1"))
                              (rule "add_literals" (formula "47") (term "0,0,1"))
                              (rule "add_zero_left" (formula "47") (term "0,1"))
                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "48"))
                              (rule "equal_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "47"))
                              (rule "equal_literals" (formula "21") (term "0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "21"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "46"))
                              (rule "equal_literals" (formula "17") (term "1"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "52"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "45"))
                              (rule "add_literals" (formula "3") (term "3,0"))
                              (rule "applyEq" (formula "28") (term "1") (ifseqformula "45"))
                              (rule "applyEq" (formula "47") (term "1,1") (ifseqformula "45"))
                              (rule "add_literals" (formula "47") (term "1"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "45"))
                              (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "45"))
                              (rule "add_literals" (formula "21") (term "1"))
                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "45"))
                              (rule "add_literals" (formula "19") (term "1"))
                              (rule "commute_and_2" (formula "58"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0"))
                              (rule "cut_direct" (formula "59") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                 (rule "typeEqDerived" (formula "59") (term "0,0,0") (ifseqformula "1"))
                                 (rule "typeEqDerived" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "60"))
                                  (builtin "One Step Simplification" (formula "59"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "false_right" (formula "60"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "2") (term "0,0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "60")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "notRight" (formula "60"))
                                 (rule "ifthenelse_split" (formula "43") (term "0"))
                                 (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "43"))
                                    (rule "notLeft" (formula "43"))
                                    (rule "notLeft" (formula "43"))
                                    (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "replace_known_right" (formula "42") (term "0,1,1,0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")) (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                    (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0,0,0,0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,0,1,0,0,0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "replace_known_right" (formula "41") (term "1,0,1,0,0,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "replace_known_right" (formula "40") (term "0,0,0,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "49")))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_commuteLeq" (formula "42"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "61"))
                                       (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "2")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ineffectiveCast" (formula "59") (term "1,0") (ifseqformula "2"))
                                       (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "59") (ifseqformula "2"))
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "59") (ifseqformula "2"))
                                    )
                                 )
                                 (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,0,1,0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,1,0,0,0,0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,0,1,0,0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,0,0,1,0,0,0") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "commute_or" (formula "40") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "41") (term "1,0,0,0"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "62"))
                                       (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "52")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ifthenelse_split" (formula "42") (term "0"))
                                       (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "42"))
                                          (rule "andLeft" (formula "42"))
                                          (rule "notLeft" (formula "42"))
                                          (rule "applyEqReverse" (formula "45") (term "0,1") (ifseqformula "44"))
                                          (rule "hideAuxiliaryEq" (formula "44"))
                                          (rule "replace_known_left" (formula "41") (term "1,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "52")) (ifInst ""  (formula "42")))
                                          (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "41"))
                                          (rule "hideAuxiliaryEq" (formula "41"))
                                          (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "notRight" (formula "53"))
                                          (rule "replace_known_right" (formula "42") (term "0,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "1")))
                                          (rule "true_left" (formula "42"))
                                          (rule "inEqSimp_commuteLeq" (formula "44"))
                                          (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "3"))
                                          (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "58") (ifseqformula "3"))
                                       )
                                       (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "43") (term "0,1") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "41"))
                                          (rule "hideAuxiliaryEq" (formula "41"))
                                          (rule "inEqSimp_commuteLeq" (formula "43") (term "1"))
                                          (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "58") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "60") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self.size = 1 FALSE"
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "58"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "notLeft" (formula "48"))
                              (rule "replace_known_right" (formula "45") (term "0,0,0,1,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                              (rule "replace_known_right" (formula "47") (term "0,0,0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                              (rule "replace_known_right" (formula "43") (term "0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "replace_known_right" (formula "46") (term "0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")))
                              (rule "true_left" (formula "48"))
                              (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "50")))
                              (rule "true_left" (formula "49"))
                              (rule "ifthenelse_negated" (formula "43") (term "0"))
                              (rule "ifthenelse_negated" (formula "46") (term "0"))
                              (rule "ifthenelse_negated" (formula "44") (term "0"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "48"))
                              (rule "polySimp_homoEq" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0"))
                              (rule "applyEq" (formula "56") (term "0") (ifseqformula "48"))
                              (rule "polySimp_homoEq" (formula "56"))
                              (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                              (rule "mul_literals" (formula "56") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "56") (term "0"))
                              (rule "add_literals" (formula "56") (term "0,0"))
                              (rule "add_zero_left" (formula "56") (term "0"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "3") (term "3,0"))
                              (rule "add_literals" (formula "3") (term "0,3,0"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "48"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "48"))
                              (rule "polySimp_homoEq" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "48"))
                              (rule "polySimp_homoEq" (formula "20") (term "0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "53") (term "1,3,0,0") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "53") (term "3,0,0"))
                              (rule "add_literals" (formula "53") (term "0,3,0,0"))
                              (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1,1"))
                              (rule "add_literals" (formula "21") (term "0,1,1"))
                              (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                              (rule "add_literals" (formula "23") (term "0,1,1"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "48"))
                              (rule "applyEq" (formula "32") (term "1") (ifseqformula "48"))
                              (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "50") (term "1"))
                              (rule "add_literals" (formula "50") (term "0,1"))
                              (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "48"))
                              (rule "polySimp_addAssoc" (formula "25") (term "1"))
                              (rule "add_literals" (formula "25") (term "0,1"))
                              (rule "add_zero_left" (formula "25") (term "1"))
                              (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "21") (term "1,1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "56") (term "0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "53") (term "1,3,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "3") (term "1,3,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "18") (term "0,1,0,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "48") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "20") (term "0,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "17") (term "0,0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "polySimp_homoEq" (formula "9"))
                              (rule "polySimp_homoEq" (formula "47"))
                              (rule "polySimp_addComm1" (formula "9") (term "0"))
                              (rule "polySimp_addComm1" (formula "47") (term "0"))
                              (rule "polySimp_invertEq" (formula "55"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                              (rule "mul_literals" (formula "55") (term "1"))
                              (rule "polySimp_elimOne" (formula "55") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "9"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1"))
                              (rule "polySimp_rightDist" (formula "9") (term "1"))
                              (rule "mul_literals" (formula "9") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "3") (term "3,0"))
                              (rule "add_literals" (formula "3") (term "0,3,0"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "9"))
                              (rule "polySimp_homoEq" (formula "20") (term "0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "9"))
                              (rule "polySimp_homoEq" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "applyEq" (formula "52") (term "1,3,0,0") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "52") (term "3,0,0"))
                              (rule "add_literals" (formula "52") (term "0,3,0,0"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "9"))
                              (rule "polySimp_homoEq" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0"))
                              (rule "polySimp_rightDist" (formula "17") (term "0"))
                              (rule "mul_literals" (formula "17") (term "0,0"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "9"))
                              (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0"))
                              (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                              (rule "add_literals" (formula "47") (term "0,0,0"))
                              (rule "add_zero_left" (formula "47") (term "0,0"))
                              (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                              (rule "add_literals" (formula "23") (term "0,1,1"))
                              (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1,1"))
                              (rule "add_literals" (formula "21") (term "0,1,1"))
                              (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "49") (term "1"))
                              (rule "add_literals" (formula "49") (term "0,1"))
                              (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "9"))
                              (rule "polySimp_addAssoc" (formula "31") (term "1"))
                              (rule "add_literals" (formula "31") (term "0,1"))
                              (rule "add_zero_left" (formula "31") (term "1"))
                              (rule "applyEq" (formula "46") (term "1") (ifseqformula "9"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "55"))
                              (rule "mul_literals" (formula "55") (term "1"))
                              (rule "polySimp_sepPosMonomial" (formula "47"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "1"))
                              (rule "polySimp_elimOne" (formula "47") (term "1"))
                              (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "47"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "47"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "47"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "47"))
                              (rule "applyEq" (formula "52") (term "1,3,0,0") (ifseqformula "47"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "47"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "47"))
                              (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "47"))
                              (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "47"))
                              (rule "applyEq" (formula "31") (term "1") (ifseqformula "47"))
                              (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "47"))
                              (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "47"))
                              (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "47"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "55"))
                              (rule "add_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "17"))
                              (rule "mul_literals" (formula "55") (term "1,0,0"))
                              (rule "add_literals" (formula "55") (term "0,0"))
                              (rule "leq_literals" (formula "55") (term "0"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "false_right" (formula "55"))
                              (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "48"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "commute_and_2" (formula "61"))
                              (rule "cut_direct" (formula "22") (term "0"))
                              (branch "CUT: self.first.tail.tail = null TRUE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "20"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEq" (formula "49") (term "1,3,0,0") (ifseqformula "18"))
                                 (rule "add_literals" (formula "49") (term "3,0,0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "17"))
                                 (rule "add_literals" (formula "3") (term "3,0"))
                                 (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "42") (term "1"))
                                 (rule "ifEqualsInteger" (formula "42"))
                                 (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "45") (term "1"))
                                 (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "9") (term "1"))
                                 (rule "applyEq" (formula "43") (term "1") (ifseqformula "17"))
                                 (rule "applyEq" (formula "26") (term "1") (ifseqformula "17"))
                                 (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                 (rule "cut_direct" (formula "57") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                    (rule "typeEqDerived" (formula "57") (term "0,0,0") (ifseqformula "1"))
                                    (rule "typeEqDerived" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "58"))
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "false_right" (formula "58"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "1,0,1,1,0,0"))
                                    (rule "applyEqRigid" (formula "57") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "57") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "false_right" (formula "57"))
                                    (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notRight" (formula "58"))
                                    (rule "ifthenelse_split" (formula "39") (term "0"))
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "42") (term "2,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "39")) (ifInst ""  (formula "39")) (ifInst ""  (formula "39")))
                                       (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "41"))
                                       (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "inEqSimp_commuteLeq" (formula "42"))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "50")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "57") (ifseqformula "2"))
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "57") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "41") (term "0,1,1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_right" (formula "39") (term "1,0,0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "replace_known_right" (formula "39") (term "1,0,0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")))
                                       (rule "inEqSimp_commuteLeq" (formula "41"))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "cut_direct" (formula "54") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ineffectiveCast" (formula "56") (term "0") (ifseqformula "2"))
                                             (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "1"))
                                             (rule "close" (formula "56") (ifseqformula "2"))
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "58") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: self.first.tail.tail = null FALSE"
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                 (rule "cut_direct" (formula "60") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                    (rule "typeEqDerived" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                    (rule "typeEqDerived" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "61"))
                                     (builtin "One Step Simplification" (formula "60"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "notRight" (formula "61"))
                                    (rule "ifthenelse_split" (formula "41") (term "0"))
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "44") (term "0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "applyEqReverse" (formula "45") (term "2,0") (ifseqformula "44"))
                                       (rule "hideAuxiliaryEq" (formula "44"))
                                       (rule "replace_known_left" (formula "44") (term "1,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "replace_known_left" (formula "43") (term "1,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "43"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "43"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "inEqSimp_commuteLeq" (formula "44"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "52")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                          (rule "close" (formula "60") (ifseqformula "1"))
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "60") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "43") (term "2,0") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "replace_known_right" (formula "42") (term "1,0,0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "replace_known_right" (formula "44") (term "1,0,0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "replace_known_right" (formula "43") (term "0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "43"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqReverse" (formula "43") (term "0,0,0,0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "45") (term "1") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "replace_known_right" (formula "60") (term "0,1,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "2")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "60") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "60") (ifseqformula "2"))
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "60") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch " ((self.first@heap).tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "42") (term "2,0") (ifseqformula "41"))
                        (rule "hideAuxiliaryEq" (formula "41"))
                        (rule "replace_known_right" (formula "38") (term "1,0,0,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "hideAuxiliaryEq" (formula "36"))
                        (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "64"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "35"))
                        (rule "applyEqReverse" (formula "37") (term "0,0,0,0,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "37"))
                        (rule "applyEqReverse" (formula "48") (term "0,0,0,0,0,0") (ifseqformula "35"))
                        (rule "hideAuxiliaryEq" (formula "35"))
                        (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "63"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "hideAuxiliaryEq" (formula "35"))
                        (rule "replace_known_right" (formula "38") (term "1,0,0,0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "applyEqReverse" (formula "46") (term "2,0") (ifseqformula "44"))
                        (rule "hideAuxiliaryEq" (formula "44"))
                        (rule "replace_known_right" (formula "45") (term "1,0,0,0") (ifseqformula "61"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "applyEqReverse" (formula "46") (term "1,1,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "0,0,1,1,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "47") (term "1,0,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "0,0,1,1,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "47") (term "1,1,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "47") (term "0,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "1,0,1,0,1,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "0,0,0,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "1,0,1,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "49") (term "0,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "1,0,1,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "1,0,1,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "46") (term "1,0,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "0,0,0,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "49") (term "1,0,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "51") (term "0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "0,0,0,0,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "0,0,0,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "1,1,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "1,1,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "49") (term "1,2,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "47") (term "1,2,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "1,0,1,1,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "49") (term "1,1,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "1,0,1,0,1,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "48") (term "1,0,1,1,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "46") (term "1,2,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "46") (term "0,0,0,0,0") (ifseqformula "45"))
                        (rule "applyEqReverse" (formula "50") (term "1,0,1,1,0,0,0") (ifseqformula "45"))
                        (rule "hideAuxiliaryEq" (formula "45"))
                        (rule "commute_and" (formula "65") (term "0"))
                        (rule "commute_and_2" (formula "1") (term "0,0"))
                        (rule "cut_direct" (formula "15") (term "0"))
                        (branch "CUT: self.first.tail = null TRUE"
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "true_left" (formula "52"))
                           (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "19"))
                           (rule "add_literals" (formula "3") (term "3,0"))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "applyEq" (formula "46") (term "1,3,0,0") (ifseqformula "19"))
                           (rule "add_literals" (formula "46") (term "3,0,0"))
                           (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "15"))
                           (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "41") (term "0,1") (ifseqformula "19"))
                           (rule "polySimp_homoEq" (formula "41") (term "1"))
                           (rule "mul_literals" (formula "41") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,1"))
                           (rule "add_zero_left" (formula "41") (term "0,1"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                           (rule "qeq_literals" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "18"))
                           (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "18"))
                           (rule "add_literals" (formula "42") (term "1"))
                           (rule "applyEq" (formula "9") (term "1") (ifseqformula "18"))
                           (rule "commute_and_2" (formula "52"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_and" (formula "1") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0,0"))
                           (rule "cut_direct" (formula "53") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (rule "typeEqDerived" (formula "53") (term "0,0,0") (ifseqformula "1"))
                              (rule "typeEqDerived" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "54"))
                               (builtin "One Step Simplification" (formula "53"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "false_right" (formula "54"))
                              (rule "applyEq" (formula "2") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "2") (term "1,0,1,1,0,0"))
                              (rule "applyEq" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "2") (term "0,0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "notRight" (formula "54"))
                              (rule "ifthenelse_split" (formula "36") (term "0"))
                              (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                 (rule "andLeft" (formula "36"))
                                 (rule "notLeft" (formula "37"))
                                 (rule "notLeft" (formula "36"))
                                 (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "replace_known_right" (formula "37") (term "1,0,1,0,0,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                                 (rule "replace_known_right" (formula "39") (term "0,0,0,1,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                 (rule "replace_known_right" (formula "36") (term "0,1,0,0") (ifseqformula "48"))
                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "47")))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "applyEqReverse" (formula "37") (term "0,0,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "39"))
                                 (rule "applyEqReverse" (formula "41") (term "1,1") (ifseqformula "37"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "hideAuxiliaryEq" (formula "38"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "replace_known_right" (formula "36") (term "0,0,0,0") (ifseqformula "44"))
                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "45")))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_commuteLeq" (formula "37"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "55"))
                                    (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "45")))
                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "cut_direct" (formula "19") (term "0"))
                                    (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "ineffectiveCast" (formula "53") (term "1,0") (ifseqformula "2"))
                                       (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "52") (ifseqformula "2"))
                                    )
                                    (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                       (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "2"))
                                       (rule "close" (formula "54") (ifseqformula "1"))
                                    )
                                 )
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "53") (ifseqformula "2"))
                                 )
                              )
                              (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                 (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "replace_known_right" (formula "36") (term "0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "applyEqReverse" (formula "37") (term "0,0,0,0,1,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0,0,0,0") (ifseqformula "36"))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,0,1,0,0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "39"))
                                 (rule "applyEqReverse" (formula "37") (term "0,0,0,1,0,0,0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "37"))
                                 (rule "hideAuxiliaryEq" (formula "37"))
                                 (rule "commute_or" (formula "37") (term "1,0,0,0"))
                                 (rule "commute_or" (formula "36") (term "1,0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "eqSymm" (formula "56"))
                                    (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "2")))
                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "ifthenelse_split" (formula "37") (term "0"))
                                    (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "replace_known_left" (formula "39") (term "1,0,0") (ifseqformula "38"))
                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "47")) (ifInst ""  (formula "37")))
                                       (rule "applyEqReverse" (formula "40") (term "0,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "notRight" (formula "49"))
                                       (rule "replace_known_right" (formula "37") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "1")))
                                       (rule "true_left" (formula "38"))
                                       (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "46")))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_commuteLeq" (formula "39"))
                                       (rule "cut_direct" (formula "20") (term "0"))
                                       (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "8"))
                                          (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "21"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "53") (ifseqformula "2"))
                                       )
                                       (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "ineffectiveCast" (formula "54") (term "1,0") (ifseqformula "3"))
                                          (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "54") (ifseqformula "3"))
                                       )
                                    )
                                    (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "40") (term "1,1") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "45"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "1"))
                                       (rule "cut_direct" (formula "19") (term "0"))
                                       (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "ineffectiveCast" (formula "53") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "53") (ifseqformula "2"))
                                       )
                                       (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "ineffectiveCast" (formula "54") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "53") (ifseqformula "2"))
                                       )
                                    )
                                 )
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                    (rule "close" (formula "54") (ifseqformula "2"))
                                 )
                              )
                           )
                        )
                        (branch "CUT: self.first.tail = null FALSE"
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "replace_known_left" (formula "26") (term "1") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "23"))
                           (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "25"))
                           (rule "polySimp_homoEq" (formula "18") (term "1"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                           (rule "add_literals" (formula "18") (term "0,0,1"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "25"))
                           (rule "polySimp_homoEq" (formula "20") (term "0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0"))
                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "25"))
                           (rule "polySimp_homoEq" (formula "23") (term "0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0"))
                           (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "25"))
                           (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                           (rule "add_literals" (formula "23") (term "0,1,1"))
                           (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "25"))
                           (rule "polySimp_addAssoc" (formula "21") (term "1,1"))
                           (rule "add_literals" (formula "21") (term "0,1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                           (rule "polySimp_sepNegMonomial" (formula "20") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                           (rule "cut_direct" (formula "49") (term "0"))
                           (branch "CUT: self.size = 1 TRUE"
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "51"))
                              (rule "true_left" (formula "51"))
                              (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "48"))
                              (rule "qeq_literals" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "applyEq" (formula "52") (term "1,3,0,0") (ifseqformula "47"))
                              (rule "add_literals" (formula "52") (term "3,0,0"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "47"))
                              (rule "add_literals" (formula "3") (term "3,0"))
                              (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "47"))
                              (rule "equal_literals" (formula "22") (term "0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "22"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "46"))
                              (rule "equal_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "45"))
                              (rule "polySimp_homoEq" (formula "44") (term "1"))
                              (rule "mul_literals" (formula "44") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                              (rule "add_literals" (formula "44") (term "0,0,1"))
                              (rule "add_zero_left" (formula "44") (term "0,1"))
                              (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "45"))
                              (rule "equal_literals" (formula "17") (term "1"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "51"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "44"))
                              (rule "add_literals" (formula "46") (term "1"))
                              (rule "applyEq" (formula "28") (term "1") (ifseqformula "44"))
                              (rule "applyEq" (formula "9") (term "1") (ifseqformula "44"))
                              (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "44"))
                              (rule "add_literals" (formula "21") (term "1"))
                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "44"))
                              (rule "add_literals" (formula "19") (term "1"))
                              (rule "commute_and_2" (formula "58"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0"))
                              (rule "commute_and" (formula "1") (term "0,0,0,0"))
                              (rule "commute_and_2" (formula "1") (term "0,0,0"))
                              (rule "cut_direct" (formula "59") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                 (rule "typeEqDerived" (formula "59") (term "0,0,0") (ifseqformula "1"))
                                 (rule "typeEqDerived" (formula "2") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "60"))
                                  (builtin "One Step Simplification" (formula "59"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "false_right" (formula "60"))
                                 (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "2") (term "0,0,1,0,0,0"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "60")))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "60"))
                                 (rule "notRight" (formula "60"))
                                 (rule "ifthenelse_split" (formula "39") (term "0"))
                                 (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "39") (term "0,1,0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "51")))
                                    (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0,0,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,1,0,0,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0,0,0,1,0,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "42") (term "0,0,0,0,1,0,0,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "41") (term "1,0,1,0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "42") (term "0,1") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "replace_known_right" (formula "39") (term "0,1,1,0,0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")))
                                    (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "39") (term "0,0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "49")))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_commuteLeq" (formula "41"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "61"))
                                       (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "2")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ineffectiveCast" (formula "59") (term "1,0") (ifseqformula "2"))
                                       (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "58") (ifseqformula "2"))
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "59") (ifseqformula "2"))
                                    )
                                 )
                                 (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "41") (term "2,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "41") (term "0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "2,0") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0,0,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0,0,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "41") (term "0,0,0,0,1,0,0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "applyEqReverse" (formula "40") (term "0,0,0,0,1,0,0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "commute_or" (formula "40") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "39") (term "1,0,0,0"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "62"))
                                       (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "51")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ifthenelse_split" (formula "40") (term "0"))
                                       (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "40"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "applyEqReverse" (formula "46") (term "1,1") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "replace_known_right" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "51")) (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "43") (term "0,1") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "notRight" (formula "52"))
                                          (rule "replace_known_left" (formula "41") (term "1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                                          (rule "true_left" (formula "41"))
                                          (rule "inEqSimp_commuteLeq" (formula "43"))
                                          (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "3"))
                                          (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "59") (ifseqformula "3"))
                                       )
                                       (branch " ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ¬ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction» = null ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "44") (term "1,1") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "inEqSimp_commuteLeq" (formula "42") (term "1"))
                                          (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "2"))
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "60") (ifseqformula "2"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self.size = 1 FALSE"
                               (builtin "One Step Simplification" (formula "49"))
                              (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "notLeft" (formula "47"))
                              (rule "replace_known_right" (formula "44") (term "0,1,1,0,0,0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                              (rule "replace_known_right" (formula "46") (term "0,1,1,0,0,0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                              (rule "replace_known_right" (formula "45") (term "0,0,0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "replace_known_right" (formula "43") (term "0,0,0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "48"))
                               (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")))
                              (rule "true_left" (formula "47"))
                              (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "55"))
                               (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "49")))
                              (rule "true_left" (formula "48"))
                              (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "54"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "ifthenelse_negated" (formula "45") (term "0"))
                              (rule "ifthenelse_negated" (formula "43") (term "0"))
                              (rule "ifthenelse_negated" (formula "42") (term "0"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "3") (term "3,0"))
                              (rule "add_literals" (formula "3") (term "0,3,0"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "47"))
                              (rule "polySimp_homoEq" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "47"))
                              (rule "polySimp_homoEq" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "47"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "applyEq" (formula "52") (term "1,3,0,0") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "52") (term "3,0,0"))
                              (rule "add_literals" (formula "52") (term "0,3,0,0"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "47"))
                              (rule "polySimp_homoEq" (formula "20") (term "0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "47"))
                              (rule "polySimp_homoEq" (formula "55"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                              (rule "mul_literals" (formula "55") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "55") (term "0"))
                              (rule "add_literals" (formula "55") (term "0,0"))
                              (rule "add_zero_left" (formula "55") (term "0"))
                              (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "49") (term "1"))
                              (rule "add_literals" (formula "49") (term "0,1"))
                              (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                              (rule "add_literals" (formula "23") (term "0,1,1"))
                              (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1,1"))
                              (rule "add_literals" (formula "21") (term "0,1,1"))
                              (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "47"))
                              (rule "polySimp_addAssoc" (formula "25") (term "1"))
                              (rule "add_literals" (formula "25") (term "0,1"))
                              (rule "add_zero_left" (formula "25") (term "1"))
                              (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "21") (term "1,1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "47") (term "1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "20") (term "0,1,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "55") (term "0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "18") (term "0,1,0,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "52") (term "1,3,0,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "3") (term "1,3,0") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "25"))
                              (rule "applyEqReverse" (formula "17") (term "0,0") (ifseqformula "25"))
                              (rule "hideAuxiliaryEq" (formula "25"))
                              (rule "polySimp_homoEq" (formula "46"))
                              (rule "polySimp_addComm1" (formula "46") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                              (rule "polySimp_invertEq" (formula "54"))
                              (rule "mul_literals" (formula "54") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                              (rule "polySimp_elimOne" (formula "54") (term "0"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "polySimp_sepPosMonomial" (formula "46"))
                              (rule "polySimp_mulComm0" (formula "46") (term "1"))
                              (rule "polySimp_rightDist" (formula "46") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                              (rule "mul_literals" (formula "46") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                              (rule "applyEq" (formula "54") (term "0") (ifseqformula "46"))
                              (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "46"))
                              (rule "polySimp_homoEq" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0"))
                              (rule "applyEq" (formula "51") (term "1,3,0,0") (ifseqformula "46"))
                              (rule "polySimp_addAssoc" (formula "51") (term "3,0,0"))
                              (rule "add_literals" (formula "51") (term "0,3,0,0"))
                              (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "46"))
                              (rule "polySimp_homoEq" (formula "18") (term "1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                              (rule "add_literals" (formula "18") (term "0,0,1"))
                              (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "46"))
                              (rule "polySimp_addAssoc" (formula "3") (term "3,0"))
                              (rule "add_literals" (formula "3") (term "0,3,0"))
                              (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "46"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0"))
                              (rule "polySimp_rightDist" (formula "17") (term "0"))
                              (rule "mul_literals" (formula "17") (term "0,0"))
                              (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "46"))
                              (rule "polySimp_homoEq" (formula "20") (term "0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "45") (term "1") (ifseqformula "46"))
                              (rule "applyEq" (formula "21") (term "1,1,1") (ifseqformula "46"))
                              (rule "polySimp_addAssoc" (formula "21") (term "1,1"))
                              (rule "add_literals" (formula "21") (term "0,1,1"))
                              (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "46"))
                              (rule "polySimp_addAssoc" (formula "48") (term "1"))
                              (rule "add_literals" (formula "48") (term "0,1"))
                              (rule "applyEq" (formula "23") (term "1,1,1") (ifseqformula "46"))
                              (rule "polySimp_addAssoc" (formula "23") (term "1,1"))
                              (rule "add_literals" (formula "23") (term "0,1,1"))
                              (rule "polySimp_sepPosMonomial" (formula "54"))
                              (rule "mul_literals" (formula "54") (term "1"))
                              (rule "polySimp_sepNegMonomial" (formula "23") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                              (rule "polySimp_sepNegMonomial" (formula "20") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_strengthen1" (formula "17") (ifseqformula "54"))
                              (rule "add_literals" (formula "17") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "17"))
                              (rule "mul_literals" (formula "54") (term "1,0,0"))
                              (rule "add_literals" (formula "54") (term "0,0"))
                              (rule "leq_literals" (formula "54") (term "0"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "false_right" (formula "54"))
                              (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "47"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                              (rule "commute_and_2" (formula "61"))
                              (rule "cut_direct" (formula "22") (term "0"))
                              (branch "CUT: self.first.tail.tail = null TRUE"
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "applyEq" (formula "3") (term "1,3,0") (ifseqformula "18"))
                                 (rule "add_literals" (formula "3") (term "3,0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                 (rule "qeq_literals" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "applyEq" (formula "47") (term "1,3,0,0") (ifseqformula "17"))
                                 (rule "add_literals" (formula "47") (term "3,0,0"))
                                 (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "44") (term "1"))
                                 (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "41") (term "1"))
                                 (rule "ifEqualsInteger" (formula "41"))
                                 (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "42") (term "1"))
                                 (rule "applyEq" (formula "9") (term "1") (ifseqformula "17"))
                                 (rule "applyEq" (formula "26") (term "1") (ifseqformula "17"))
                                 (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                 (rule "cut_direct" (formula "57") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                    (rule "typeEqDerived" (formula "57") (term "0,0,0") (ifseqformula "1"))
                                    (rule "typeEqDerived" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "58"))
                                     (builtin "One Step Simplification" (formula "57"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "false_right" (formula "58"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notRight" (formula "58"))
                                    (rule "ifthenelse_split" (formula "41") (term "0"))
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "43") (term "0,1,1") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "inEqSimp_commuteLeq" (formula "41"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "49")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ineffectiveCast" (formula "57") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "57") (ifseqformula "2"))
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "57") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "42") (term "0,1,1") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqReverse" (formula "40") (term "2,0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_right" (formula "38") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "0,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "40") (term "0,0,0,0,0,0,1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_right" (formula "38") (term "1,0,0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "38"))
                                       (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "replace_known_right" (formula "38") (term "1,0,0,0,1") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "46")))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "inEqSimp_commuteLeq" (formula "40"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "cut_direct" (formula "54") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "56") (term "1,0") (ifseqformula "2"))
                                             (rule "close" (formula "56") (ifseqformula "1"))
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "58") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: self.first.tail.tail = null FALSE"
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "commute_and_2" (formula "1") (term "0,0,0"))
                                 (rule "cut_direct" (formula "60") (term "0,0"))
                                 (branch "CUT: o_0 = null TRUE"
                                    (rule "typeEqDerived" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                    (rule "typeEqDerived" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "61"))
                                     (builtin "One Step Simplification" (formula "60"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "false_right" (formula "61"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEqRigid" (formula "59") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "castDel" (formula "59") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "false_right" (formula "59"))
                                    (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "closeTrue" (formula "59"))
                                 )
                                 (branch "CUT: o_0 = null FALSE"
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "notRight" (formula "61"))
                                    (rule "ifthenelse_split" (formula "43") (term "0"))
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "45") (term "2,0") (ifseqformula "44"))
                                       (rule "hideAuxiliaryEq" (formula "44"))
                                       (rule "replace_known_left" (formula "42") (term "1,0,0,0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "42"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "42"))
                                       (rule "hideAuxiliaryEq" (formula "42"))
                                       (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_left" (formula "40") (term "0,0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "inEqSimp_commuteLeq" (formula "43"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "51")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ineffectiveCast" (formula "60") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "59") (ifseqformula "2"))
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "60") (ifseqformula "2"))
                                       )
                                    )
                                    (branch " ((self.first@heap).tail.tail@anon_heap___insert_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "43"))
                                       (rule "hideAuxiliaryEq" (formula "43"))
                                       (rule "replace_known_right" (formula "43") (term "1,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "42") (term "2,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "applyEqReverse" (formula "41") (term "0,0,0,0,0,0") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "replace_known_right" (formula "40") (term "1,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "40"))
                                       (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "40"))
                                       (rule "hideAuxiliaryEq" (formula "40"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "inEqSimp_commuteLeq" (formula "42"))
                                       (rule "commute_and_2" (formula "2") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0,0,0"))
                                       (rule "commute_and_2" (formula "2") (term "0,0,0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "50")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ineffectiveCast" (formula "60") (term "1,0") (ifseqformula "2"))
                                          (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                          (rule "close" (formula "60") (ifseqformula "2"))
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "60") (ifseqformula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "Exceptional Post (havocPacked)"
                      (builtin "One Step Simplification" (formula "62"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "andLeft" (formula "62"))
                     (rule "andLeft" (formula "63"))
                     (rule "andLeft" (formula "63"))
                     (rule "notLeft" (formula "63"))
                     (rule "close" (formula "65") (ifseqformula "64"))
                  )
                  (branch "Pre (havocPacked)"
                      (builtin "One Step Simplification" (formula "64"))
                     (rule "wellFormedStorePrimitive" (formula "64"))
                     (rule "wellFormedAnonEQ" (formula "64") (ifseqformula "31"))
                     (rule "wellFormedAnonEQ" (formula "64") (term "0") (ifseqformula "28"))
                     (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "3")) (ifInst ""  (formula "27")))
                     (rule "closeTrue" (formula "64"))
                  )
               )
            )
            (branch "Null Reference (s_3 = null)"
                (builtin "One Step Simplification" (formula "58"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (s_2 = null)"
             (builtin "One Step Simplification" (formula "58"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (__insert_trampoline)"
          (builtin "One Step Simplification" (formula "27"))
          (builtin "One Step Simplification" (formula "30"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "28"))
         (rule "close" (formula "31") (ifseqformula "30"))
      )
      (branch "Pre (__insert_trampoline)"
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
         (rule "wellFormedAnonEQ" (formula "28") (term "0,1") (ifseqformula "24"))
         (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "2"))
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "23")))
         (rule "pullOutSelect" (formula "28") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "29") (term "0") (ifseqformula "27"))
          (builtin "One Step Simplification" (formula "29"))
         (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "29"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "ifEqualsTRUE" (formula "26"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "orRight" (formula "26"))
         (rule "referencedObjectIsCreatedRight" (formula "26") (ifseqformula "28"))
         (rule "close" (formula "26") (ifseqformula "2"))
      )
      (branch "Null reference (s_1 = null)"
          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "26")))
         (rule "closeTrue" (formula "28"))
      )
   )
)
(branch "Exceptional Post (havocPacked)"
    (builtin "One Step Simplification" (formula "21"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "close" (formula "22") (ifseqformula "21"))
)
(branch "Pre (havocPacked)"
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "19"))
)
)
}
