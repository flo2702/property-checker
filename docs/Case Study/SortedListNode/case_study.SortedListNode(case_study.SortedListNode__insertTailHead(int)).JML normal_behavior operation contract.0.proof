\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:safe",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 100000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_EXPAND",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_OFF",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_INSTANTIATE",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_OFF",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "../../../property-checker-out/case_study";

\proofObligation "#Proof Obligation Settings
#Fri Jun 14 12:41:58 CEST 2024
contract=case_study.SortedListNode[case_study.SortedListNode\\:\\:insertTailHead(int)].JML normal_behavior operation contract.0
name=case_study.SortedListNode[case_study.SortedListNode\\:\\:insertTailHead(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "florian" ) (keyVersion "7ff2d9dc3ea43e071577b3f8d0e3a537f9213982"))

(autoModeTime "104305")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "13") (term "0,1,0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0,0,0,1") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "12")) (ifInst ""  (formula "11")))
(rule "andLeft" (formula "5"))
(rule "polySimp_homoEq" (formula "14") (term "1,1,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "14") (term "0,1,1,0,0,0,1"))
(rule "polySimp_homoEq" (formula "6"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,1,1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "0,0"))
(rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteGeq" (formula "8"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "polySimp_sepPosMonomial" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1"))
(rule "polySimp_rightDist" (formula "6") (term "1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
(rule "mul_literals" (formula "6") (term "0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1"))
(rule "polySimp_sepPosMonomial" (formula "14") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "14") (term "1,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0,0,0,0,1"))
(rule "elementOfUnion" (formula "14") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "9") (ifseqformula "13"))
(rule "true_left" (formula "9"))
(rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "10") (ifseqformula "12"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "replace_known_right" (formula "13") (term "0,0,1") (ifseqformula "14"))
 (builtin "One Step Simplification" (formula "13"))
(rule "polySimp_homoEq" (formula "13") (term "1,1,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,0,1,1,1"))
(rule "polySimp_addComm1" (formula "13") (term "0,1,1,1"))
(rule "inEqSimp_gtToGeq" (formula "12") (term "1"))
(rule "times_zero_1" (formula "12") (term "1,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1"))
(rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
(rule "ssubsortDirect" (formula "10") (term "0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
(rule "ssubsortDirect" (formula "13") (term "0"))
 (builtin "One Step Simplification" (formula "13"))
(rule "applyEq" (formula "12") (term "0,0") (ifseqformula "9"))
(rule "ssubsortDirect" (formula "12") (term "0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "6"))
(rule "polySimp_homoEq" (formula "13") (term "1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
(rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
(rule "polySimp_addAssoc" (formula "13") (term "0,1,0"))
(rule "add_literals" (formula "13") (term "0,0,1,0"))
(rule "applyEq" (formula "13") (term "0,1,0,0,1,1") (ifseqformula "6"))
(rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1"))
(rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1"))
(rule "mul_literals" (formula "13") (term "0,1,0,0,1,1"))
(rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1"))
(rule "add_literals" (formula "13") (term "0,0,0,1,1"))
(rule "polySimp_sepNegMonomial" (formula "13") (term "1,0"))
(rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
(rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
(rule "polySimp_sepPosMonomial" (formula "13") (term "1,1"))
(rule "polySimp_mulComm0" (formula "13") (term "1,1,1"))
(rule "polySimp_rightDist" (formula "13") (term "1,1,1"))
(rule "mul_literals" (formula "13") (term "0,1,1,1"))
(rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1"))
(rule "polySimp_elimOne" (formula "13") (term "1,1,1,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12"))
(rule "mul_literals" (formula "12") (term "1"))
(rule "cnf_rightDist" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "cnf_rightDist" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "commute_or" (formula "14"))
(rule "cnf_rightDist" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "commute_or" (formula "13"))
(rule "cnf_rightDist" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "commute_or" (formula "14"))
(rule "cnf_rightDist" (formula "13"))
 (builtin "One Step Simplification" (formula "13"))
(rule "commute_or" (formula "13"))
(rule "methodBodyExpand" (formula "20") (term "1") (newnames "heapBefore_insertTailHead,savedHeapBefore_insertTailHead,_newHeadBefore_insertTailHead"))
 (builtin "One Step Simplification" (formula "20"))
 (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_havocPacked,exc_0,heapAfter_havocPacked,anon_heap_havocPacked") (contract "case_study.SortedListNode[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (havocPacked)"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "andLeft" (formula "19"))
    (builtin "JML assume" (formula "23"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "impRight" (formula "23"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "methodCallUnfoldTarget" (formula "24") (term "1") (inst "#v0=s"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "s"))
   (rule "assignment_read_attribute_this" (formula "24") (term "1"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_tail_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
    (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore___insertHead_trampoline,exc_1,heapAfter___insertHead_trampoline,anon_heap___insertHead_trampoline") (contract "case_study.SortedListNode[case_study.SortedListNode::__insertHead_trampoline(int,boolean,boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (__insertHead_trampoline)"
       (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
       (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "26"))
      (rule "polySimp_homoEq" (formula "28"))
      (rule "polySimp_homoEq" (formula "25") (term "1,1"))
      (rule "polySimp_addComm0" (formula "28") (term "0,0"))
      (rule "polySimp_addComm0" (formula "25") (term "0,0,1,1"))
      (rule "polySimp_addComm1" (formula "28") (term "0"))
      (rule "polySimp_addComm1" (formula "25") (term "0,1,1"))
      (rule "polySimp_sepPosMonomial" (formula "28"))
      (rule "polySimp_mulComm0" (formula "28") (term "1"))
      (rule "polySimp_rightDist" (formula "28") (term "1"))
      (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
      (rule "mul_literals" (formula "28") (term "0,1"))
      (rule "polySimp_elimOne" (formula "28") (term "1,1"))
      (rule "polySimp_sepPosMonomial" (formula "25") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1"))
      (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=case_study_SortedListNode_head_0"))
      (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "27"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "25") (term "1,1,0,1") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "applyEq" (formula "25") (term "1,1,0,1") (ifseqformula "27"))
      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Object_packed_1"))
      (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "24"))
      (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
      (rule "hideAuxiliaryEq" (formula "24"))
      (rule "pullOutSelect" (formula "25") (term "1,0,1,0,1") (inst "selectSK=case_study_SortedListNode_tail_1"))
      (rule "applyEq" (formula "26") (term "0,0,0,0,1") (ifseqformula "25"))
      (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "25"))
      (rule "applyEq" (formula "26") (term "1,0,1,1") (ifseqformula "25"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "applyEqReverse" (formula "26") (term "1,0,1,0,1") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "26") (term "0,0,0,0,1") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "26") (term "1,0,1,1") (ifseqformula "25"))
      (rule "hideAuxiliaryEq" (formula "25"))
      (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_size_0"))
      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "25"))
      (rule "applyEq" (formula "26") (term "1,1,1,1") (ifseqformula "25"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "29") (term "1,1") (ifseqformula "25"))
      (rule "applyEqReverse" (formula "26") (term "1,1,1,1") (ifseqformula "25"))
      (rule "hideAuxiliaryEq" (formula "25"))
      (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=case_study_SortedListNode_size_1"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "32")))
      (rule "polySimp_homoEq" (formula "29"))
      (rule "polySimp_addComm1" (formula "29") (term "0"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "ifthenelse_negated" (formula "28") (term "0"))
      (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "7"))
      (rule "polySimp_sepPosMonomial" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1"))
      (rule "polySimp_rightDist" (formula "29") (term "1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
      (rule "mul_literals" (formula "29") (term "0,1"))
      (rule "polySimp_elimOne" (formula "29") (term "1,1"))
      (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "29"))
      (rule "polySimp_homoEq" (formula "25") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
      (rule "add_literals" (formula "25") (term "0,0,1,0"))
      (rule "add_zero_left" (formula "25") (term "0,1,0"))
      (rule "applyEq" (formula "25") (term "1,1,1,1") (ifseqformula "29"))
      (rule "polySimp_addAssoc" (formula "25") (term "1,1,1"))
      (rule "add_literals" (formula "25") (term "0,1,1,1"))
      (rule "add_zero_left" (formula "25") (term "1,1,1"))
      (rule "polySimp_invertEq" (formula "25") (term "1,0"))
      (rule "mul_literals" (formula "25") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
      (rule "pullOutSelect" (formula "25") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_1"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "inEqSimp_commuteGeq" (formula "26") (term "1,0,1"))
      (rule "pullOutSelect" (formula "26") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_2"))
      (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "pullOutSelect" (formula "25") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_2"))
      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "elementOfSingleton" (formula "25") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "pullOutSelect" (formula "26") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
      (rule "applyEq" (formula "28") (term "0,0,1,1,0,0") (ifseqformula "26"))
      (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_3"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "limit_java_lang_Object__inv_free_" (formula "31"))
      (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "32"))
       (builtin "One Step Simplification" (formula "31"))
      (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "36") (ifseqformula "38"))
      (rule "true_left" (formula "36"))
      (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "32") (ifseqformula "37"))
      (rule "replaceKnownSelect_taclet00_6" (formula "32") (term "0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "32") (term "0,0,1"))
      (rule "replaceKnownSelect_taclet00_6" (formula "32") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "32") (term "0,1,1,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "32") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "32") (term "0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,1,0,0"))
      (rule "replaceKnownSelect_taclet00_6" (formula "32") (term "0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "0,0,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_7" (formula "32") (term "0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "0,0,0,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,0,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,0,0,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,0,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,1,1,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,0,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_14" (formula "32") (term "0,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,1,0,1,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,1,0,1,0,1,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "32") (term "1,0,0,0,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,0,0,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,0,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_14" (formula "32") (term "0,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,1,1,0,1,1,1"))
      (rule "replaceKnownSelect_taclet00_13" (formula "32") (term "1,1,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,1,0,1,1,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,1,0,1,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "32") (term "1,0,0,0,0,1,1,1"))
      (rule "andLeft" (formula "32"))
      (rule "andLeft" (formula "32"))
      (rule "andLeft" (formula "32"))
      (rule "polySimp_homoEq" (formula "35") (term "1,1,1"))
      (rule "polySimp_addComm0" (formula "35") (term "0,0,1,1,1"))
      (rule "polySimp_addComm1" (formula "35") (term "0,1,1,1"))
      (rule "inEqSimp_gtToGeq" (formula "34") (term "1"))
      (rule "mul_literals" (formula "34") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "34") (term "0,0,1"))
      (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "38"))
      (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
      (rule "add_literals" (formula "34") (term "0,0,1"))
      (rule "add_zero_left" (formula "34") (term "0,1"))
      (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "24"))
      (rule "ssubsortDirect" (formula "32") (term "0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "24"))
      (rule "ssubsortDirect" (formula "35") (term "0"))
       (builtin "One Step Simplification" (formula "35"))
      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "24"))
      (rule "ssubsortDirect" (formula "34") (term "0"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "polySimp_sepPosMonomial" (formula "35") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,1"))
      (rule "mul_literals" (formula "35") (term "0,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,1"))
      (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=java_lang_Object_packed_2"))
      (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "replaceKnownSelect_taclet00_16" (formula "32") (term "0,0,1,1,0,0"))
      (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
      (rule "pullOutSelect" (formula "36") (term "0,0,1,0") (inst "selectSK=case_study_SortedListNode_tail_2"))
      (rule "applyEq" (formula "37") (term "0,0,0,0,1") (ifseqformula "36"))
      (rule "applyEq" (formula "37") (term "1,0,1,0,1") (ifseqformula "36"))
      (rule "applyEq" (formula "37") (term "1,0,1,1") (ifseqformula "36"))
      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "replaceKnownSelect_taclet00_16" (formula "36") (term "0,0,1,1,0,0"))
      (rule "pullOutSelect" (formula "32") (term "2,0") (inst "selectSK=java_lang_Object_packed_3"))
      (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "elementOfSingleton" (formula "32") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "pullOutSelect" (formula "38") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_3"))
      (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "eqSymm" (formula "38") (term "0,0,0"))
      (rule "pullOutSelect" (formula "39") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_4"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "eqSymm" (formula "39") (term "0,0,0"))
      (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=case_study_SortedListNode_tail_3"))
      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "elementOfSingleton" (formula "37") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "pullOutSelect" (formula "39") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
      (rule "applyEq" (formula "41") (term "0,0,1,1,0,0") (ifseqformula "39"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "pullOutSelect" (formula "40") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_4"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "elementOfSingleton" (formula "40") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_5"))
      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "preincrement_attribute" (formula "51") (term "1") (inst "#v=s_1"))
      (rule "variableDeclarationAssign" (formula "51") (term "1"))
      (rule "variableDeclaration" (formula "51") (term "1") (newnames "s_1"))
      (rule "assignment" (formula "51") (term "1"))
       (builtin "One Step Simplification" (formula "51"))
      (rule "eval_order_access4" (formula "51") (term "1") (inst "#v1=i") (inst "#v0=s_2"))
      (rule "variableDeclarationAssign" (formula "51") (term "1"))
      (rule "variableDeclaration" (formula "51") (term "1") (newnames "s_2"))
      (rule "assignment" (formula "51") (term "1"))
       (builtin "One Step Simplification" (formula "51"))
      (rule "variableDeclarationAssign" (formula "51") (term "1"))
      (rule "variableDeclaration" (formula "51") (term "1") (newnames "i"))
      (rule "commute_and_2" (formula "30") (term "1"))
      (rule "cnf_rightDist" (formula "27") (term "0,0"))
      (rule "cnf_rightDist" (formula "29") (term "0,0"))
      (rule "cnf_rightDist" (formula "44") (term "0"))
      (rule "cnf_rightDist" (formula "33") (term "0,0"))
      (rule "commute_or" (formula "44") (term "1,0"))
      (rule "commute_or" (formula "44") (term "0,0"))
      (rule "cnf_rightDist" (formula "38") (term "0,0"))
      (rule "cnf_rightDist" (formula "32") (term "0,0"))
      (rule "commute_or" (formula "27") (term "0,0,0"))
      (rule "commute_or" (formula "29") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "41") (term "0,0"))
      (rule "commute_or" (formula "33") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "30"))
      (rule "andLeft" (formula "30"))
      (rule "cnf_rightDist" (formula "31"))
      (rule "andLeft" (formula "31"))
      (rule "commute_or" (formula "31"))
      (rule "cnf_rightDist" (formula "45") (term "0,0"))
      (rule "commute_or" (formula "40") (term "0,0,0"))
      (rule "commute_or" (formula "34") (term "0,0,0"))
      (rule "commute_or" (formula "34") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "46"))
      (rule "andLeft" (formula "46"))
      (rule "commute_or" (formula "43") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "47"))
      (rule "andLeft" (formula "47"))
      (rule "commute_or" (formula "47"))
      (rule "commute_or" (formula "45") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "30"))
      (rule "andLeft" (formula "30"))
      (rule "commute_or" (formula "30"))
      (rule "cnf_rightDist" (formula "31"))
      (rule "andLeft" (formula "31"))
      (rule "commute_or" (formula "31"))
      (rule "cnf_rightDist" (formula "30"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "commute_or" (formula "30"))
      (rule "cnf_rightDist" (formula "48"))
      (rule "andLeft" (formula "48"))
      (rule "commute_or" (formula "48"))
      (rule "cnf_rightDist" (formula "49"))
      (rule "andLeft" (formula "49"))
      (rule "commute_or_2" (formula "50"))
      (rule "commute_or" (formula "49"))
      (rule "cnf_rightDist" (formula "48"))
      (rule "andLeft" (formula "48"))
      (rule "commute_or_2" (formula "49"))
      (rule "shift_paren_or" (formula "48"))
       (builtin "One Step Simplification" (formula "48"))
      (rule "true_left" (formula "48"))
      (rule "commute_or" (formula "48") (term "0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "58"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "55"))
      (rule "applyEqReverse" (formula "31") (term "0,1") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "32") (term "1,1") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "56") (term "1,1") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "55"))
      (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "55"))
      (rule "hideAuxiliaryEq" (formula "55"))
      (rule "polySimp_homoEq" (formula "32") (term "1"))
      (rule "polySimp_homoEq" (formula "33") (term "1"))
      (rule "polySimp_addComm1" (formula "32") (term "0,1"))
      (rule "polySimp_addComm1" (formula "33") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "55") (term "1"))
      (rule "add_literals" (formula "55") (term "0,1"))
      (rule "add_zero_left" (formula "55") (term "1"))
      (rule "polySimp_sepPosMonomial" (formula "31") (term "1"))
      (rule "mul_literals" (formula "31") (term "1,1"))
      (rule "polySimp_sepPosMonomial" (formula "35") (term "0"))
      (rule "mul_literals" (formula "35") (term "1,0"))
      (rule "polySimp_sepPosMonomial" (formula "33") (term "0"))
      (rule "mul_literals" (formula "33") (term "1,0"))
      (rule "polySimp_sepPosMonomial" (formula "32") (term "1"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
      (rule "polySimp_rightDist" (formula "32") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
      (rule "mul_literals" (formula "32") (term "0,1,1"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
      (rule "polySimp_sepPosMonomial" (formula "33") (term "1"))
      (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
      (rule "polySimp_rightDist" (formula "33") (term "1,1"))
      (rule "mul_literals" (formula "33") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "41"))
      (rule "mul_literals" (formula "41") (term "1"))
      (rule "commute_or" (formula "35"))
      (rule "compound_int_cast_expression" (formula "58") (term "1") (inst "#v=i_1"))
      (rule "variableDeclarationAssign" (formula "58") (term "1"))
      (rule "variableDeclaration" (formula "58") (term "1") (newnames "i_1"))
      (rule "remove_parentheses_right" (formula "58") (term "1"))
      (rule "compound_addition_1" (formula "58") (term "1") (inst "#v=i_2"))
      (rule "variableDeclarationAssign" (formula "58") (term "1"))
      (rule "variableDeclaration" (formula "58") (term "1") (newnames "i_2"))
      (rule "assignment_read_attribute" (formula "58") (term "1"))
      (branch "Normal Execution (s_1 != null)"
          (builtin "One Step Simplification" (formula "59"))
          (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "57")))
         (rule "false_right" (formula "58"))
         (rule "pullOutSelect" (formula "58") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_size_6"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
         (rule "eqSymm" (formula "1") (term "0,0,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_7"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
         (rule "elementOfSingleton" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
         (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "4"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "commute_and" (formula "29") (term "0,0"))
         (rule "commute_and" (formula "31") (term "0,0"))
         (rule "assignmentAdditionInt" (formula "59") (term "1"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "translateJavaAddInt" (formula "59") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "59") (term "0,1,0"))
         (rule "commute_and" (formula "39") (term "0,0"))
         (rule "commute_and" (formula "43") (term "0,0"))
         (rule "commute_and" (formula "46") (term "0,0"))
         (rule "commute_and" (formula "48") (term "0,0"))
         (rule "widening_identity_cast_5" (formula "59") (term "1"))
         (rule "assignment" (formula "59") (term "1"))
          (builtin "One Step Simplification" (formula "59"))
         (rule "assignment_write_attribute" (formula "59") (term "1"))
         (branch "Normal Execution (s_2 != null)"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "58")))
            (rule "false_right" (formula "59"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "1,0,1") (ifseqformula "3"))
             (builtin "JML assume" (formula "60"))
             (builtin "One Step Simplification" (formula "60"))
            (rule "impRight" (formula "60"))
            (rule "dismissNonSelectedField" (formula "1") (term "1"))
            (rule "pullOutSelect" (formula "1") (term "1") (inst "selectSK=case_study_SortedListNode_tail_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
            (rule "replaceKnownSelect_taclet0_2" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "1") (term "2,0"))
            (rule "replaceKnownSelect_taclet000_31" (formula "1") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "1") (term "0,0,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "6"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "limit_java_lang_Object__inv_free_" (formula "2"))
            (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "2"))
             (builtin "JML assume" (formula "63"))
             (builtin "One Step Simplification" (formula "63"))
            (rule "impRight" (formula "63"))
            (rule "dismissNonSelectedField" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "2"))
            (rule "pullOutSelect" (formula "1") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=java_lang_Object_packed_5"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "30"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "elementOfSingleton" (formula "2") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "eqSymm" (formula "2") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "3") (term "0,0"))
            (rule "commute_or" (formula "3") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "2") (term "0,0"))
            (rule "commute_or" (formula "2") (term "1,0,0"))
            (rule "commute_or" (formula "2") (term "0,0,0"))
             (builtin "JML assume" (formula "67"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "impRight" (formula "67"))
            (rule "dismissNonSelectedField" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_34" (formula "1") (term "0"))
            (rule "commute_and" (formula "3") (term "0,0"))
             (builtin "JML assume" (formula "67"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "impRight" (formula "67"))
            (rule "dismissNonSelectedField" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_34" (formula "1") (term "0"))
             (builtin "JML assume" (formula "67"))
             (builtin "One Step Simplification" (formula "67"))
            (rule "impRight" (formula "67"))
            (rule "dismissNonSelectedField" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_34" (formula "1") (term "0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0,0,0,0,0") (ifseqformula "32"))
             (builtin "JML assume" (formula "68"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "impRight" (formula "68"))
            (rule "dismissNonSelectedField" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_34" (formula "1") (term "0"))
             (builtin "JML assume" (formula "68"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "impRight" (formula "68"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0"))
            (rule "replaceKnownSelect_taclet0000_34" (formula "1") (term "0"))
             (builtin "JML assume" (formula "68"))
             (builtin "One Step Simplification" (formula "68"))
            (rule "impRight" (formula "68"))
            (rule "polySimp_homoEq" (formula "1") (term "1,1"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "0,1,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0,1"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,0,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0,1,0,0,1,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1,0,1"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,1,0,1,0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,0,0,1"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0,0,0,0,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,1,1,0,1,1"))
            (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "1,1,1,0,1,1"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,0,1"))
            (rule "polySimp_sepPosMonomial" (formula "1") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,1"))
            (rule "mul_literals" (formula "1") (term "0,1,1,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1"))
            (rule "pullOutSelect" (formula "1") (term "0,1,1,0") (inst "selectSK=case_study_SortedListNode_size_8"))
            (rule "applyEq" (formula "2") (term "1,1,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "pullOutSelect" (formula "2") (term "1,1,0,1") (inst "selectSK=case_study_SortedListNode_head_5"))
            (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "replaceKnownSelect_taclet0000_35" (formula "2") (term "0,0,1,1,0,0"))
            (rule "eqSymm" (formula "2") (term "0,0,0"))
            (rule "pullOutSelect" (formula "3") (term "0,0,0,0,1") (inst "selectSK=case_study_SortedListNode_tail_5"))
            (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "4") (term "1,0,1,0,1") (ifseqformula "3"))
            (rule "applyEq" (formula "4") (term "1,0,1,1") (ifseqformula "3"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "replaceKnownSelect_taclet0000_35" (formula "3") (term "0,0,1,1,0,0"))
            (rule "eqSymm" (formula "3") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_9"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replaceKnownSelect_taclet0000_35" (formula "1") (term "0,0,1,1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_6"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "elementOfSingleton" (formula "3") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "pullOutSelect" (formula "6") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_7"))
            (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "eqSymm" (formula "6") (term "0,0,0"))
            (rule "pullOutSelect" (formula "7") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_10"))
            (rule "simplifySelectOfStore" (formula "7"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "castDel" (formula "7") (term "1,0"))
            (rule "polySimp_homoEq" (formula "8") (term "1,1"))
            (rule "polySimp_addComm1" (formula "8") (term "0,1,1"))
            (rule "polySimp_sepPosMonomial" (formula "8") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,1"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,1"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,1"))
            (rule "mul_literals" (formula "8") (term "0,1,1,1"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,1"))
            (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=case_study_SortedListNode_tail_6"))
            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "39"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "elementOfSingleton" (formula "5") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_11"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "40"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "8") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
            (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "pullOutSelect" (formula "9") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_8"))
            (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "42"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "9"))
            (rule "pullOutSelect" (formula "11") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_12"))
            (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "46"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "replaceKnownSelect_taclet0000_46" (formula "11") (term "0,0,1,1,0,0"))
            (rule "eqSymm" (formula "11") (term "0,0,0"))
            (rule "pullOutSelect" (formula "11") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_13"))
            (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "44"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "elementOfSingleton" (formula "11") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "cnf_rightDist" (formula "14") (term "0"))
            (rule "cnf_rightDist" (formula "5") (term "0,0"))
            (rule "cnf_rightDist" (formula "7") (term "0,0"))
            (rule "commute_or" (formula "14") (term "1,0"))
            (rule "cnf_rightDist" (formula "2") (term "0,0"))
            (rule "commute_or" (formula "5") (term "0,0,0"))
            (rule "commute_or" (formula "7") (term "0,0,0"))
            (rule "commute_or" (formula "2") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "cnf_rightDist" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "commute_or" (formula "15"))
            (rule "cnf_rightDist" (formula "10") (term "0,0"))
            (rule "commute_or" (formula "10") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or" (formula "14"))
            (rule "cnf_rightDist" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "commute_or_2" (formula "16"))
            (rule "commute_or" (formula "15"))
            (rule "cnf_rightDist" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or_2" (formula "15"))
            (rule "shift_paren_or" (formula "14"))
            (rule "commute_or" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "cnf_rightDist" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "12") (term "0,0,0"))
             (builtin "JML assert" (formula "86"))
            (branch "Validity"
                (builtin "One Step Simplification" (formula "86"))
               (rule "inEqSimp_gtRight" (formula "86"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_SortedListNode_size_14"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "ifthenelse_split" (formula "24") (term "0"))
               (branch "self.tail = self TRUE"
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "5") (term "1,2,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "3") (term "1,1,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "3") (term "1,1,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "25"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "25"))
                  (rule "hideAuxiliaryEq" (formula "25"))
                  (rule "eqSymm" (formula "21") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "22") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "4") (term "0,0"))
                  (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "8") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "22") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "21") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "3") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "6") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                  (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "applyEqReverse" (formula "25") (term "1,3,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "26") (term "1,3,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "27"))
                  (rule "hideAuxiliaryEq" (formula "27"))
                  (rule "applyEq" (formula "75") (term "0,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "11") (term "0,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "70") (term "1,0,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "42") (term "1,0,0") (ifseqformula "24"))
                  (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "42"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "24"))
                  (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "83"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "44"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "true_left" (formula "45"))
                  (rule "applyEq" (formula "63") (term "1,0,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "43") (term "1,1,0,1") (ifseqformula "24"))
                  (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "applyEq" (formula "66") (term "1,1,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "61") (term "1") (ifseqformula "24"))
                  (rule "applyEq" (formula "55") (term "1,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "55") (term "1,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "51") (term "1,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "70") (term "0,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "54") (term "1,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "62") (term "1,1,0,0,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "66") (term "1,0,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "62") (term "1,0,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "62") (term "1,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "65") (term "1,1,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "53") (term "1,1,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "51") (term "1,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "52") (term "1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "53") (term "1,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "62") (term "1,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "56") (term "1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "47") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "62") (term "1,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "72") (term "1,0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "54") (term "1,0,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "24"))
                  (rule "polySimp_homoEq" (formula "33"))
                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                  (rule "add_literals" (formula "33") (term "1,1,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0"))
                  (rule "add_literals" (formula "33") (term "0"))
                  (rule "equal_literals" (formula "33"))
                  (rule "closeFalse" (formula "33"))
               )
               (branch "self.tail = self FALSE"
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "5") (term "1,2,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,1,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "3") (term "1,1,0,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "86")) (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,1,0,0") (ifseqformula "24"))
                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "86")) (ifInst ""  (formula "24")))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "4") (term "1,0,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,0,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,1,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "9") (term "1,2,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "11") (term "1,0,0,0,0,0,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0,0,1,0,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0,0,1,0,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,0,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "11") (term "1,1,1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "10") (term "1,2,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,0,0,0,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "11") (term "1,1,0,0,0") (ifseqformula "8"))
                  (rule "hideAuxiliaryEq" (formula "23"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "eqSymm" (formula "18") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "18") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "3") (term "0,0"))
                  (rule "eqSymm" (formula "10") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "10") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "8") (term "1,1,0,0"))
                  (rule "eqSymm" (formula "11") (term "0,0"))
                  (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "18") (term "0,0,0,0,0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "28")))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "27")))
                  (rule "hideAuxiliaryEq" (formula "4"))
                  (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "79"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "77"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "applyEqReverse" (formula "18") (term "1,3,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "17") (term "1,3,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "19"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "77"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_left" (formula "3") (term "0,1,0,0") (ifseqformula "23"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "76")))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "9") (term "0,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "13") (term "0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                  (rule "inEqSimp_commuteGeq" (formula "10") (term "0"))
                  (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "71"))
                  (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "70"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "41"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "69"))
                  (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "68"))
                  (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "68"))
                  (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "69"))
                  (rule "applyEq" (formula "44") (term "0") (ifseqformula "4"))
                  (rule "applyEqReverse" (formula "45") (term "2,0") (ifseqformula "44"))
                  (rule "hideAuxiliaryEq" (formula "44"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0,0") (ifseqformula "41"))
                  (rule "applyEqReverse" (formula "42") (term "0,0,0,0,0,0") (ifseqformula "41"))
                  (rule "applyEqReverse" (formula "52") (term "0,0,0,0,0,0") (ifseqformula "41"))
                  (rule "applyEqReverse" (formula "56") (term "0,0,0,0,0,0") (ifseqformula "41"))
                  (rule "hideAuxiliaryEq" (formula "41"))
                  (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "67"))
                  (rule "inEqSimp_contradEq3" (formula "28") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,1"))
                  (rule "add_literals" (formula "28") (term "0,0,1"))
                  (rule "qeq_literals" (formula "28") (term "0,1"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "31"))
                  (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "inEqSimp_contradEq3" (formula "41") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,1"))
                  (rule "add_literals" (formula "41") (term "0,0,1"))
                  (rule "qeq_literals" (formula "41") (term "0,1"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "notLeft" (formula "41"))
                  (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "38") (term "0,0,1,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "replace_known_right" (formula "40") (term "0,0,1,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "replace_known_right" (formula "51") (term "0,0,1,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "replace_known_right" (formula "50") (term "0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "37") (term "0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "replace_known_right" (formula "47") (term "0,0,1,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "replace_known_right" (formula "46") (term "0,0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "40"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "57"))
                  (rule "replace_known_right" (formula "56") (term "1,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "56"))
                  (rule "replace_known_right" (formula "58") (term "1,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "replace_known_right" (formula "55") (term "1,0") (ifseqformula "63"))
                   (builtin "One Step Simplification" (formula "55"))
                  (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "41"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "ifthenelse_negated" (formula "46") (term "0"))
                  (rule "ifthenelse_negated" (formula "35") (term "0"))
                  (rule "ifthenelse_negated" (formula "2") (term "0"))
                  (rule "ifthenelse_negated" (formula "4") (term "0"))
                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "39"))
                  (rule "polySimp_homoEq" (formula "8"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0"))
                  (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "38"))
                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                  (rule "hideAuxiliaryEq" (formula "5"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "38"))
                  (rule "inEqSimp_homoInEq1" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0"))
                  (rule "add_literals" (formula "24") (term "0,0"))
                  (rule "add_zero_left" (formula "24") (term "0"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "35"))
                  (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "35"))
                  (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "35"))
                  (rule "hideAuxiliaryEq" (formula "35"))
                  (rule "inEqSimp_commuteGeq" (formula "52") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                  (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "37"))
                  (rule "polySimp_addAssoc" (formula "10") (term "3,0"))
                  (rule "add_literals" (formula "10") (term "0,3,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "37"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "37"))
                  (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0,1,0"))
                  (rule "applyEq" (formula "9") (term "1,3,0") (ifseqformula "37"))
                  (rule "polySimp_addAssoc" (formula "9") (term "3,0"))
                  (rule "add_literals" (formula "9") (term "0,3,0"))
                  (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "37"))
                  (rule "polySimp_addAssoc" (formula "27") (term "1"))
                  (rule "add_literals" (formula "27") (term "0,1"))
                  (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "37"))
                  (rule "polySimp_addAssoc" (formula "18") (term "1"))
                  (rule "add_literals" (formula "18") (term "0,1"))
                  (rule "add_zero_left" (formula "18") (term "1"))
                  (rule "applyEqReverse" (formula "10") (term "1,3,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "54") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "9") (term "1,3,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "54") (term "1,1,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "1") (term "0,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "53") (term "1,1,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "polySimp_homoEq" (formula "36"))
                  (rule "polySimp_homoEq" (formula "53") (term "1"))
                  (rule "polySimp_homoEq" (formula "52") (term "1"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "7"))
                  (rule "hideAuxiliaryEq" (formula "7"))
                  (rule "polySimp_elimOne" (formula "5") (term "1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "polySimp_homoEq" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "5") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,1"))
                  (rule "add_literals" (formula "5") (term "1,1,0,1"))
                  (rule "times_zero_1" (formula "5") (term "1,0,1"))
                  (rule "add_literals" (formula "5") (term "0,1"))
                  (rule "equal_literals" (formula "5") (term "1"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "notLeft" (formula "5"))
                  (rule "replace_known_right" (formula "36") (term "0,0,0") (ifseqformula "55"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "ifthenelse_negated" (formula "36") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1"))
                  (rule "polySimp_rightDist" (formula "34") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                  (rule "mul_literals" (formula "34") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                  (rule "applyEq" (formula "51") (term "1,0,1") (ifseqformula "34"))
                  (rule "polySimp_addAssoc" (formula "51") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "51") (term "0,0,1"))
                  (rule "add_literals" (formula "51") (term "0,0,0,1"))
                  (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "34"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "34"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "8") (term "1,3,0") (ifseqformula "34"))
                  (rule "polySimp_addAssoc" (formula "8") (term "3,0"))
                  (rule "add_literals" (formula "8") (term "0,3,0"))
                  (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "34"))
                  (rule "polySimp_homoEq" (formula "49") (term "1"))
                  (rule "polySimp_mulComm0" (formula "49") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "49") (term "1,0,1"))
                  (rule "mul_literals" (formula "49") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "49") (term "0,1"))
                  (rule "add_literals" (formula "49") (term "0,0,1"))
                  (rule "applyEq" (formula "7") (term "1,3,0") (ifseqformula "34"))
                  (rule "polySimp_addAssoc" (formula "7") (term "3,0"))
                  (rule "add_literals" (formula "7") (term "0,3,0"))
                  (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "34"))
                  (rule "polySimp_homoEq" (formula "51") (term "0"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                  (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0"))
                  (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "34"))
                  (rule "polySimp_homoEq" (formula "47") (term "1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,1"))
                  (rule "add_literals" (formula "47") (term "0,0,1"))
                  (rule "applyEq" (formula "50") (term "1,0,1") (ifseqformula "34"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1"))
                  (rule "applyEq" (formula "33") (term "1") (ifseqformula "34"))
                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "34"))
                  (rule "polySimp_addAssoc" (formula "24") (term "1"))
                  (rule "add_literals" (formula "24") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "51") (term "1"))
                  (rule "polySimp_mulComm0" (formula "51") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,1"))
                  (rule "mul_literals" (formula "51") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "51") (term "1,1,1"))
                  (rule "polySimp_sepNegMonomial" (formula "49") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "49") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "49") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "51") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "47") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "47") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "50") (term "1"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1"))
                  (rule "mul_literals" (formula "50") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "49") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "49") (term "1,0,0,1"))
                  (rule "add_literals" (formula "49") (term "0,0,1"))
                  (rule "qeq_literals" (formula "49") (term "0,1"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "49"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "inEqSimp_contradEq3" (formula "50") (term "0") (ifseqformula "1"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0"))
                  (rule "qeq_literals" (formula "50") (term "0,0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "50"))
                   (builtin "One Step Simplification" (formula "49"))
                  (rule "true_left" (formula "49"))
                  (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "49"))
                  (rule "polySimp_homoEq" (formula "47") (term "1"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,1"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,1"))
                  (rule "add_literals" (formula "47") (term "0,0,1"))
                  (rule "add_zero_left" (formula "47") (term "0,1"))
                  (rule "applyEq" (formula "8") (term "1,3,0") (ifseqformula "49"))
                  (rule "polySimp_addAssoc" (formula "8") (term "3,0"))
                  (rule "add_literals" (formula "8") (term "0,3,0"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "49"))
                  (rule "inEqSimp_homoInEq0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "7") (term "1,3,0") (ifseqformula "49"))
                  (rule "polySimp_addAssoc" (formula "7") (term "3,0"))
                  (rule "add_literals" (formula "7") (term "0,3,0"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "49"))
                  (rule "inEqSimp_homoInEq1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "49"))
                  (rule "polySimp_addAssoc" (formula "33") (term "1"))
                  (rule "add_literals" (formula "33") (term "0,1"))
                  (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "49"))
                  (rule "polySimp_addAssoc" (formula "34") (term "1"))
                  (rule "add_literals" (formula "34") (term "0,1"))
                  (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "49"))
                  (rule "polySimp_addAssoc" (formula "24") (term "1"))
                  (rule "add_literals" (formula "24") (term "0,1"))
                  (rule "add_zero_left" (formula "24") (term "1"))
                  (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "1") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "8") (term "1,3,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "46") (term "1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "7") (term "1,3,0") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "33") (term "1,1") (ifseqformula "24"))
                  (rule "applyEqReverse" (formula "47") (term "0,0,1") (ifseqformula "24"))
                  (rule "hideAuxiliaryEq" (formula "24"))
                  (rule "polySimp_homoEq" (formula "33"))
                  (rule "polySimp_homoEq" (formula "48"))
                  (rule "polySimp_addComm1" (formula "33") (term "0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0"))
                  (rule "polySimp_invertEq" (formula "46") (term "1"))
                  (rule "mul_literals" (formula "46") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,1"))
                  (rule "polySimp_sepPosMonomial" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1"))
                  (rule "mul_literals" (formula "33") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "33"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "33"))
                  (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "33"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "add_literals" (formula "21") (term "0,0"))
                  (rule "add_zero_left" (formula "21") (term "0"))
                  (rule "applyEq" (formula "7") (term "1,3,0") (ifseqformula "33"))
                  (rule "polySimp_addAssoc" (formula "7") (term "3,0"))
                  (rule "add_literals" (formula "7") (term "0,3,0"))
                  (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "33"))
                  (rule "polySimp_addAssoc" (formula "48") (term "0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                  (rule "add_literals" (formula "48") (term "0,0,0"))
                  (rule "applyEq" (formula "8") (term "1,3,0") (ifseqformula "33"))
                  (rule "polySimp_addAssoc" (formula "8") (term "3,0"))
                  (rule "add_literals" (formula "8") (term "0,3,0"))
                  (rule "applyEq" (formula "45") (term "1") (ifseqformula "33"))
                  (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "33"))
                  (rule "polySimp_addAssoc" (formula "32") (term "1"))
                  (rule "add_literals" (formula "32") (term "0,1"))
                  (rule "add_zero_left" (formula "32") (term "1"))
                  (rule "polySimp_sepPosMonomial" (formula "46") (term "1"))
                  (rule "mul_literals" (formula "46") (term "1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                  (rule "mul_literals" (formula "48") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                  (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "48"))
                  (rule "polySimp_mulComm0" (formula "21") (term "0"))
                  (rule "polySimp_rightDist" (formula "21") (term "0"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "48"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "48"))
                  (rule "polySimp_homoEq" (formula "46") (term "1"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,1"))
                  (rule "add_literals" (formula "46") (term "0,0,1"))
                  (rule "applyEq" (formula "7") (term "1,3,0") (ifseqformula "48"))
                  (rule "polySimp_addAssoc" (formula "7") (term "3,0"))
                  (rule "add_literals" (formula "7") (term "0,3,0"))
                  (rule "applyEq" (formula "8") (term "1,3,0") (ifseqformula "48"))
                  (rule "polySimp_addAssoc" (formula "8") (term "3,0"))
                  (rule "add_literals" (formula "8") (term "0,3,0"))
                  (rule "applyEq" (formula "32") (term "1") (ifseqformula "48"))
                  (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "48"))
                  (rule "polySimp_addAssoc" (formula "45") (term "1"))
                  (rule "add_literals" (formula "45") (term "0,1"))
                  (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "48"))
                  (rule "polySimp_addAssoc" (formula "33") (term "1"))
                  (rule "add_literals" (formula "33") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "46") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "46") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradEq3" (formula "46") (term "1") (ifseqformula "1"))
                  (rule "mul_literals" (formula "46") (term "1,0,0,1"))
                  (rule "add_literals" (formula "46") (term "0,0,1"))
                  (rule "qeq_literals" (formula "46") (term "0,1"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "notLeft" (formula "46"))
                  (rule "replace_known_right" (formula "43") (term "0,0,1,0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "replace_known_right" (formula "45") (term "0,0,1,0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "replace_known_right" (formula "42") (term "0,0,0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "replace_known_right" (formula "44") (term "0,0,0,0") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "44"))
                  (rule "ifthenelse_negated" (formula "42") (term "0"))
                  (rule "ifthenelse_negated" (formula "41") (term "0"))
                  (rule "ifthenelse_negated" (formula "44") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "closeFalse" (formula "21"))
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "86"))
               (rule "impRight" (formula "86"))
               (rule "inEqSimp_gtToGeq" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_SortedListNode_size_14"))
               (rule "simplifySelectOfStore" (formula "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_invertInEq0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "70") (term "1,0") (ifseqformula "48"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "72") (term "1,0") (ifseqformula "51"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "71") (term "2,0") (ifseqformula "29"))
               (rule "commute_and" (formula "6") (term "0,0"))
               (rule "commute_and" (formula "8") (term "0,0"))
               (rule "commute_and" (formula "3") (term "0,0"))
               (rule "commute_and" (formula "11") (term "0,0"))
                (builtin "Use Operation Contract" (formula "90") (newnames "heapBefore_havocPacked_0,exc_2,heapAfter_havocPacked_0,anon_heap_havocPacked_0") (contract "case_study.SortedListNode[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
               (branch "Post (havocPacked)"
                   (builtin "One Step Simplification" (formula "89"))
                   (builtin "One Step Simplification" (formula "92"))
                  (rule "andLeft" (formula "89"))
                  (rule "commute_and" (formula "13") (term "0,0"))
                   (builtin "JML assume" (formula "93"))
                   (builtin "One Step Simplification" (formula "93"))
                  (rule "impRight" (formula "93"))
                  (rule "emptyStatement" (formula "94") (term "1"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "methodCallEmpty" (formula "94") (term "1"))
                  (rule "tryEmpty" (formula "94") (term "1"))
                  (rule "emptyModality" (formula "94") (term "1"))
                   (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "93")))
                  (rule "eqSymm" (formula "94") (term "0,1,0"))
                  (rule "eqSymm" (formula "94") (term "1,0,0,1"))
                  (rule "polySimp_homoEq" (formula "94") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "94") (term "0,0,1,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "94") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "94") (term "1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "94") (term "1,0,1,1,0"))
                  (rule "mul_literals" (formula "94") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "94") (term "1,1,0,1,1,0"))
                  (rule "pullOutSelect" (formula "94") (term "0,0,0,0,1,0,0") (inst "selectSK=case_study_SortedListNode_tail_7"))
                  (rule "applyEq" (formula "95") (term "0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "95") (term "1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "95") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                  (rule "polySimp_homoEq" (formula "95") (term "1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "95") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "replaceKnownSelect_taclet0000_33" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "95") (term "1,0,1,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "95") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "95") (term "1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "95") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "95") (term "0,1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "95") (term "1,1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "95") (term "1,1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "95") (term "0,1,0,0,0") (inst "selectSK=case_study_SortedListNode_size_15"))
                  (rule "applyEq" (formula "96") (term "0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "96") (term "0,0,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "95")))
                  (rule "replaceKnownSelect_taclet10000_50" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10000_51" (formula "1") (term "2,0"))
                  (rule "polySimp_homoEq" (formula "96") (term "1,1,0,0"))
                  (rule "polySimp_homoEq" (formula "96") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "96") (term "0,1,1,0,0"))
                  (rule "polySimp_addComm1" (formula "96") (term "0,0,1,1,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "polySimp_sepPosMonomial" (formula "96") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "96") (term "1,1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "96") (term "1,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "1,1,1,1,0,0"))
                  (rule "mul_literals" (formula "96") (term "0,1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "96") (term "1,1,1,1,0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "96") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "96") (term "1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "96") (term "1,0,1,1,0"))
                  (rule "mul_literals" (formula "96") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "96") (term "1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "96") (term "1,1,0,1,1,0"))
                  (rule "pullOutSelect" (formula "96") (term "0,0,1,0") (inst "selectSK=case_study_SortedListNode_head_9"))
                  (rule "applyEq" (formula "97") (term "0,1,0,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
                  (rule "eqSymm" (formula "97") (term "0,1,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,1,0,0"))
                  (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__5"))
                  (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "3"))
                  (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "97")))
                  (rule "replaceKnownSelect_taclet000_31" (formula "3") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "3") (term "2,0"))
                  (rule "replaceKnownSelect_taclet000_31" (formula "3") (term "0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "3") (term "0,0,0,0"))
                  (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "96")))
                  (rule "replaceKnownSelect_taclet000_31" (formula "1") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000_32" (formula "1") (term "0,0,1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "97") (term "1,1,1,1,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "97") (term "1,1,0,1,1,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "97") (term "0,1,0,0,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "applyEqReverse" (formula "96") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "96") (term "0,0,0,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "96") (term "0,0,0,0,1,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "96") (term "1,0,1,1,0,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_left" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "polySimp_homoEq" (formula "95") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "95") (term "1,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "95") (term "1,0,1,0,0,0"))
                  (rule "mul_literals" (formula "95") (term "0,1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "95") (term "1,1,1,0,0"))
                  (rule "add_literals" (formula "95") (term "0,1,1,1,0,0"))
                  (rule "add_zero_left" (formula "95") (term "1,1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "95") (term "1,0,1,1,0"))
                  (rule "add_literals" (formula "95") (term "0,1,0,1,1,0"))
                  (rule "add_zero_left" (formula "95") (term "1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "95") (term "0,1,0,0,0"))
                  (rule "add_literals" (formula "95") (term "0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "95") (term "0,1,0,0,0"))
                  (rule "polySimp_invertEq" (formula "95") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "95") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "95") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "95") (term "0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "95") (term "0,1,0,1,0,0") (inst "selectSK=case_study_SortedListNode_head_10"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "replaceKnownSelect_taclet0000_38" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_commuteGeq" (formula "96") (term "1,0,1,0,0"))
                  (rule "pullOutSelect" (formula "96") (term "0,1,1,0,0") (inst "selectSK=case_study_SortedListNode_size_16"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "93"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet0000_37" (formula "1") (term "2,0"))
                  (rule "eqSymm" (formula "97") (term "1,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_11"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "97")) (ifInst ""  (formula "35")))
                  (rule "elementOfSingleton" (formula "3") (term "0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__6"))
                  (rule "applyEq" (formula "1") (term "0,0,1,0,0") (ifseqformula "2"))
                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "57"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "replaceKnownSelect_taclet0000_35" (formula "2") (term "2,0"))
                  (rule "replaceKnownSelect_taclet0000_35" (formula "2") (term "0,0,1,0,0"))
                  (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "98") (term "1,1,1,0") (ifseqformula "97"))
                   (builtin "One Step Simplification" (formula "98"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "ifthenelse_split" (formula "59") (term "0"))
                  (branch " ¬ (self.tail@heap).tail@anon_heap___insertHead_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail@anon_heap___insertHead_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                     (rule "andLeft" (formula "59"))
                     (rule "notLeft" (formula "60"))
                     (rule "notLeft" (formula "59"))
                     (rule "applyEqReverse" (formula "61") (term "2,0") (ifseqformula "59"))
                     (rule "hideAuxiliaryEq" (formula "59"))
                     (rule "replace_known_right" (formula "78") (term "0,0,1,0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "replace_known_right" (formula "62") (term "0,0,0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "96")))
                     (rule "applyEqReverse" (formula "63") (term "2,0") (ifseqformula "62"))
                     (rule "hideAuxiliaryEq" (formula "62"))
                     (rule "replace_known_right" (formula "62") (term "0,0,1,0,0") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "62"))
                     (rule "replace_known_right" (formula "59") (term "0,1,0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "94")))
                     (rule "applyEqReverse" (formula "60") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "77") (term "0,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "62") (term "0,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "70") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (rule "hideAuxiliaryEq" (formula "59"))
                     (rule "replace_known_right" (formula "69") (term "0,0,1,0,0") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "69"))
                     (rule "replace_known_right" (formula "68") (term "0,0,0,0,0") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "94")))
                     (rule "applyEqReverse" (formula "69") (term "2,0") (ifseqformula "68"))
                     (rule "hideAuxiliaryEq" (formula "68"))
                     (rule "replace_known_right" (formula "73") (term "0,1,0,0") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "92")))
                     (rule "applyEqReverse" (formula "75") (term "2,0") (ifseqformula "73"))
                     (rule "hideAuxiliaryEq" (formula "73"))
                     (rule "replace_known_right" (formula "59") (term "0,0,1,0,0") (ifseqformula "91"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "91"))
                      (builtin "One Step Simplification" (formula "62"))
                     (rule "true_left" (formula "62"))
                     (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "90"))
                      (builtin "One Step Simplification" (formula "64"))
                     (rule "replace_known_right" (formula "62") (term "0") (ifseqformula "90"))
                      (builtin "One Step Simplification" (formula "62"))
                     (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "90"))
                      (builtin "One Step Simplification" (formula "60"))
                     (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "64"))
                      (builtin "One Step Simplification" (formula "65"))
                     (rule "true_left" (formula "65"))
                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "63"))
                     (rule "true_left" (formula "63"))
                     (rule "replace_known_right" (formula "80") (term "1,0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "80"))
                     (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "79"))
                     (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "81"))
                     (rule "replace_known_right" (formula "77") (term "1,0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "77"))
                     (rule "replace_known_right" (formula "78") (term "1,0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "78"))
                     (rule "applyEq" (formula "32") (term "2,0") (ifseqformula "62"))
                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "62"))
                     (rule "inEqSimp_homoInEq1" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "add_literals" (formula "46") (term "0,0"))
                     (rule "add_zero_left" (formula "46") (term "0"))
                     (rule "applyEq" (formula "92") (term "0,1,1,0") (ifseqformula "62"))
                     (rule "eqSymm" (formula "92") (term "1,1,0"))
                     (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "62"))
                     (rule "polySimp_homoEq" (formula "49") (term "0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                     (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                     (rule "add_literals" (formula "49") (term "0,0,0"))
                     (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "62"))
                     (rule "polySimp_homoEq" (formula "52") (term "0"))
                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                     (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                     (rule "add_literals" (formula "52") (term "0,0,0"))
                     (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "62"))
                     (rule "polySimp_homoEq" (formula "47") (term "1"))
                     (rule "polySimp_mulComm0" (formula "47") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "47") (term "1,0,1"))
                     (rule "mul_literals" (formula "47") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0,1"))
                     (rule "add_literals" (formula "47") (term "0,0,1"))
                     (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "62"))
                     (rule "polySimp_addAssoc" (formula "40") (term "1"))
                     (rule "add_literals" (formula "40") (term "0,1"))
                     (rule "add_zero_left" (formula "40") (term "1"))
                     (rule "applyEqReverse" (formula "46") (term "0,0") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "47") (term "0,1,0,1") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "49") (term "0,1,0,0") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "80") (term "1,1,1") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "77") (term "0,1") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "81") (term "0,0") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "92") (term "1,1,1,1,0") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "79") (term "0,1") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "52") (term "0,1,0,0") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "40"))
                     (rule "applyEqReverse" (formula "81") (term "1,1,1") (ifseqformula "40"))
                     (rule "hideAuxiliaryEq" (formula "40"))
                     (rule "polySimp_homoEq" (formula "61"))
                     (rule "polySimp_homoEq" (formula "79") (term "1"))
                     (rule "polySimp_homoEq" (formula "91") (term "1,1,0"))
                     (rule "polySimp_homoEq" (formula "80") (term "1"))
                     (rule "polySimp_addComm1" (formula "61") (term "0"))
                     (rule "polySimp_addComm1" (formula "79") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "91") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "80") (term "0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "46") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "48") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "51") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "61"))
                     (rule "polySimp_mulComm0" (formula "61") (term "1"))
                     (rule "polySimp_rightDist" (formula "61") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                     (rule "mul_literals" (formula "61") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                     (rule "applyEq" (formula "79") (term "1,0,1") (ifseqformula "61"))
                     (rule "polySimp_addAssoc" (formula "79") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "79") (term "0,0,1"))
                     (rule "add_literals" (formula "79") (term "0,0,0,1"))
                     (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "61"))
                     (rule "polySimp_homoEq" (formula "51") (term "0"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                     (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                     (rule "add_literals" (formula "51") (term "0,0,0"))
                     (rule "applyEq" (formula "76") (term "0,1") (ifseqformula "61"))
                     (rule "polySimp_homoEq" (formula "76") (term "1"))
                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "76") (term "1,0,1"))
                     (rule "mul_literals" (formula "76") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "76") (term "0,1"))
                     (rule "add_literals" (formula "76") (term "0,0,1"))
                     (rule "applyEq" (formula "78") (term "0,1") (ifseqformula "61"))
                     (rule "polySimp_homoEq" (formula "78") (term "1"))
                     (rule "polySimp_mulComm0" (formula "78") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "78") (term "1,0,1"))
                     (rule "mul_literals" (formula "78") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "78") (term "0,1"))
                     (rule "add_literals" (formula "78") (term "0,0,1"))
                     (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "61"))
                     (rule "polySimp_addAssoc" (formula "32") (term "2,0"))
                     (rule "add_literals" (formula "32") (term "0,2,0"))
                     (rule "add_zero_left" (formula "32") (term "2,0"))
                     (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "61"))
                     (rule "polySimp_homoEq" (formula "80") (term "0"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,0,0"))
                     (rule "mul_literals" (formula "80") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "80") (term "0,0"))
                     (rule "add_literals" (formula "80") (term "0,0,0"))
                     (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "61"))
                     (rule "polySimp_homoEq" (formula "46") (term "1"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,1"))
                     (rule "add_literals" (formula "46") (term "0,0,1"))
                     (rule "applyEq" (formula "91") (term "1,0,1,1,0") (ifseqformula "61"))
                     (rule "polySimp_addAssoc" (formula "91") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "91") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "91") (term "0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "91") (term "0,0,1,1,0"))
                     (rule "applyEq" (formula "80") (term "1,0,1") (ifseqformula "61"))
                     (rule "polySimp_addAssoc" (formula "80") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "80") (term "0,0,1"))
                     (rule "add_literals" (formula "80") (term "0,0,0,1"))
                     (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "61"))
                     (rule "polySimp_homoEq" (formula "48") (term "0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "61"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0"))
                     (rule "polySimp_rightDist" (formula "45") (term "0"))
                     (rule "mul_literals" (formula "45") (term "0,0"))
                     (rule "applyEq" (formula "60") (term "1") (ifseqformula "61"))
                     (rule "polySimp_sepPosMonomial" (formula "79") (term "1"))
                     (rule "polySimp_mulComm0" (formula "79") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "79") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1"))
                     (rule "mul_literals" (formula "79") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "79") (term "1,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "51") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "51") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "76") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "76") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "76") (term "0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "78") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "78") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "78") (term "0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "80") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "80") (term "0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "46") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "46") (term "0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "91") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "91") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "91") (term "1,1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "80") (term "1"))
                     (rule "polySimp_mulComm0" (formula "80") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "80") (term "1,1"))
                     (rule "mul_literals" (formula "80") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "80") (term "1,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "48") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0"))
                     (rule "commute_or" (formula "70") (term "0,0"))
                     (rule "commute_or" (formula "60") (term "0,0"))
                     (rule "commute_or" (formula "64") (term "0,0"))
                     (rule "commute_or" (formula "58") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "ifthenelse_split" (formula "29") (term "0"))
                     (branch "self.tail = self TRUE"
                        (rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,0,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "9") (term "1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "92") (term "0,0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "92") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "eqSymm" (formula "8") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "27") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "26") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "9") (term "0,0"))
                        (rule "eqSymm" (formula "11") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "27") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "26") (term "0,1,0,0"))
                        (rule "eqSymm" (formula "11") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "91") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "91") (term "0,1,0,1,0,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "90") (term "0,1,0"))
                        (rule "replace_known_left" (formula "31") (term "0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "applyEqReverse" (formula "90") (term "1,1,1,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "90") (term "0,1,1,0,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "30") (term "1,3,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "90") (term "0,1,0,0,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "84") (term "1,3,0,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "29") (term "1,3,0") (ifseqformula "31"))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "31"))
                        (rule "hideAuxiliaryEq" (formula "31"))
                        (rule "eqSymm" (formula "89") (term "1,1,0"))
                        (rule "applyEq" (formula "56") (term "1,1,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "58") (term "1,1,2,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "65") (term "1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "7") (term "1,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "62") (term "1,1,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "44") (term "1,0,0,0") (ifseqformula "28"))
                        (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "applyEq" (formula "45") (term "1,1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "67") (term "1,0,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "57") (term "1,0,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "88") (term "1,1,0,0,0,0,1") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "88"))
                        (rule "applyEq" (formula "42") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "57") (term "1,1,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "17") (term "0,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "56") (term "1,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "57") (term "1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "28"))
                        (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "47"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "true_left" (formula "48"))
                        (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "46") (term "1,1,0,1") (ifseqformula "28"))
                        (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "true_left" (formula "46"))
                        (rule "applyEq" (formula "53") (term "1,1,2,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "15") (term "0,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "53") (term "1,0,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "28"))
                        (rule "replace_known_left" (formula "86") (term "1,1,0") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "applyEq" (formula "68") (term "0,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "64") (term "1,1,1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "82") (term "1,0") (ifseqformula "28"))
                        (rule "replace_known_right" (formula "7") (term "0,0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "replace_known_right" (formula "26") (term "0,0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "replace_known_right" (formula "25") (term "0,0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "12") (term "0,0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "10") (term "0,0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "replace_known_right" (formula "86") (term "0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "82")))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "ifthenelse_negated" (formula "3") (term "0"))
                        (rule "ifthenelse_negated" (formula "24") (term "0"))
                        (rule "ifthenelse_negated" (formula "2") (term "0"))
                        (rule "ifthenelse_negated" (formula "6") (term "0"))
                        (rule "ifthenelse_negated" (formula "9") (term "0"))
                        (rule "ifthenelse_negated" (formula "11") (term "0"))
                        (rule "applyEq" (formula "53") (term "1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "37"))
                        (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "1,0"))
                        (rule "times_zero_1" (formula "37") (term "0"))
                        (rule "leq_literals" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "applyEq" (formula "57") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "62") (term "1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "58") (term "1,1,2,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "69") (term "0,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "58") (term "1,0,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "64") (term "1,1,2,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "28"))
                        (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "applyEq" (formula "83") (term "0") (ifseqformula "28"))
                        (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "43") (term "1,1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "63") (term "1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "57") (term "1,1,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "53") (term "1,1,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "57") (term "1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "63") (term "1,1,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "68") (term "0,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "65") (term "0,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "80") (term "1,1,0") (ifseqformula "28"))
                        (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "80"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                        (rule "hideAuxiliaryEq" (formula "10"))
                        (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "22") (term "0,1,0,0") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "applyEqReverse" (formula "23") (term "2,0") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "76"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "23"))
                        (rule "polySimp_homoEq" (formula "48"))
                        (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                        (rule "add_literals" (formula "48") (term "1,1,0"))
                        (rule "times_zero_1" (formula "48") (term "1,0"))
                        (rule "add_zero_right" (formula "48") (term "0"))
                        (rule "equal_literals" (formula "48"))
                        (rule "closeFalse" (formula "48"))
                     )
                     (branch "self.tail = self FALSE"
                        (rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "92") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "90")) (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "25") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "29")) (ifInst ""  (formula "90")) (ifInst ""  (formula "57")))
                        (rule "true_left" (formula "27"))
                        (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "9") (term "1,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "91") (term "0,0,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,0,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                        (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "15") (term "1,2,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "1,2,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "9") (term "1,2,0") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "eqSymm" (formula "23") (term "0,1,0,0"))
                        (rule "eqSymm" (formula "8") (term "0,0"))
                        (rule "eqSymm" (formula "23") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "16") (term "0,0"))
                        (rule "eqSymm" (formula "15") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "15") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "87") (term "0,1,0,1,0,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "87") (term "1,0,1,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "85")) (ifInst ""  (formula "85")))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "25") (term "1,3,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "79") (term "1,3,0,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "24") (term "1,3,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "86") (term "1,1,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "86"))
                        (rule "applyEqReverse" (formula "86") (term "0,1,0") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_right" (formula "22") (term "0,0,0,0,0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "80")) (ifInst ""  (formula "80")) (ifInst ""  (formula "31")))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "30")))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "21"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "21"))
                        (rule "hideAuxiliaryEq" (formula "21"))
                        (rule "replace_known_left" (formula "9") (term "0,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "81")))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "80"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "28")))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "27")))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "76")))
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "10") (term "0,0,1,0,0") (ifseqformula "75"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "75"))
                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "76")))
                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                        (rule "hideAuxiliaryEq" (formula "9"))
                        (rule "replace_known_right" (formula "7") (term "0,1,0,0") (ifseqformula "75"))
                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "74")))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "7") (term "0,0,1,0,0") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "75"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "73")))
                        (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "75"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "72")))
                        (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "72")))
                        (rule "true_left" (formula "10"))
                        (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                        (rule "true_left" (formula "12"))
                        (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "69"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                        (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "18"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "72") (term "1,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "17"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "71") (term "1,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "70") (term "1,0"))
                        (rule "replace_known_left" (formula "70") (term "1,0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "inEqSimp_commuteGeq" (formula "6"))
                        (rule "inEqSimp_commuteLeq" (formula "70") (term "0"))
                        (rule "applyEq" (formula "60") (term "0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "60"))
                        (rule "applyEq" (formula "6") (term "0") (ifseqformula "59"))
                        (rule "applyEq" (formula "70") (term "0,0") (ifseqformula "59"))
                        (rule "inEqSimp_commuteGeq" (formula "70") (term "0"))
                        (rule "replace_known_left" (formula "70") (term "0") (ifseqformula "19"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "allRight" (formula "70") (inst "sk=f_0"))
                        (rule "allRight" (formula "70") (inst "sk=o_0"))
                        (rule "orRight" (formula "70"))
                        (rule "orRight" (formula "70"))
                        (rule "orRight" (formula "70"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "60"))
                        (rule "inEqSimp_homoInEq1" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "add_literals" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "26") (term "0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "applyEq" (formula "63") (term "1,3,0,0") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "63") (term "3,0,0"))
                        (rule "add_literals" (formula "63") (term "0,3,0,0"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                        (rule "add_literals" (formula "5") (term "0,1,0"))
                        (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "56") (term "1"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,1"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,1"))
                        (rule "add_literals" (formula "56") (term "0,0,1"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "60"))
                        (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "57") (term "1"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,1"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0,1"))
                        (rule "add_literals" (formula "57") (term "0,0,0,1"))
                        (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "54") (term "1"))
                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                        (rule "mul_literals" (formula "54") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                        (rule "add_literals" (formula "54") (term "0,0,1"))
                        (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "58") (term "0"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                        (rule "add_literals" (formula "58") (term "0,0,0"))
                        (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "58") (term "1"))
                        (rule "polySimp_mulComm0" (formula "58") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "58") (term "1,0,1"))
                        (rule "mul_literals" (formula "58") (term "0,1,0,1"))
                        (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "58") (term "0,0,1"))
                        (rule "add_literals" (formula "58") (term "0,0,0,1"))
                        (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "24") (term "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                        (rule "add_literals" (formula "24") (term "0,0,1"))
                        (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "10") (term "3,0"))
                        (rule "add_literals" (formula "10") (term "0,3,0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "60"))
                        (rule "polySimp_homoEq" (formula "29") (term "0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0"))
                        (rule "applyEq" (formula "9") (term "1,3,0") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "9") (term "3,0"))
                        (rule "add_literals" (formula "9") (term "0,3,0"))
                        (rule "applyEq" (formula "29") (term "1,1,1") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "29") (term "1,1"))
                        (rule "add_literals" (formula "29") (term "0,1,1"))
                        (rule "applyEq" (formula "28") (term "1,1,1") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,1"))
                        (rule "add_literals" (formula "28") (term "0,1,1"))
                        (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "38") (term "1"))
                        (rule "add_literals" (formula "38") (term "0,1"))
                        (rule "add_zero_left" (formula "38") (term "1"))
                        (rule "applyEq" (formula "39") (term "1,1") (ifseqformula "60"))
                        (rule "polySimp_addAssoc" (formula "39") (term "1"))
                        (rule "add_literals" (formula "39") (term "0,1"))
                        (rule "add_zero_left" (formula "39") (term "1"))
                        (rule "applyEqReverse" (formula "9") (term "1,3,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "29") (term "1,1,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "29") (term "0,1,0,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "24") (term "0,1,0,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "57") (term "0,1,0,0,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "7") (term "1,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "26") (term "0,1,0,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "58") (term "0,1,0,0,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "56") (term "0,1,0,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "10") (term "1,3,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "63") (term "1,3,0,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "58") (term "0,1,0,0") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "54") (term "0,1,0,1") (ifseqformula "39"))
                        (rule "applyEqReverse" (formula "60") (term "1,1") (ifseqformula "39"))
                        (rule "hideAuxiliaryEq" (formula "39"))
                        (rule "polySimp_homoEq" (formula "59"))
                        (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "59") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "29") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "26") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "55") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "55") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "57") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "53") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "53") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "56") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "56") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "57") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "59"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1"))
                        (rule "polySimp_rightDist" (formula "59") (term "1"))
                        (rule "mul_literals" (formula "59") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "59") (term "1,1"))
                        (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "26") (term "0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "29") (term "0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0"))
                        (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "57") (term "1"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,1"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                        (rule "add_literals" (formula "57") (term "0,0,0,1"))
                        (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "55") (term "1"))
                        (rule "polySimp_mulComm0" (formula "55") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "55") (term "1,0,1"))
                        (rule "mul_literals" (formula "55") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "55") (term "0,1"))
                        (rule "add_literals" (formula "55") (term "0,0,1"))
                        (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "57") (term "0"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                        (rule "add_literals" (formula "57") (term "0,0,0"))
                        (rule "applyEq" (formula "56") (term "0,1") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "56") (term "1"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,1"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "56") (term "0,0,1"))
                        (rule "add_literals" (formula "56") (term "0,0,0,1"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                        (rule "add_literals" (formula "5") (term "0,1,0"))
                        (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "53") (term "1"))
                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                        (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                        (rule "add_literals" (formula "53") (term "0,0,1"))
                        (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "59"))
                        (rule "polySimp_homoEq" (formula "24") (term "1"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                        (rule "add_literals" (formula "24") (term "0,0,1"))
                        (rule "applyEq" (formula "62") (term "1,3,0,0") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "62") (term "3,0,0"))
                        (rule "add_literals" (formula "62") (term "0,3,0,0"))
                        (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "10") (term "3,0"))
                        (rule "add_literals" (formula "10") (term "0,3,0"))
                        (rule "applyEq" (formula "9") (term "1,3,0") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "9") (term "3,0"))
                        (rule "add_literals" (formula "9") (term "0,3,0"))
                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "59"))
                        (rule "polySimp_mulComm0" (formula "23") (term "0"))
                        (rule "polySimp_rightDist" (formula "23") (term "0"))
                        (rule "mul_literals" (formula "23") (term "0,0"))
                        (rule "applyEq" (formula "28") (term "1,1,1") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "28") (term "1,1"))
                        (rule "add_literals" (formula "28") (term "0,1,1"))
                        (rule "applyEq" (formula "29") (term "1,1,1") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "29") (term "1,1"))
                        (rule "add_literals" (formula "29") (term "0,1,1"))
                        (rule "applyEq" (formula "5") (term "1") (ifseqformula "59"))
                        (rule "applyEq" (formula "38") (term "1") (ifseqformula "59"))
                        (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "59"))
                        (rule "polySimp_addAssoc" (formula "7") (term "1"))
                        (rule "add_literals" (formula "7") (term "0,1"))
                        (rule "add_zero_left" (formula "7") (term "1"))
                        (rule "polySimp_sepNegMonomial" (formula "26") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "29") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "57") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "55") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "55") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "57") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "56") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "56") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "53") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "53") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "53") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "24") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "23"))
                        (rule "leq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "72"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "69"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "castDel" (formula "2") (term "1,0"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "eqSymm" (formula "2") (term "1,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "71"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "36"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "72")))
                        (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__8"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "73"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "72"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                        (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "72"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch " ¬ (self.tail@heap).tail@anon_heap___insertHead_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail@anon_heap___insertHead_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                     (rule "applyEqReverse" (formula "61") (term "2,0") (ifseqformula "59"))
                     (rule "hideAuxiliaryEq" (formula "59"))
                     (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "95"))
                      (builtin "One Step Simplification" (formula "76"))
                     (rule "applyEqReverse" (formula "78") (term "2,0") (ifseqformula "76"))
                     (rule "hideAuxiliaryEq" (formula "76"))
                     (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "94"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "applyEqReverse" (formula "60") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "63") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "77") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (rule "applyEqReverse" (formula "71") (term "0,0,0,0,0,0") (ifseqformula "59"))
                     (rule "hideAuxiliaryEq" (formula "59"))
                     (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "93"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "applyEqReverse" (formula "62") (term "2,0") (ifseqformula "61"))
                     (rule "hideAuxiliaryEq" (formula "61"))
                     (rule "commute_or" (formula "59") (term "0,0,0"))
                     (rule "commute_or" (formula "61") (term "0,0,0"))
                     (rule "commute_or" (formula "75") (term "0,0,0"))
                     (rule "commute_or" (formula "69") (term "0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "ifthenelse_split" (formula "29") (term "0"))
                     (branch "self.tail = self TRUE"
                        (rule "applyEqReverse" (formula "25") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,0,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,2,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "32") (term "1") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "96") (term "0,0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "9") (term "1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "96") (term "0,0,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,0,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "10") (term "1,2,0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "eqSymm" (formula "8") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "27") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "26") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "9") (term "0,0"))
                        (rule "eqSymm" (formula "11") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "26") (term "0,1,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "27") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "11") (term "1,1,0,0"))
                        (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "applyEqReverse" (formula "31") (term "1,3,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "95") (term "1,1,1,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "30") (term "1,3,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "95") (term "0,1,1,0,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "90") (term "1,3,0,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "95") (term "0,1,0,0,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "32"))
                        (rule "hideAuxiliaryEq" (formula "32"))
                        (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "94") (term "1,0,1,0") (ifseqformula "4"))
                        (rule "applyEqReverse" (formula "94") (term "0,1,0,1,0,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "eqSymm" (formula "93") (term "1,1,0"))
                        (rule "eqSymm" (formula "93") (term "0,1,0"))
                        (rule "applyEq" (formula "26") (term "1,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "50") (term "1,1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "59") (term "1,0,0,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "37"))
                        (rule "polySimp_pullOutFactor1" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "1,0"))
                        (rule "times_zero_1" (formula "37") (term "0"))
                        (rule "leq_literals" (formula "37"))
                        (rule "true_left" (formula "37"))
                        (rule "applyEq" (formula "69") (term "1,1,1,0,1") (ifseqformula "28"))
                        (rule "applyEq" (formula "72") (term "1,1,2,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "56") (term "1,1,2,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "66") (term "1,0,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "75") (term "0,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "77") (term "0,1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "45") (term "1,1,0,1") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "45") (term "1"))
                        (rule "polySimp_pullOutFactor1" (formula "45") (term "0,1"))
                        (rule "add_literals" (formula "45") (term "1,0,1"))
                        (rule "times_zero_1" (formula "45") (term "0,1"))
                        (rule "leq_literals" (formula "45") (term "1"))
                         (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "applyEq" (formula "79") (term "1,0,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "17") (term "0,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "57") (term "1,0,0,0,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "63") (term "1") (ifseqformula "28"))
                        (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "28"))
                        (rule "polySimp_homoEq" (formula "37"))
                        (rule "polySimp_pullOutFactor1b" (formula "37") (term "0"))
                        (rule "add_literals" (formula "37") (term "1,1,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0"))
                        (rule "add_literals" (formula "37") (term "0"))
                        (rule "equal_literals" (formula "37"))
                        (rule "closeFalse" (formula "37"))
                     )
                     (branch "self.tail = self FALSE"
                        (rule "applyEqReverse" (formula "26") (term "1,0,0,1,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "8") (term "1,1,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "11") (term "1,1,0,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "94")) (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "96") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "13") (term "1,1,0,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "94")) (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "25") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "27") (term "1,1,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "29")) (ifInst ""  (formula "94")))
                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "10") (term "1,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "96") (term "0,0,0,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "9") (term "1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "22") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "1,2,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "15") (term "1,2,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "27") (term "1,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "21") (term "1,1,1") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "22") (term "1,1,1,0") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "hideAuxiliaryEq" (formula "10"))
                        (rule "eqSymm" (formula "23") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "8") (term "0,0"))
                        (rule "eqSymm" (formula "23") (term "0,1,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "13") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "15") (term "1,0,0,0"))
                        (rule "eqSymm" (formula "16") (term "0,0"))
                        (rule "eqSymm" (formula "15") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "91") (term "1,0,1,0") (ifseqformula "4"))
                         (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "89")) (ifInst ""  (formula "89")))
                        (rule "applyEqReverse" (formula "91") (term "0,0,0,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "90") (term "0,1,0,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "90") (term "1,1,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "90"))
                        (rule "applyEqReverse" (formula "24") (term "1,3,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "25") (term "1,3,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "84") (term "1,3,0,0") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "87"))
                         (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "31")))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "86"))
                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "30")))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "19") (term "0,1,0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "85")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "19"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "19"))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "replace_known_left" (formula "19") (term "0,1,1,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "84")) (ifInst ""  (formula "82")) (ifInst ""  (formula "82")))
                        (rule "hideAuxiliaryEq" (formula "19"))
                        (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "27")))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "80"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "6"))
                        (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "6"))
                        (rule "applyEqReverse" (formula "10") (term "0,1") (ifseqformula "6"))
                        (rule "applyEqReverse" (formula "14") (term "0,1") (ifseqformula "6"))
                        (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "6"))
                        (rule "applyEqReverse" (formula "13") (term "0,1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "21"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "79") (term "1,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "20"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "78") (term "1,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "77") (term "1,0"))
                        (rule "replace_known_left" (formula "77") (term "1,0") (ifseqformula "68"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "inEqSimp_commuteGeq" (formula "7") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "8") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "77") (term "0"))
                        (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "67"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "67"))
                        (rule "applyEq" (formula "77") (term "0,0") (ifseqformula "67"))
                        (rule "inEqSimp_commuteGeq" (formula "77") (term "0"))
                        (rule "replace_known_left" (formula "77") (term "0") (ifseqformula "23"))
                         (builtin "One Step Simplification" (formula "77"))
                        (rule "allRight" (formula "77") (inst "sk=f_0"))
                        (rule "allRight" (formula "77") (inst "sk=o_0"))
                        (rule "orRight" (formula "77"))
                        (rule "orRight" (formula "77"))
                        (rule "orRight" (formula "77"))
                        (rule "applyEq" (formula "6") (term "0,1") (ifseqformula "68"))
                        (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "67"))
                        (rule "applyEq" (formula "8") (term "0,1") (ifseqformula "67"))
                        (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "67"))
                        (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "67"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "26"))
                        (rule "leq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "70"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "79"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "76"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
                        (rule "simplifySelectOfStore" (formula "2"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "castDel" (formula "2") (term "1,0"))
                        (rule "eqSymm" (formula "2") (term "0,0,0"))
                        (rule "eqSymm" (formula "2") (term "1,0,0"))
                        (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "78"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "39"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "79")))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_created__8"))
                        (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "80"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                        (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "76"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Exceptional Post (havocPacked)"
                   (builtin "One Step Simplification" (formula "92"))
                   (builtin "One Step Simplification" (formula "89"))
                  (rule "andLeft" (formula "89"))
                  (rule "andLeft" (formula "90"))
                  (rule "andLeft" (formula "90"))
                  (rule "notLeft" (formula "90"))
                  (rule "close" (formula "92") (ifseqformula "91"))
               )
               (branch "Pre (havocPacked)"
                   (builtin "One Step Simplification" (formula "90"))
                  (rule "wellFormedStorePrimitive" (formula "90"))
                  (rule "wellFormedAnonEQ" (formula "90") (ifseqformula "52"))
                  (rule "wellFormedAnonEQ" (formula "90") (term "0") (ifseqformula "49"))
                  (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "51"))
                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "29")) (ifInst ""  (formula "48")))
                  (rule "closeTrue" (formula "90"))
               )
            )
         )
         (branch "Null Reference (s_2 = null)"
             (builtin "One Step Simplification" (formula "60"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (s_1 = null)"
          (builtin "One Step Simplification" (formula "59"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (__insertHead_trampoline)"
       (builtin "One Step Simplification" (formula "23"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "26"))
      (rule "notLeft" (formula "24"))
      (rule "close" (formula "28") (ifseqformula "27"))
   )
   (branch "Pre (__insertHead_trampoline)"
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
      (rule "wellFormedAnonEQ" (formula "24") (term "0,1") (ifseqformula "20"))
      (rule "replace_known_left" (formula "24") (term "0,0,1") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
      (rule "pullOutSelect" (formula "24") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=case_study_SortedListNode_head_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "inEqSimp_commuteGeq" (formula "26") (term "0,0"))
      (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "26") (term "1,0") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "commute_and" (formula "26"))
      (rule "ifthenelse_split" (formula "1") (term "0"))
      (branch "self.tail.<created> = TRUE TRUE"
         (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "2"))
         (rule "hideAuxiliaryEq" (formula "2"))
         (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_leqRight" (formula "25"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "self.tail.<created> = TRUE FALSE"
         (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "25"))
         (rule "close" (formula "24") (ifseqformula "4"))
      )
   )
   (branch "Null reference (s = null)"
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
      (rule "closeTrue" (formula "24"))
   )
)
(branch "Exceptional Post (havocPacked)"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "20"))
   (rule "notLeft" (formula "20"))
   (rule "close" (formula "22") (ifseqformula "21"))
)
(branch "Pre (havocPacked)"
    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "20"))
)
)
}
