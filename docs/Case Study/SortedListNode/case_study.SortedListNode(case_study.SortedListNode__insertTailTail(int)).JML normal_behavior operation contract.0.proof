\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:on",
        "Strings" : "Strings:on",
        "assertions" : "assertions:safe",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:off",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 100000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_EXPAND",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_OFF",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_INSTANTIATE",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_OFF",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "../../../property-checker-out/case_study";

\proofObligation "#Proof Obligation Settings
#Fri Jun 14 14:04:27 CEST 2024
contract=case_study.SortedListNode[case_study.SortedListNode\\:\\:insertTailTail(int)].JML normal_behavior operation contract.0
name=case_study.SortedListNode[case_study.SortedListNode\\:\\:insertTailTail(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "florian" ) (keyVersion "7ff2d9dc3ea43e071577b3f8d0e3a537f9213982"))

(autoModeTime "705467")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "6"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "13") (term "0,1,0,0,0,1"))
(rule "replace_known_right" (formula "5") (term "0,0,0,1") (ifseqformula "11"))
 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "12")) (ifInst ""  (formula "11")))
(rule "andLeft" (formula "5"))
(rule "polySimp_homoEq" (formula "14") (term "0,1,1,0,0,0,1"))
(rule "polySimp_homoEq" (formula "14") (term "1,1,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "6"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,1,1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "0,0"))
(rule "polySimp_addComm1" (formula "14") (term "0,0,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "14") (term "0,1,1,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "elementOfInfiniteUnion" (formula "14") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "inEqSimp_commuteGeq" (formula "7"))
(rule "inEqSimp_commuteGeq" (formula "8"))
(rule "assignment" (formula "14") (term "1"))
 (builtin "One Step Simplification" (formula "14"))
(rule "polySimp_sepPosMonomial" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1"))
(rule "polySimp_rightDist" (formula "6") (term "1"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
(rule "mul_literals" (formula "6") (term "0,1"))
(rule "polySimp_elimOne" (formula "6") (term "1,1"))
(rule "polySimp_sepPosMonomial" (formula "14") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "14") (term "1,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,0,0,1"))
(rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0,0,0,0,1"))
(rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
(rule "polySimp_mulComm0" (formula "5") (term "0,0"))
(rule "polySimp_addComm0" (formula "5") (term "0"))
(rule "inEqSimp_sepNegMonomial1" (formula "5"))
(rule "polySimp_mulLiterals" (formula "5") (term "0"))
(rule "polySimp_elimOne" (formula "5") (term "0"))
(rule "limit_java_lang_Object__inv_free_" (formula "11"))
(rule "replace_known_left" (formula "11") (term "1") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "11"))
(rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "9") (ifseqformula "14"))
(rule "true_left" (formula "9"))
(rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "11") (ifseqformula "13"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "replace_known_right" (formula "14") (term "0,0,1") (ifseqformula "15"))
 (builtin "One Step Simplification" (formula "14"))
(rule "polySimp_homoEq" (formula "14") (term "1,1,1"))
(rule "polySimp_addComm0" (formula "14") (term "0,0,1,1,1"))
(rule "polySimp_addComm1" (formula "14") (term "0,1,1,1"))
(rule "inEqSimp_gtToGeq" (formula "13") (term "1"))
(rule "times_zero_1" (formula "13") (term "1,0,0,1"))
(rule "add_zero_right" (formula "13") (term "0,0,1"))
(rule "applyEq" (formula "14") (term "0,0") (ifseqformula "9"))
(rule "ssubsortDirect" (formula "14") (term "0"))
 (builtin "One Step Simplification" (formula "14"))
(rule "applyEq" (formula "11") (term "0,0") (ifseqformula "9"))
(rule "ssubsortDirect" (formula "11") (term "0"))
 (builtin "One Step Simplification" (formula "11"))
(rule "applyEq" (formula "13") (term "0,0") (ifseqformula "9"))
(rule "ssubsortDirect" (formula "13") (term "0"))
 (builtin "One Step Simplification" (formula "13"))
(rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "6"))
(rule "polySimp_homoEq" (formula "14") (term "1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
(rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
(rule "polySimp_addAssoc" (formula "14") (term "0,1,0"))
(rule "add_literals" (formula "14") (term "0,0,1,0"))
(rule "applyEq" (formula "14") (term "0,1,0,0,1,1") (ifseqformula "6"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1"))
(rule "mul_literals" (formula "14") (term "0,1,0,0,1,1"))
(rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1"))
(rule "add_literals" (formula "14") (term "0,0,0,1,1"))
(rule "polySimp_sepNegMonomial" (formula "14") (term "1,0"))
(rule "polySimp_mulLiterals" (formula "14") (term "0,1,0"))
(rule "polySimp_elimOne" (formula "14") (term "0,1,0"))
(rule "polySimp_sepPosMonomial" (formula "14") (term "1,1"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,1"))
(rule "polySimp_rightDist" (formula "14") (term "1,1,1"))
(rule "mul_literals" (formula "14") (term "0,1,1,1"))
(rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1"))
(rule "polySimp_elimOne" (formula "14") (term "1,1,1,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "13"))
(rule "mul_literals" (formula "13") (term "1"))
(rule "cnf_rightDist" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "cnf_rightDist" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "commute_or" (formula "15"))
(rule "cnf_rightDist" (formula "14"))
(rule "andLeft" (formula "14"))
(rule "commute_or" (formula "14"))
(rule "cnf_rightDist" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "commute_or" (formula "15"))
(rule "cnf_rightDist" (formula "14"))
 (builtin "One Step Simplification" (formula "14"))
(rule "commute_or" (formula "14"))
(rule "methodBodyExpand" (formula "21") (term "1") (newnames "heapBefore_insertTailTail,savedHeapBefore_insertTailTail,_newHeadBefore_insertTailTail"))
 (builtin "One Step Simplification" (formula "21"))
 (builtin "Use Operation Contract" (formula "21") (newnames "heapBefore_havocPacked,exc_0,heapAfter_havocPacked,anon_heap_havocPacked") (contract "case_study.SortedListNode[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (havocPacked)"
    (builtin "One Step Simplification" (formula "20"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "20"))
    (builtin "JML assume" (formula "24"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "impRight" (formula "24"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "head"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "temp1"))
   (rule "assignment_read_attribute_this" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_head_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "tail"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "temp2"))
   (rule "assignment_read_attribute_this" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_tail_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "size"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "temp3"))
   (rule "assignment_read_attribute_this" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "pullOutSelect" (formula "25") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_size_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "assignment" (formula "25") (term "1"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "4")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
    (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore___insertTail_trampoline,exc_1,heapAfter___insertTail_trampoline,anon_heap___insertTail_trampoline") (contract "case_study.SortedListNode[case_study.SortedListNode::__insertTail_trampoline(int,boolean,boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
   (branch "Post (__insertTail_trampoline)"
       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
       (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "28"))
      (rule "andLeft" (formula "27"))
      (rule "andLeft" (formula "30"))
      (rule "andLeft" (formula "28"))
      (rule "eqSymm" (formula "29"))
      (rule "polySimp_homoEq" (formula "27") (term "1,1"))
      (rule "polySimp_homoEq" (formula "30"))
      (rule "polySimp_addComm0" (formula "27") (term "0,0,1,1"))
      (rule "polySimp_addComm0" (formula "30") (term "0,0"))
      (rule "polySimp_addComm1" (formula "27") (term "0,1,1"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "assignment_write_attribute_this" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "assignment_write_attribute_this" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "eval_order_access4_this" (formula "34") (term "1") (inst "#v1=i"))
      (rule "variableDeclarationAssign" (formula "34") (term "1"))
      (rule "variableDeclaration" (formula "34") (term "1") (newnames "i"))
      (rule "polySimp_sepPosMonomial" (formula "27") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "27") (term "1,1,1"))
      (rule "mul_literals" (formula "27") (term "0,1,1,1"))
      (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1"))
      (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1"))
      (rule "polySimp_sepPosMonomial" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1"))
      (rule "polySimp_rightDist" (formula "30") (term "1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
      (rule "mul_literals" (formula "30") (term "0,1"))
      (rule "polySimp_elimOne" (formula "30") (term "1,1"))
      (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_packed_1"))
      (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")))
      (rule "elementOfInfiniteUnion" (formula "26") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")))
      (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
      (rule "hideAuxiliaryEq" (formula "26"))
      (rule "pullOutSelect" (formula "27") (term "0,0,0") (inst "selectSK=case_study_SortedListNode_tail_1"))
      (rule "applyEq" (formula "28") (term "1,0,1,1") (ifseqformula "27"))
      (rule "applyEq" (formula "28") (term "0,0,0,0,1") (ifseqformula "27"))
      (rule "applyEq" (formula "28") (term "1,0,1,0,1") (ifseqformula "27"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
      (rule "polySimp_homoEq" (formula "28") (term "1,1"))
      (rule "polySimp_addComm1" (formula "28") (term "0,1,1"))
      (rule "elementOfInfiniteUnion" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
      (rule "applyEqReverse" (formula "28") (term "0,0,0,0,1") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "28") (term "1,0,1,0,1") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "28") (term "0,0,0") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "28") (term "1,0,1,0,0,1,1") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "polySimp_addComm1" (formula "27") (term "0,1,1"))
      (rule "polySimp_sepNegMonomial" (formula "27") (term "1,1"))
      (rule "polySimp_mulLiterals" (formula "27") (term "0,1,1"))
      (rule "polySimp_elimOne" (formula "27") (term "0,1,1"))
      (rule "pullOutSelect" (formula "27") (term "0,1,0") (inst "selectSK=case_study_SortedListNode_size_1"))
      (rule "applyEq" (formula "28") (term "1,1,1,1") (ifseqformula "27"))
      (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "27"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
      (rule "elementOfInfiniteUnion" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
      (rule "applyEqReverse" (formula "28") (term "0,1,0") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "31") (term "1,1") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "28") (term "1,1,1,1") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "pullOutSelect" (formula "27") (term "1,1,0,1") (inst "selectSK=case_study_SortedListNode_head_1"))
      (rule "applyEq" (formula "30") (term "1") (ifseqformula "27"))
      (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
      (rule "replaceKnownSelect_taclet00_14" (formula "27") (term "2,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfInfiniteUnion" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "33")))
      (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "27"))
      (rule "applyEqReverse" (formula "28") (term "1,1,0,1") (ifseqformula "27"))
      (rule "hideAuxiliaryEq" (formula "27"))
      (rule "ifthenelse_negated" (formula "29") (term "0"))
      (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=case_study_SortedListNode_size_2"))
      (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "33")))
      (rule "polySimp_homoEq" (formula "31"))
      (rule "polySimp_addComm1" (formula "31") (term "0"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "ifthenelse_negated" (formula "30") (term "0"))
      (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "7"))
      (rule "polySimp_sepPosMonomial" (formula "31"))
      (rule "polySimp_mulComm0" (formula "31") (term "1"))
      (rule "polySimp_rightDist" (formula "31") (term "1"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
      (rule "mul_literals" (formula "31") (term "0,1"))
      (rule "polySimp_elimOne" (formula "31") (term "1,1"))
      (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "31"))
      (rule "polySimp_homoEq" (formula "27") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0"))
      (rule "mul_literals" (formula "27") (term "0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "27") (term "0,1,0"))
      (rule "add_literals" (formula "27") (term "0,0,1,0"))
      (rule "add_zero_left" (formula "27") (term "0,1,0"))
      (rule "applyEq" (formula "27") (term "1,1,1,1") (ifseqformula "31"))
      (rule "polySimp_addAssoc" (formula "27") (term "1,1,1"))
      (rule "add_literals" (formula "27") (term "0,1,1,1"))
      (rule "add_zero_left" (formula "27") (term "1,1,1"))
      (rule "polySimp_invertEq" (formula "27") (term "1,0"))
      (rule "mul_literals" (formula "27") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "27") (term "0,1,0"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,1,0") (ifseqformula "21"))
      (rule "pullOutSelect" (formula "27") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_2"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "elementOfInfiniteUnion" (formula "27") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "inEqSimp_commuteGeq" (formula "28") (term "1,0,1"))
      (rule "pullOutSelect" (formula "28") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_3"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfInfiniteUnion" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "27") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
      (rule "applyEq" (formula "29") (term "0,0,1,1,0,0") (ifseqformula "27"))
      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_3"))
      (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "elementOfSingleton" (formula "28") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "30") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_4"))
      (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "elementOfSingleton" (formula "30") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "limit_java_lang_Object__inv_free_" (formula "33"))
      (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "34"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "38") (ifseqformula "39"))
      (rule "true_left" (formula "38"))
      (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "34") (ifseqformula "38"))
      (rule "replaceKnownSelect_taclet00_8" (formula "34") (term "0,0,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "34") (term "0,0,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,1,0,0"))
      (rule "replaceKnownSelect_taclet00_12" (formula "34") (term "0,1,1,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "34") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "34") (term "0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "34") (term "0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "0,0,0,1,1"))
      (rule "replaceKnownSelect_taclet00_8" (formula "34") (term "0,0,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "0,0,0,1,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,0,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,0,1,0,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "34") (term "0,0,0,0,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,0,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,1,1,0,1,1,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,0,0,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,0,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_19" (formula "34") (term "0,1,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,0,1,0,0,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,1,0,1,0,1,1,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,1,0,1,1,1,1,1"))
      (rule "replaceKnownSelect_taclet00_10" (formula "34") (term "1,0,0,0,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,0,1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_19" (formula "34") (term "0,1,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,1,1,0,1,1,1"))
      (rule "replaceKnownSelect_taclet00_18" (formula "34") (term "1,1,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,0,0,1,0,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,1,0,1,0,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,1,0,1,1,1,1,1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "34") (term "1,0,0,0,0,1,1,1"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "polySimp_homoEq" (formula "37") (term "1,1,1"))
      (rule "polySimp_addComm0" (formula "37") (term "0,0,1,1,1"))
      (rule "polySimp_addComm1" (formula "37") (term "0,1,1,1"))
      (rule "inEqSimp_gtToGeq" (formula "36") (term "1"))
      (rule "mul_literals" (formula "36") (term "1,0,0,1"))
      (rule "add_literals" (formula "36") (term "0,0,1"))
      (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "26"))
      (rule "ssubsortDirect" (formula "34") (term "0"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "40"))
      (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
      (rule "add_literals" (formula "36") (term "0,0,1"))
      (rule "add_zero_left" (formula "36") (term "0,1"))
      (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "26"))
      (rule "ssubsortDirect" (formula "37") (term "0"))
       (builtin "One Step Simplification" (formula "37"))
      (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "26"))
      (rule "ssubsortDirect" (formula "36") (term "0"))
       (builtin "One Step Simplification" (formula "36"))
      (rule "polySimp_sepPosMonomial" (formula "37") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "37") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "37") (term "1,1,1"))
      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,1"))
      (rule "mul_literals" (formula "37") (term "0,1,1,1"))
      (rule "polySimp_elimOne" (formula "37") (term "1,1,1,1"))
      (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=java_lang_Object_packed_2"))
      (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "replaceKnownSelect_taclet00_20" (formula "34") (term "0,0,1,1,0,0"))
      (rule "elementOfInfiniteUnion" (formula "34") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "applyEqRigid" (formula "34") (term "1") (ifseqformula "35"))
      (rule "pullOutSelect" (formula "38") (term "1,0,1,0,1") (inst "selectSK=case_study_SortedListNode_tail_2"))
      (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "38"))
      (rule "applyEq" (formula "39") (term "0,0,0,0,1") (ifseqformula "38"))
      (rule "applyEq" (formula "39") (term "1,0,1,1") (ifseqformula "38"))
      (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "replaceKnownSelect_taclet00_20" (formula "38") (term "0,0,1,1,0,0"))
      (rule "elementOfInfiniteUnion" (formula "38") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "38"))
      (rule "pullOutSelect" (formula "34") (term "2,0") (inst "selectSK=java_lang_Object_packed_3"))
      (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "elementOfSingleton" (formula "34") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "pullOutSelect" (formula "40") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_4"))
      (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "elementOfInfiniteUnion" (formula "40") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "pullOutSelect" (formula "41") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_5"))
      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "24"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "elementOfInfiniteUnion" (formula "41") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=case_study_SortedListNode_tail_3"))
      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "elementOfSingleton" (formula "39") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "39"))
      (rule "pullOutSelect" (formula "41") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
      (rule "applyEq" (formula "43") (term "0,0,1,1,0,0") (ifseqformula "41"))
      (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "41"))
      (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_5"))
      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "elementOfSingleton" (formula "42") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "42"))
      (rule "pullOutSelect" (formula "44") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_6"))
      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "44"))
      (rule "elementOfSingleton" (formula "44") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "44"))
      (rule "assignmentAdditionInt" (formula "52") (term "1"))
       (builtin "One Step Simplification" (formula "52"))
      (rule "translateJavaAddInt" (formula "52") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "52") (term "0,1,0"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
       (builtin "One Step Simplification" (formula "52"))
      (rule "commute_and_2" (formula "32") (term "1"))
      (rule "commute_and" (formula "29") (term "0,0,0"))
      (rule "commute_and" (formula "31") (term "0,0,0"))
      (rule "commute_and" (formula "29") (term "1,0,0"))
      (rule "commute_and" (formula "31") (term "1,0,0"))
      (rule "commute_and" (formula "24") (term "0,0,1,0"))
      (rule "cnf_rightDist" (formula "46") (term "0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "48"))
      (rule "eqSymm" (formula "48"))
      (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "applyEqReverse" (formula "33") (term "0,1,0") (ifseqformula "49"))
      (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "49"))
      (rule "applyEqReverse" (formula "33") (term "1,1,0,1") (ifseqformula "49"))
      (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "49"))
      (rule "hideAuxiliaryEq" (formula "49"))
      (rule "polySimp_homoEq" (formula "33") (term "1,0,1"))
      (rule "polySimp_addComm1" (formula "33") (term "0,1,0,1"))
      (rule "polySimp_addAssoc" (formula "49") (term "1"))
      (rule "add_literals" (formula "49") (term "0,1"))
      (rule "add_zero_left" (formula "49") (term "1"))
      (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "48"))
      (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0"))
      (rule "mul_literals" (formula "33") (term "1,1,0"))
      (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0,1"))
      (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1"))
      (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1"))
      (rule "mul_literals" (formula "33") (term "0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "39"))
      (rule "mul_literals" (formula "39") (term "1"))
      (rule "commute_or" (formula "46") (term "1,0"))
      (rule "commute_or" (formula "46") (term "0,0"))
      (rule "commute_and" (formula "36") (term "1,0,0"))
      (rule "commute_and" (formula "36") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "35") (term "0,0"))
      (rule "commute_and" (formula "40") (term "1,0,0"))
      (rule "commute_and" (formula "40") (term "0,0,0"))
      (rule "commute_and" (formula "43") (term "0,0,0"))
      (rule "commute_and" (formula "45") (term "0,0,0"))
      (rule "commute_and" (formula "43") (term "1,0,0"))
      (rule "commute_and" (formula "45") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "cnf_rightDist" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "commute_or" (formula "34"))
      (rule "commute_or" (formula "37") (term "0,0,0"))
      (rule "commute_or" (formula "37") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "48"))
      (rule "andLeft" (formula "48"))
      (rule "cnf_rightDist" (formula "49"))
      (rule "andLeft" (formula "49"))
      (rule "commute_or" (formula "49"))
      (rule "cnf_rightDist" (formula "30") (term "0,0"))
      (rule "cnf_rightDist" (formula "32") (term "0,0"))
      (rule "cnf_rightDist" (formula "33"))
      (rule "andLeft" (formula "33"))
      (rule "commute_or" (formula "33"))
      (rule "cnf_rightDist" (formula "34"))
      (rule "andLeft" (formula "34"))
      (rule "commute_or" (formula "34"))
      (rule "cnf_rightDist" (formula "33"))
       (builtin "One Step Simplification" (formula "33"))
      (rule "commute_or" (formula "33"))
      (rule "commute_or" (formula "30") (term "0,0,0"))
      (rule "commute_or" (formula "32") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "50"))
      (rule "andLeft" (formula "50"))
      (rule "commute_or" (formula "50"))
      (rule "cnf_rightDist" (formula "51"))
      (rule "andLeft" (formula "51"))
      (rule "commute_or" (formula "51"))
      (rule "commute_or_2" (formula "52"))
      (rule "cnf_rightDist" (formula "50"))
      (rule "andLeft" (formula "50"))
      (rule "commute_or_2" (formula "51"))
      (rule "shift_paren_or" (formula "50"))
       (builtin "One Step Simplification" (formula "50"))
      (rule "true_left" (formula "50"))
      (rule "commute_or" (formula "50") (term "0"))
      (rule "cnf_rightDist" (formula "40") (term "0,0"))
      (rule "commute_or" (formula "40") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "44") (term "0,0"))
      (rule "commute_or" (formula "44") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "47") (term "0,0"))
      (rule "commute_or" (formula "47") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "49") (term "0,0"))
      (rule "commute_or" (formula "49") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "30") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "30"))
      (rule "cnf_rightDist" (formula "32") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "32"))
      (rule "commute_or_2" (formula "30") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "32") (term "1,1,0,0"))
      (rule "cnf_rightDist" (formula "40") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "40"))
      (rule "commute_or_2" (formula "40") (term "1,1,0,0"))
      (rule "cnf_rightDist" (formula "44") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "44"))
      (rule "commute_or_2" (formula "44") (term "1,1,0,0"))
      (rule "commute_or" (formula "30") (term "0,1,1,0,0"))
      (rule "commute_or" (formula "32") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "47") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "47"))
      (rule "commute_or_2" (formula "47") (term "1,1,0,0"))
      (rule "cnf_rightDist" (formula "49") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "49"))
      (rule "commute_or_2" (formula "49") (term "1,1,0,0"))
      (rule "commute_or" (formula "40") (term "0,1,1,0,0"))
      (rule "commute_or" (formula "44") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "30") (term "0,0,0"))
      (rule "commute_and_2" (formula "30") (term "0,0"))
      (rule "commute_or_2" (formula "30") (term "1,0,0"))
      (rule "commute_or" (formula "30") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "32") (term "0,0,0"))
      (rule "commute_and_2" (formula "32") (term "0,0"))
      (rule "commute_or_2" (formula "32") (term "1,0,0"))
      (rule "commute_or" (formula "32") (term "0,1,0,0"))
      (rule "commute_or" (formula "47") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "40") (term "0,0,0"))
      (rule "commute_and_2" (formula "40") (term "0,0"))
      (rule "commute_or_2" (formula "40") (term "1,0,0"))
      (rule "commute_or" (formula "40") (term "0,1,0,0"))
      (rule "commute_or" (formula "49") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "44") (term "0,0,0"))
      (rule "commute_and_2" (formula "44") (term "0,0"))
      (rule "commute_or_2" (formula "44") (term "1,0,0"))
      (rule "commute_or" (formula "44") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "47") (term "0,0,0"))
      (rule "commute_or_2" (formula "47") (term "1,0,0,0"))
      (rule "commute_and_2" (formula "47") (term "0,0"))
      (rule "commute_or" (formula "47") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "49") (term "0,0,0"))
      (rule "commute_and_2" (formula "49") (term "0,0"))
      (rule "commute_or_2" (formula "49") (term "1,0,0"))
      (rule "commute_or" (formula "49") (term "0,1,0,0"))
       (builtin "JML assume" (formula "59"))
       (builtin "One Step Simplification" (formula "59"))
      (rule "impRight" (formula "59"))
      (rule "Free_class_invariant_axiom_for_case_study_SortedListNode" (formula "1") (ifseqformula "58"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "polySimp_homoEq" (formula "4") (term "1,1,1"))
      (rule "polySimp_addComm0" (formula "4") (term "0,0,1,1,1"))
      (rule "polySimp_addComm1" (formula "4") (term "0,1,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,1,0,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,0,0,0,0,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,1,1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,0,1,0,1"))
      (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "2") (term "1"))
      (rule "dismissNonSelectedField" (formula "1") (term "1,0,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,1,1,0,1,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,0,0,1,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,0,0,0,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,0,0,1,0,1"))
      (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "4") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "4") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,0,1,0,1,1"))
      (rule "inEqSimp_gtToGeq" (formula "3") (term "1"))
      (rule "mul_literals" (formula "3") (term "1,0,0,1"))
      (rule "add_literals" (formula "3") (term "0,0,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "3") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "3") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "3") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
      (rule "dismissNonSelectedField" (formula "4") (term "1,1,0,1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,1"))
      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "4") (term "0"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "31"))
      (rule "ssubsortDirect" (formula "3") (term "0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_sepPosMonomial" (formula "4") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "4") (term "1,1,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1"))
      (rule "mul_literals" (formula "4") (term "0,1,1,1"))
      (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "pullOutSelect" (formula "2") (term "1") (inst "selectSK=case_study_SortedListNode_tail_4"))
      (rule "applyEq" (formula "5") (term "1,0,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1,1,0,1,1") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1,1,0,1,0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1,0,1,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1,1,1,1,1") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1,1,1,0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "5") (term "1,0,0,0,0,1") (ifseqformula "2"))
      (rule "simplifySelectOfStore" (formula "2"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "castDel" (formula "2") (term "1,0"))
      (rule "eqSymm" (formula "2") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
      (rule "replaceKnownSelect_taclet00_10" (formula "2") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_11" (formula "2") (term "2,0"))
      (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=case_study_SortedListNode_size_7"))
      (rule "simplifySelectOfStore" (formula "4"))
       (builtin "One Step Simplification" (formula "4"))
      (rule "castDel" (formula "4") (term "1,0"))
      (rule "eqSymm" (formula "4") (term "0,0"))
      (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "4") (term "2,0"))
      (rule "replaceKnownSelect_taclet00_12" (formula "4") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_13" (formula "4") (term "2,0"))
      (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "62"))
      (rule "pullOutSelect" (formula "6") (term "0,0,1,0") (inst "selectSK=case_study_SortedListNode_tail_5"))
      (rule "applyEq" (formula "7") (term "1,0,1,0,1") (ifseqformula "6"))
      (rule "applyEq" (formula "7") (term "0,0,0,0,1") (ifseqformula "6"))
      (rule "applyEq" (formula "7") (term "1,0,1,1") (ifseqformula "6"))
      (rule "simplifySelectOfStore" (formula "6"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "castDel" (formula "6") (term "1,0"))
      (rule "dismissNonSelectedField" (formula "6") (term "2,0"))
      (rule "pullOutSelect" (formula "7") (term "0,1,1,0") (inst "selectSK=case_study_SortedListNode_size_8"))
      (rule "applyEq" (formula "8") (term "1,1,1,1") (ifseqformula "7"))
      (rule "simplifySelectOfStore" (formula "7"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "castDel" (formula "7") (term "1,0"))
      (rule "dismissNonSelectedField" (formula "7") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "7") (term "2,0"))
      (rule "pullOutSelect" (formula "8") (term "1,1,0,1") (inst "selectSK=case_study_SortedListNode_head_6"))
      (rule "simplifySelectOfStore" (formula "8"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "castDel" (formula "8") (term "1,0"))
      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_4"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
      (rule "pullOutSelect" (formula "10") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_7"))
      (rule "simplifySelectOfStore" (formula "10"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "castDel" (formula "10") (term "1,0"))
      (rule "pullOutSelect" (formula "11") (term "0,1,1") (inst "selectSK=case_study_SortedListNode_size_9"))
      (rule "simplifySelectOfStore" (formula "11"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "castDel" (formula "11") (term "1,0"))
      (rule "dismissNonSelectedField" (formula "11") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "11") (term "2,0"))
      (rule "pullOutSelect" (formula "7") (term "2,0") (inst "selectSK=case_study_SortedListNode_tail_6"))
      (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "elementOfInfiniteUnion" (formula "7") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "pullOutSelect" (formula "9") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_10"))
      (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfInfiniteUnion" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "pullOutSelect" (formula "11") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_8"))
      (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "40"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "elementOfInfiniteUnion" (formula "11") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_lang_Object_packed_5"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__2"))
      (rule "applyEq" (formula "13") (term "0,0,1,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "9") (term "0,0,1,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0,0,1,1,0,0") (ifseqformula "2"))
      (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "39"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "pullOutSelect" (formula "15") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_9"))
      (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "elementOfInfiniteUnion" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "pullOutSelect" (formula "17") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_11"))
      (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "44"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "elementOfInfiniteUnion" (formula "17") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "17"))
      (rule "pullOutSelect" (formula "9") (term "2,0") (inst "selectSK=case_study_SortedListNode_tail_7"))
      (rule "simplifySelectOfAnonEQ" (formula "9") (ifseqformula "42"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "elementOfSingleton" (formula "9") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "pullOutSelect" (formula "12") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_12"))
      (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "43"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "elementOfSingleton" (formula "12") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "pullOutSelect" (formula "15") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_10"))
      (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "44"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "elementOfSingleton" (formula "15") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "15"))
      (rule "pullOutSelect" (formula "18") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
      (rule "applyEq" (formula "21") (term "0,0,1,1,0,0") (ifseqformula "18"))
      (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "45"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_11"))
      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "46"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "elementOfSingleton" (formula "19") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "pullOutSelect" (formula "22") (term "2,0") (inst "selectSK=case_study_SortedListNode_size_13"))
      (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "47"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "elementOfSingleton" (formula "22") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "shift_paren_and" (formula "55") (term "0,0,0"))
      (rule "shift_paren_and" (formula "57") (term "0,0,0"))
      (rule "shift_paren_and" (formula "65") (term "0,0,0"))
      (rule "shift_paren_and" (formula "69") (term "0,0,0"))
      (rule "shift_paren_and" (formula "72") (term "0,0,0"))
      (rule "shift_paren_and" (formula "74") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "25") (term "0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0,0,0") (ifseqformula "28"))
      (rule "cnf_rightDist" (formula "1") (term "0,0"))
      (rule "commute_or" (formula "25") (term "1,0"))
      (rule "commute_and" (formula "3") (term "1,0,0"))
      (rule "commute_and" (formula "16") (term "1,0,0"))
      (rule "commute_and" (formula "10") (term "1,0,0"))
      (rule "commute_and" (formula "13") (term "1,0,0"))
       (builtin "JML assume" (formula "85"))
       (builtin "One Step Simplification" (formula "85"))
      (rule "impRight" (formula "85"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0"))
      (rule "commute_or" (formula "1") (term "0,0,0"))
      (rule "commute_or" (formula "1") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "cnf_rightDist" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "commute_or" (formula "26"))
      (rule "commute_and" (formula "20") (term "1,0,0"))
      (rule "commute_and" (formula "23") (term "1,0,0"))
      (rule "cnf_rightDist" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "commute_or" (formula "25"))
      (rule "cnf_rightDist" (formula "26"))
      (rule "andLeft" (formula "26"))
      (rule "commute_or_2" (formula "27"))
      (rule "commute_or" (formula "26"))
      (rule "cnf_rightDist" (formula "25"))
      (rule "andLeft" (formula "25"))
      (rule "commute_or_2" (formula "26"))
      (rule "shift_paren_or" (formula "25"))
      (rule "commute_or" (formula "25") (term "0"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "true_left" (formula "25"))
      (rule "cnf_rightDist" (formula "3") (term "0,0"))
      (rule "commute_or" (formula "3") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "16") (term "0,0"))
      (rule "commute_or" (formula "16") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "10") (term "0,0"))
      (rule "commute_or" (formula "10") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "13") (term "0,0"))
      (rule "commute_or" (formula "13") (term "0,0,0"))
      (rule "commute_and" (formula "60") (term "0,0,0,0"))
      (rule "commute_and" (formula "62") (term "0,0,0,0"))
      (rule "commute_and" (formula "70") (term "0,0,0,0"))
      (rule "commute_and" (formula "74") (term "0,0,0,0"))
      (rule "commute_and" (formula "77") (term "0,0,0,0"))
      (rule "commute_and" (formula "79") (term "0,0,0,0"))
      (rule "cnf_rightDist" (formula "20") (term "0,0"))
      (rule "commute_or" (formula "20") (term "0,0,0"))
      (rule "cnf_rightDist" (formula "23") (term "0,0"))
      (rule "commute_or" (formula "23") (term "0,0,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0,0,0,0,0") (ifseqformula "54"))
      (rule "cnf_rightDist" (formula "3") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "commute_or_2" (formula "3") (term "1,1,0,0"))
      (rule "cnf_rightDist" (formula "16") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "commute_or_2" (formula "16") (term "1,1,0,0"))
      (rule "cnf_rightDist" (formula "10") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "commute_or_2" (formula "10") (term "1,1,0,0"))
      (rule "cnf_rightDist" (formula "13") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "commute_or_2" (formula "13") (term "1,1,0,0"))
      (rule "commute_or" (formula "3") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "20") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "commute_or_2" (formula "20") (term "1,1,0,0"))
      (rule "commute_or" (formula "16") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "23") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "commute_or_2" (formula "23") (term "1,1,0,0"))
      (rule "commute_or" (formula "10") (term "0,1,1,0,0"))
      (rule "commute_or" (formula "13") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "3") (term "0,0,0"))
      (rule "commute_and_2" (formula "3") (term "0,0"))
      (rule "commute_or_2" (formula "3") (term "1,0,0"))
      (rule "commute_or" (formula "3") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
      (rule "commute_or_2" (formula "16") (term "1,0,0,0"))
      (rule "commute_and_2" (formula "16") (term "0,0"))
      (rule "commute_or" (formula "16") (term "0,1,0,0"))
      (rule "commute_or" (formula "20") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "10") (term "0,0,0"))
      (rule "commute_and_2" (formula "10") (term "0,0"))
      (rule "commute_or_2" (formula "10") (term "1,0,0"))
      (rule "commute_or" (formula "10") (term "0,1,0,0"))
      (rule "commute_or" (formula "23") (term "0,1,1,0,0"))
      (rule "cnf_rightDist" (formula "13") (term "0,0,0"))
      (rule "commute_or_2" (formula "13") (term "1,0,0,0"))
      (rule "commute_and_2" (formula "13") (term "0,0"))
      (rule "commute_or" (formula "13") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "20") (term "0,0,0"))
      (rule "commute_or_2" (formula "20") (term "1,0,0,0"))
      (rule "commute_and_2" (formula "20") (term "0,0"))
      (rule "commute_or" (formula "20") (term "0,1,0,0"))
      (rule "cnf_rightDist" (formula "23") (term "0,0,0"))
      (rule "commute_or_2" (formula "23") (term "1,0,0,0"))
      (rule "commute_and_2" (formula "23") (term "0,0"))
      (rule "commute_or" (formula "23") (term "0,1,0,0"))
      (rule "shift_paren_and" (formula "3") (term "0,0,0"))
      (rule "commute_and" (formula "3") (term "0,0,0,0"))
      (rule "shift_paren_and" (formula "16") (term "0,0,0"))
      (rule "commute_and" (formula "16") (term "0,0,0,0"))
      (rule "shift_paren_and" (formula "10") (term "0,0,0"))
      (rule "commute_and" (formula "10") (term "0,0,0,0"))
      (rule "shift_paren_and" (formula "13") (term "0,0,0"))
      (rule "commute_and" (formula "13") (term "0,0,0,0"))
      (rule "shift_paren_and" (formula "20") (term "0,0,0"))
      (rule "commute_and" (formula "20") (term "0,0,0,0"))
      (rule "shift_paren_and" (formula "23") (term "0,0,0"))
      (rule "commute_and" (formula "23") (term "0,0,0,0"))
       (builtin "JML assume" (formula "90"))
       (builtin "One Step Simplification" (formula "90"))
      (rule "impRight" (formula "90"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0"))
      (rule "commute_and_2" (formula "61") (term "0,0"))
      (rule "commute_and_2" (formula "63") (term "0,0"))
      (rule "commute_and_2" (formula "71") (term "0,0"))
      (rule "commute_and_2" (formula "75") (term "0,0"))
      (rule "commute_and_2" (formula "78") (term "0,0"))
      (rule "commute_and_2" (formula "80") (term "0,0"))
      (rule "commute_and_2" (formula "3") (term "0,0"))
      (rule "commute_and_2" (formula "16") (term "0,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "74") (term "2,0") (ifseqformula "32"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "75") (term "1,0") (ifseqformula "51"))
      (rule "commute_and_2" (formula "10") (term "0,0"))
      (rule "commute_and_2" (formula "13") (term "0,0"))
      (rule "commute_and_2" (formula "20") (term "0,0"))
      (rule "commute_and_2" (formula "23") (term "0,0"))
       (builtin "JML assume" (formula "92"))
       (builtin "One Step Simplification" (formula "92"))
      (rule "impRight" (formula "92"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0"))
       (builtin "JML assume" (formula "92"))
       (builtin "One Step Simplification" (formula "92"))
      (rule "impRight" (formula "92"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "77") (term "1,0") (ifseqformula "54"))
       (builtin "JML assume" (formula "93"))
       (builtin "One Step Simplification" (formula "93"))
      (rule "impRight" (formula "93"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0"))
       (builtin "JML assume" (formula "93"))
       (builtin "One Step Simplification" (formula "93"))
      (rule "impRight" (formula "93"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0"))
      (rule "replaceKnownSelect_taclet00_8" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_9" (formula "1") (term "0"))
       (builtin "JML assume" (formula "93"))
       (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "91")))
      (rule "replaceKnownSelect_taclet00_34" (formula "93") (term "0,1,0,0"))
      (rule "replaceKnownSelect_taclet00_34" (formula "93") (term "0,1,1,0"))
      (rule "impRight" (formula "93"))
      (rule "polySimp_homoEq" (formula "1") (term "1,1"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0,1,1"))
      (rule "polySimp_addComm1" (formula "1") (term "0,1,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
      (rule "replaceKnownSelect_taclet00_33" (formula "1") (term "0,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,1"))
      (rule "replaceKnownSelect_taclet00_33" (formula "1") (term "0,0,0,0,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_33" (formula "1") (term "1,1,0,1,1"))
      (rule "replaceKnownSelect_taclet00_36" (formula "1") (term "1,0,1,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "1,0,1,0,1"))
      (rule "replaceKnownSelect_taclet00_33" (formula "1") (term "1,0,1,0,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "1,1,0,1"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,1,0,1"))
      (rule "replaceKnownSelect_taclet00_37" (formula "1") (term "0,1,0,1"))
      (rule "inEqSimp_commuteGeq" (formula "1") (term "1,0,1"))
      (rule "polySimp_sepPosMonomial" (formula "1") (term "1,1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "1") (term "1,1,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,1"))
      (rule "mul_literals" (formula "1") (term "0,1,1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1,1,1"))
      (rule "pullOutSelect" (formula "1") (term "0,1,0,1") (inst "selectSK=case_study_SortedListNode_head_12"))
      (rule "simplifySelectOfStore" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replaceKnownSelect_taclet00_15" (formula "1") (term "2,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "1") (term "2,0"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,1"))
      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "91"))
      (rule "cnf_rightDist" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "cnf_rightDist" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "commute_or" (formula "3"))
      (rule "cnf_rightDist" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "commute_or" (formula "2"))
      (rule "cnf_rightDist" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "commute_or" (formula "4"))
      (rule "commute_or" (formula "3"))
      (rule "cnf_rightDist" (formula "2"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "commute_or" (formula "2"))
       (builtin "JML assert" (formula "99"))
      (branch "Validity"
          (builtin "One Step Simplification" (formula "99"))
         (rule "inEqSimp_gtRight" (formula "99"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_contradEq3" (formula "73") (term "0") (ifseqformula "1"))
         (rule "add_zero_left" (formula "73") (term "0,0,0"))
         (rule "mul_literals" (formula "73") (term "0,0,0"))
         (rule "qeq_literals" (formula "73") (term "0,0"))
          (builtin "One Step Simplification" (formula "73"))
         (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "73"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "true_left" (formula "72"))
         (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "72"))
         (rule "polySimp_homoEq" (formula "57") (term "0"))
         (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
         (rule "mul_literals" (formula "57") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
         (rule "add_literals" (formula "57") (term "0,0,0"))
         (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "72"))
         (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
         (rule "add_literals" (formula "13") (term "0,3,0"))
         (rule "applyEq" (formula "74") (term "0,0") (ifseqformula "72"))
         (rule "polySimp_homoEq" (formula "74") (term "0"))
         (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
         (rule "mul_literals" (formula "74") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "74") (term "0,0"))
         (rule "add_literals" (formula "74") (term "0,0,0"))
         (rule "add_zero_left" (formula "74") (term "0,0"))
         (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "72"))
         (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
         (rule "add_literals" (formula "14") (term "0,1,0"))
         (rule "applyEq" (formula "51") (term "0") (ifseqformula "72"))
         (rule "inEqSimp_homoInEq1" (formula "51"))
         (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
         (rule "polySimp_rightDist" (formula "51") (term "1,0"))
         (rule "mul_literals" (formula "51") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "51") (term "0"))
         (rule "add_literals" (formula "51") (term "0,0"))
         (rule "add_zero_left" (formula "51") (term "0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "72"))
         (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "72"))
         (rule "polySimp_addAssoc" (formula "21") (term "1,0"))
         (rule "add_literals" (formula "21") (term "0,1,0"))
         (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "72"))
         (rule "polySimp_homoEq" (formula "55") (term "0"))
         (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
         (rule "mul_literals" (formula "55") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
         (rule "add_literals" (formula "55") (term "0,0,0"))
         (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "72"))
         (rule "polySimp_addAssoc" (formula "31") (term "1,0"))
         (rule "add_literals" (formula "31") (term "0,1,0"))
         (rule "applyEq" (formula "71") (term "0,1") (ifseqformula "72"))
         (rule "polySimp_homoEq" (formula "71") (term "1"))
         (rule "polySimp_mulComm0" (formula "71") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "71") (term "1,0,1"))
         (rule "mul_literals" (formula "71") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "71") (term "0,1"))
         (rule "add_literals" (formula "71") (term "0,0,1"))
         (rule "add_zero_left" (formula "71") (term "0,1"))
         (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "72"))
         (rule "polySimp_homoEq" (formula "53") (term "1"))
         (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
         (rule "mul_literals" (formula "53") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
         (rule "add_literals" (formula "53") (term "0,0,1"))
         (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "72"))
         (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "72"))
         (rule "polySimp_addAssoc" (formula "44") (term "1"))
         (rule "add_literals" (formula "44") (term "0,1"))
         (rule "add_zero_left" (formula "44") (term "1"))
         (rule "applyEqReverse" (formula "13") (term "1,3,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "93") (term "1,1,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "57") (term "0,1,0,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "14") (term "1,2,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "51") (term "0,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "71") (term "0,0,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "72") (term "1,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "94") (term "0,1,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "55") (term "0,1,0,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "53") (term "0,1,0,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "94") (term "1,1,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "90") (term "0,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "92") (term "0,1") (ifseqformula "44"))
         (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "44"))
         (rule "hideAuxiliaryEq" (formula "44"))
         (rule "polySimp_homoEq" (formula "92") (term "1"))
         (rule "polySimp_homoEq" (formula "71"))
         (rule "polySimp_homoEq" (formula "93") (term "1"))
         (rule "polySimp_addComm1" (formula "92") (term "0,1"))
         (rule "polySimp_addComm1" (formula "71") (term "0"))
         (rule "polySimp_addComm1" (formula "93") (term "0,1"))
         (rule "polySimp_sepNegMonomial" (formula "56") (term "0"))
         (rule "polySimp_mulLiterals" (formula "56") (term "0,0"))
         (rule "polySimp_elimOne" (formula "56") (term "0,0"))
         (rule "polySimp_invertEq" (formula "70") (term "1"))
         (rule "mul_literals" (formula "70") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "70") (term "0,1"))
         (rule "polySimp_elimOne" (formula "70") (term "0,1"))
         (rule "polySimp_sepNegMonomial" (formula "54") (term "0"))
         (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
         (rule "polySimp_elimOne" (formula "54") (term "0,0"))
         (rule "polySimp_sepNegMonomial" (formula "52") (term "1"))
         (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
         (rule "polySimp_elimOne" (formula "52") (term "0,1"))
         (rule "polySimp_invertEq" (formula "73") (term "0"))
         (rule "polySimp_mulLiterals" (formula "73") (term "0,0"))
         (rule "mul_literals" (formula "73") (term "1,0"))
         (rule "polySimp_elimOne" (formula "73") (term "0,0"))
         (rule "polySimp_sepPosMonomial" (formula "92") (term "1"))
         (rule "polySimp_mulComm0" (formula "92") (term "1,1"))
         (rule "polySimp_rightDist" (formula "92") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "92") (term "1,1,1"))
         (rule "mul_literals" (formula "92") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "92") (term "1,1,1"))
         (rule "polySimp_sepPosMonomial" (formula "71"))
         (rule "polySimp_mulComm0" (formula "71") (term "1"))
         (rule "polySimp_rightDist" (formula "71") (term "1"))
         (rule "polySimp_mulLiterals" (formula "71") (term "1,1"))
         (rule "mul_literals" (formula "71") (term "0,1"))
         (rule "polySimp_elimOne" (formula "71") (term "1,1"))
         (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "54") (term "0"))
         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
         (rule "mul_literals" (formula "54") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
         (rule "add_literals" (formula "54") (term "0,0,0"))
         (rule "applyEq" (formula "93") (term "0,1,0") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "93") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "93") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "93") (term "1,0,1,0"))
         (rule "mul_literals" (formula "93") (term "0,1,0,1,0"))
         (rule "polySimp_addAssoc" (formula "93") (term "0,1,0"))
         (rule "add_literals" (formula "93") (term "0,0,1,0"))
         (rule "applyEq" (formula "89") (term "0,1") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "89") (term "1"))
         (rule "polySimp_mulComm0" (formula "89") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "89") (term "1,0,1"))
         (rule "mul_literals" (formula "89") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "89") (term "0,1"))
         (rule "add_literals" (formula "89") (term "0,0,1"))
         (rule "applyEq" (formula "91") (term "0,1") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "91") (term "1"))
         (rule "polySimp_mulComm0" (formula "91") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "91") (term "1,0,1"))
         (rule "mul_literals" (formula "91") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "91") (term "0,1"))
         (rule "add_literals" (formula "91") (term "0,0,1"))
         (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "52") (term "1"))
         (rule "polySimp_mulComm0" (formula "52") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "52") (term "1,0,1"))
         (rule "mul_literals" (formula "52") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "52") (term "0,1"))
         (rule "add_literals" (formula "52") (term "0,0,1"))
         (rule "applyEq" (formula "93") (term "1,0,1") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "93") (term "0,1"))
         (rule "polySimp_addComm1" (formula "93") (term "0,0,1"))
         (rule "add_literals" (formula "93") (term "0,0,0,1"))
         (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "31") (term "1,0"))
         (rule "add_literals" (formula "31") (term "0,1,0"))
         (rule "applyEq" (formula "92") (term "0,1") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "92") (term "1"))
         (rule "polySimp_mulComm0" (formula "92") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "92") (term "1,0,1"))
         (rule "mul_literals" (formula "92") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "92") (term "0,1"))
         (rule "polySimp_addComm1" (formula "92") (term "0,0,1"))
         (rule "add_literals" (formula "92") (term "0,0,0,1"))
         (rule "applyEq" (formula "70") (term "0,1") (ifseqformula "71"))
         (rule "applyEq" (formula "73") (term "0,0") (ifseqformula "71"))
         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "21") (term "1,0"))
         (rule "add_literals" (formula "21") (term "0,1,0"))
         (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
         (rule "add_literals" (formula "14") (term "0,1,0"))
         (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
         (rule "add_literals" (formula "13") (term "0,3,0"))
         (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "71"))
         (rule "polySimp_homoEq" (formula "56") (term "0"))
         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
         (rule "mul_literals" (formula "56") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
         (rule "add_literals" (formula "56") (term "0,0,0"))
         (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "71"))
         (rule "polySimp_mulComm0" (formula "50") (term "0"))
         (rule "polySimp_rightDist" (formula "50") (term "0"))
         (rule "mul_literals" (formula "50") (term "0,0"))
         (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "71"))
         (rule "polySimp_addAssoc" (formula "14") (term "2,0"))
         (rule "add_literals" (formula "14") (term "0,2,0"))
         (rule "add_zero_left" (formula "14") (term "2,0"))
         (rule "applyEq" (formula "69") (term "1") (ifseqformula "71"))
         (rule "polySimp_sepNegMonomial" (formula "54") (term "0"))
         (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
         (rule "polySimp_elimOne" (formula "54") (term "0,0"))
         (rule "polySimp_sepNegMonomial" (formula "93") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "93") (term "0,1,0"))
         (rule "polySimp_elimOne" (formula "93") (term "0,1,0"))
         (rule "polySimp_sepNegMonomial" (formula "89") (term "1"))
         (rule "polySimp_mulLiterals" (formula "89") (term "0,1"))
         (rule "polySimp_elimOne" (formula "89") (term "0,1"))
         (rule "polySimp_sepNegMonomial" (formula "91") (term "1"))
         (rule "polySimp_mulLiterals" (formula "91") (term "0,1"))
         (rule "polySimp_elimOne" (formula "91") (term "0,1"))
         (rule "polySimp_sepNegMonomial" (formula "52") (term "1"))
         (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
         (rule "polySimp_elimOne" (formula "52") (term "0,1"))
         (rule "polySimp_sepPosMonomial" (formula "93") (term "1"))
         (rule "polySimp_mulComm0" (formula "93") (term "1,1"))
         (rule "polySimp_rightDist" (formula "93") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "93") (term "1,1,1"))
         (rule "mul_literals" (formula "93") (term "0,1,1"))
         (rule "polySimp_elimOne" (formula "93") (term "1,1,1"))
         (rule "polySimp_sepNegMonomial" (formula "92") (term "1"))
         (rule "polySimp_mulLiterals" (formula "92") (term "0,1"))
         (rule "polySimp_elimOne" (formula "92") (term "0,1"))
         (rule "polySimp_sepPosMonomial" (formula "70") (term "1"))
         (rule "mul_literals" (formula "70") (term "1,1"))
         (rule "polySimp_sepPosMonomial" (formula "73") (term "0"))
         (rule "mul_literals" (formula "73") (term "1,0"))
         (rule "polySimp_sepNegMonomial" (formula "56") (term "0"))
         (rule "polySimp_mulLiterals" (formula "56") (term "0,0"))
         (rule "polySimp_elimOne" (formula "56") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "50"))
         (rule "polySimp_mulLiterals" (formula "50") (term "0"))
         (rule "polySimp_elimOne" (formula "50") (term "0"))
         (rule "inEqSimp_contradEq3" (formula "89") (term "1") (ifseqformula "1"))
         (rule "add_zero_left" (formula "89") (term "0,0,1"))
         (rule "mul_literals" (formula "89") (term "0,0,1"))
         (rule "qeq_literals" (formula "89") (term "0,1"))
          (builtin "One Step Simplification" (formula "89"))
         (rule "inEqSimp_contradEq3" (formula "70") (term "1") (ifseqformula "1"))
         (rule "add_zero_left" (formula "70") (term "0,0,1"))
         (rule "mul_literals" (formula "70") (term "0,0,1"))
         (rule "qeq_literals" (formula "70") (term "0,1"))
          (builtin "One Step Simplification" (formula "70"))
         (rule "notLeft" (formula "70"))
         (rule "replace_known_right" (formula "82") (term "0,0,0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
         (rule "replace_known_right" (formula "75") (term "0,0,0,1,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
         (rule "replace_known_right" (formula "80") (term "0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "80"))
         (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "66"))
         (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "68"))
         (rule "replace_known_right" (formula "69") (term "0,0,0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
         (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "replace_known_right" (formula "67") (term "0,1,1,0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "95")) (ifInst ""  (formula "95")))
         (rule "replace_known_right" (formula "74") (term "0,0,0,0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "74"))
         (rule "replace_known_right" (formula "64") (term "0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "64"))
         (rule "replace_known_right" (formula "88") (term "1") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "88"))
         (rule "notLeft" (formula "88"))
         (rule "replace_known_right" (formula "87") (term "0,1,1,0,0,0,0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
         (rule "replace_known_right" (formula "83") (term "0,0,0,0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "83"))
         (rule "replace_known_right" (formula "85") (term "0,0,0,0,0,0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "94")) (ifInst ""  (formula "94")))
         (rule "replace_known_right" (formula "86") (term "0,0,0,0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "86"))
         (rule "replace_known_right" (formula "84") (term "0,0,0,0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "84"))
         (rule "replace_known_right" (formula "71") (term "0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "71"))
         (rule "replace_known_right" (formula "88") (term "1,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "94")))
         (rule "replace_known_right" (formula "90") (term "1,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "94")))
         (rule "replace_known_right" (formula "89") (term "0,0") (ifseqformula "95"))
          (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "88")))
         (rule "true_left" (formula "89"))
         (rule "replace_known_right" (formula "90") (term "0,0") (ifseqformula "94"))
          (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "89")))
         (rule "true_left" (formula "90"))
         (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "71"))
          (builtin "One Step Simplification" (formula "72"))
         (rule "true_left" (formula "72"))
         (rule "ifthenelse_negated" (formula "79") (term "0"))
         (rule "ifthenelse_negated" (formula "66") (term "0"))
         (rule "ifthenelse_negated" (formula "68") (term "0"))
         (rule "ifthenelse_negated" (formula "65") (term "0"))
         (rule "ifthenelse_negated" (formula "82") (term "0"))
         (rule "ifthenelse_negated" (formula "85") (term "0"))
         (rule "ifthenelse_negated" (formula "83") (term "0"))
         (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "88"))
         (rule "polySimp_homoEq" (formula "54") (term "0"))
         (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
         (rule "mul_literals" (formula "54") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
         (rule "add_literals" (formula "54") (term "0,0,0"))
         (rule "add_zero_left" (formula "54") (term "0,0"))
         (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "88"))
         (rule "polySimp_homoEq" (formula "52") (term "1"))
         (rule "polySimp_mulComm0" (formula "52") (term "1,0,1"))
         (rule "polySimp_rightDist" (formula "52") (term "1,0,1"))
         (rule "mul_literals" (formula "52") (term "0,1,0,1"))
         (rule "polySimp_addAssoc" (formula "52") (term "0,1"))
         (rule "add_literals" (formula "52") (term "0,0,1"))
         (rule "add_zero_left" (formula "52") (term "0,1"))
         (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
         (rule "add_literals" (formula "14") (term "0,1,0"))
         (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "21") (term "1,0"))
         (rule "add_literals" (formula "21") (term "0,1,0"))
         (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "88"))
         (rule "polySimp_homoEq" (formula "56") (term "0"))
         (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
         (rule "mul_literals" (formula "56") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
         (rule "add_literals" (formula "56") (term "0,0,0"))
         (rule "add_zero_left" (formula "56") (term "0,0"))
         (rule "applyEq" (formula "50") (term "0") (ifseqformula "88"))
         (rule "inEqSimp_homoInEq1" (formula "50"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
         (rule "polySimp_rightDist" (formula "50") (term "1,0"))
         (rule "mul_literals" (formula "50") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "50") (term "0"))
         (rule "add_literals" (formula "50") (term "0,0"))
         (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "31") (term "1,0"))
         (rule "add_literals" (formula "31") (term "0,1,0"))
         (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "88"))
         (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
         (rule "add_literals" (formula "13") (term "0,3,0"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "88"))
         (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "70") (term "1"))
         (rule "add_literals" (formula "70") (term "0,1"))
         (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "69") (term "1"))
         (rule "add_literals" (formula "69") (term "0,1"))
         (rule "applyEq" (formula "55") (term "1,1,1") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "55") (term "1,1"))
         (rule "add_literals" (formula "55") (term "0,1,1"))
         (rule "add_zero_left" (formula "55") (term "1,1"))
         (rule "applyEq" (formula "90") (term "1") (ifseqformula "88"))
         (rule "applyEq" (formula "56") (term "1,1,1") (ifseqformula "88"))
         (rule "polySimp_addAssoc" (formula "56") (term "1,1"))
         (rule "add_literals" (formula "56") (term "0,1,1"))
         (rule "add_zero_left" (formula "56") (term "1,1"))
         (rule "polySimp_invertEq" (formula "54") (term "0"))
         (rule "mul_literals" (formula "54") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
         (rule "polySimp_elimOne" (formula "54") (term "0,0"))
         (rule "polySimp_invertEq" (formula "52") (term "1"))
         (rule "mul_literals" (formula "52") (term "1,1"))
         (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
         (rule "polySimp_elimOne" (formula "52") (term "0,1"))
         (rule "polySimp_invertEq" (formula "56") (term "0"))
         (rule "mul_literals" (formula "56") (term "1,0"))
         (rule "polySimp_mulLiterals" (formula "56") (term "0,0"))
         (rule "polySimp_elimOne" (formula "56") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "50"))
         (rule "polySimp_mulLiterals" (formula "50") (term "0"))
         (rule "polySimp_elimOne" (formula "50") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradEq3" (formula "54") (term "0") (ifseqformula "1"))
         (rule "mul_literals" (formula "54") (term "1,0,0,0"))
         (rule "add_literals" (formula "54") (term "0,0,0"))
         (rule "qeq_literals" (formula "54") (term "0,0"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "54"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "true_left" (formula "53"))
         (rule "inEqSimp_contradEq3" (formula "55") (term "0") (ifseqformula "1"))
         (rule "mul_literals" (formula "55") (term "1,0,0,0"))
         (rule "add_literals" (formula "55") (term "0,0,0"))
         (rule "qeq_literals" (formula "55") (term "0,0"))
          (builtin "One Step Simplification" (formula "55"))
         (rule "applyEqReverse" (formula "31") (term "1,1,0") (ifseqformula "55"))
         (rule "applyEqReverse" (formula "89") (term "1,1") (ifseqformula "55"))
         (rule "applyEqReverse" (formula "13") (term "1,3,0") (ifseqformula "55"))
         (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "55"))
          (builtin "One Step Simplification" (formula "54"))
         (rule "true_left" (formula "54"))
         (rule "applyEqReverse" (formula "86") (term "1,1") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "68") (term "1,1") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "14") (term "1,2,0") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "67") (term "1,1") (ifseqformula "54"))
         (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "54"))
         (rule "hideAuxiliaryEq" (formula "54"))
         (rule "polySimp_homoEq" (formula "85"))
         (rule "polySimp_homoEq" (formula "67"))
         (rule "polySimp_addComm1" (formula "85") (term "0"))
         (rule "polySimp_addComm1" (formula "67") (term "0"))
         (rule "polySimp_sepPosMonomial" (formula "85"))
         (rule "polySimp_mulComm0" (formula "85") (term "1"))
         (rule "polySimp_rightDist" (formula "85") (term "1"))
         (rule "polySimp_mulLiterals" (formula "85") (term "1,1"))
         (rule "mul_literals" (formula "85") (term "0,1"))
         (rule "polySimp_elimOne" (formula "85") (term "1,1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "85"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
         (rule "add_literals" (formula "13") (term "0,3,0"))
         (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "85"))
         (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
         (rule "add_literals" (formula "14") (term "0,1,0"))
         (rule "applyEq" (formula "14") (term "1,2,0") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "14") (term "2,0"))
         (rule "add_literals" (formula "14") (term "0,2,0"))
         (rule "add_zero_left" (formula "14") (term "2,0"))
         (rule "applyEq" (formula "50") (term "0") (ifseqformula "85"))
         (rule "inEqSimp_homoInEq1" (formula "50"))
         (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
         (rule "polySimp_rightDist" (formula "50") (term "1,0"))
         (rule "mul_literals" (formula "50") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "50") (term "0"))
         (rule "add_literals" (formula "50") (term "0,0"))
         (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "31") (term "1,0"))
         (rule "add_literals" (formula "31") (term "0,1,0"))
         (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "21") (term "1,0"))
         (rule "add_literals" (formula "21") (term "0,1,0"))
         (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "85"))
         (rule "polySimp_addComm1" (formula "67") (term "0"))
         (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
         (rule "add_literals" (formula "67") (term "0,0,0"))
         (rule "applyEq" (formula "83") (term "1") (ifseqformula "85"))
         (rule "applyEq" (formula "87") (term "1,1") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "87") (term "1"))
         (rule "add_literals" (formula "87") (term "0,1"))
         (rule "add_zero_left" (formula "87") (term "1"))
         (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "85"))
         (rule "polySimp_addAssoc" (formula "66") (term "1"))
         (rule "add_literals" (formula "66") (term "0,1"))
         (rule "polySimp_sepPosMonomial" (formula "52") (term "1"))
         (rule "mul_literals" (formula "52") (term "1,1"))
         (rule "polySimp_sepNegMonomial" (formula "67"))
         (rule "polySimp_mulLiterals" (formula "67") (term "0"))
         (rule "polySimp_elimOne" (formula "67") (term "0"))
         (rule "inEqSimp_invertInEq1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "50"))
         (rule "polySimp_mulLiterals" (formula "50") (term "0"))
         (rule "polySimp_elimOne" (formula "50") (term "0"))
         (rule "inEqSimp_contradEq3" (formula "52") (term "1") (ifseqformula "1"))
         (rule "add_zero_left" (formula "52") (term "0,0,1"))
         (rule "mul_literals" (formula "52") (term "0,0,1"))
         (rule "qeq_literals" (formula "52") (term "0,1"))
          (builtin "One Step Simplification" (formula "52"))
         (rule "notLeft" (formula "52"))
         (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "87"))
          (builtin "One Step Simplification" (formula "51"))
         (rule "inEqSimp_contradInEq0" (formula "50") (ifseqformula "1"))
         (rule "qeq_literals" (formula "50") (term "0"))
          (builtin "One Step Simplification" (formula "50"))
         (rule "closeFalse" (formula "50"))
      )
      (branch "Usage"
          (builtin "One Step Simplification" (formula "99"))
         (rule "impRight" (formula "99"))
         (rule "inEqSimp_gtToGeq" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
          (builtin "Use Operation Contract" (formula "99") (newnames "heapBefore_havocPacked_0,exc_2,heapAfter_havocPacked_0,anon_heap_havocPacked_0") (contract "case_study.SortedListNode[java.lang.Object::havocPacked()].JML normal_behavior operation contract.0") (modality "diamond"))
         (branch "Post (havocPacked)"
             (builtin "One Step Simplification" (formula "98"))
             (builtin "One Step Simplification" (formula "101"))
            (rule "andLeft" (formula "98"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "2,0") (ifseqformula "38"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0") (ifseqformula "58"))
             (builtin "JML assume" (formula "104"))
             (builtin "One Step Simplification" (formula "104"))
            (rule "impRight" (formula "104"))
            (rule "emptyStatement" (formula "105") (term "1"))
            (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_lang_Object_packed_6"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "methodCallEmpty" (formula "105") (term "1"))
            (rule "tryEmpty" (formula "105") (term "1"))
            (rule "emptyModality" (formula "105") (term "1"))
             (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "104")))
            (rule "eqSymm" (formula "105") (term "1,0,0,1"))
            (rule "eqSymm" (formula "105") (term "0,1,0"))
            (rule "polySimp_homoEq" (formula "105") (term "0,1,1,0"))
            (rule "polySimp_addComm1" (formula "105") (term "0,0,1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "105") (term "0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "105") (term "1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "105") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "105") (term "0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "105") (term "1,1,0,1,1,0"))
            (rule "pullOutSelect" (formula "105") (term "0,1,0,1,0,0") (inst "selectSK=case_study_SortedListNode_head_13"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "102"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "inEqSimp_commuteGeq" (formula "106") (term "1,0,1,0,0"))
            (rule "pullOutSelect" (formula "106") (term "0,0,0,0,1,0,0") (inst "selectSK=case_study_SortedListNode_tail_8"))
            (rule "applyEq" (formula "107") (term "0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "107") (term "1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "103"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")))
            (rule "polySimp_homoEq" (formula "107") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "107") (term "0,1,1,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "107") (term "1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "107") (term "1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "107") (term "1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "107") (term "1,1,1,1,0,0"))
            (rule "mul_literals" (formula "107") (term "0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "107") (term "1,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "107") (term "0,1,0,0,0") (inst "selectSK=case_study_SortedListNode_size_14"))
            (rule "applyEq" (formula "108") (term "0,0,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "108") (term "0,1,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "104"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
            (rule "polySimp_homoEq" (formula "108") (term "0,1,1,0"))
            (rule "polySimp_homoEq" (formula "108") (term "1,1,0,0"))
            (rule "polySimp_addComm1" (formula "108") (term "0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "108") (term "0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "polySimp_sepPosMonomial" (formula "108") (term "0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "108") (term "1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "108") (term "1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "108") (term "1,1,0,1,1,0"))
            (rule "mul_literals" (formula "108") (term "0,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "108") (term "1,1,0,1,1,0"))
            (rule "polySimp_sepPosMonomial" (formula "108") (term "1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "108") (term "1,1,1,0,0"))
            (rule "polySimp_rightDist" (formula "108") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "108") (term "0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "108") (term "1,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "108") (term "1,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "108") (term "0,0,1,0") (inst "selectSK=case_study_SortedListNode_head_14"))
            (rule "applyEq" (formula "109") (term "0,1,0,1,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "105"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "108")))
            (rule "eqSymm" (formula "109") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_15"))
            (rule "simplifySelectOfStore" (formula "4"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "castDel" (formula "4") (term "1,0"))
            (rule "pullOutSelect" (formula "5") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=case_study_SortedListNode_tail_9"))
            (rule "simplifySelectOfStore" (formula "3"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "castDel" (formula "3") (term "0"))
            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__5"))
            (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "3"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "111")))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=case_study_SortedListNode_size_15"))
            (rule "simplifySelectOfStore" (formula "2"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "castDel" (formula "2") (term "0"))
            (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "pullOutSelect" (formula "112") (term "0,1,1,0,0") (inst "selectSK=case_study_SortedListNode_size_16"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "109"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0100_62" (formula "1") (term "0,0,1,0,0"))
            (rule "pullOutSelect" (formula "2") (term "1,0") (inst "selectSK=case_study_SortedListNode_head_16"))
            (rule "simplifySelectOfStore" (formula "2"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "castDel" (formula "2") (term "0"))
            (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "pullOutSelect" (formula "6") (term "2,0") (inst "selectSK=case_study_SortedListNode_head_17"))
            (rule "simplifySelectOfAnonEQ" (formula "6") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "elementOfInfiniteUnion" (formula "6") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "pullOutSelect" (formula "8") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__6"))
            (rule "applyEq" (formula "9") (term "2,0") (ifseqformula "8"))
            (rule "applyEq" (formula "6") (term "0,0,1,1,0,0") (ifseqformula "8"))
            (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "71"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "pullOutSelect" (formula "4") (term "0,0,0") (inst "selectSK=java_lang_Object_created__7"))
            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "4"))
            (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "72"))
             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "115")) (ifInst ""  (formula "53")))
            (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "52"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "51"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "1,0,0,1,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "114") (term "0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "4"))
            (rule "replaceKnownSelect_taclet00_34" (formula "1") (term "2,0"))
            (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "1,0,1,1,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "6") (term "1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "0,0,0,1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "114") (term "0,0,0,0,1,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "5") (term "1,2,0") (ifseqformula "4"))
            (rule "replaceKnownSelect_taclet00_14" (formula "5") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_16" (formula "5") (term "2,0"))
             (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "112")) (ifInst ""  (formula "48")) (ifInst ""  (formula "112")))
            (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "4"))
            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "49"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "112") (term "0,1,0,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "112") (term "1,0,1,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "110")) (ifInst ""  (formula "110")))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "48"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "111") (term "1,1,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "111") (term "1,1,0,1,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "eqSymm" (formula "2") (term "0,0"))
            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "108"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
            (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "107"))
             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
            (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "106"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
            (rule "applyEqReverse" (formula "108") (term "0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "41"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "107") (term "1,0,0,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "polySimp_addAssoc" (formula "106") (term "1,1,0,0"))
            (rule "add_literals" (formula "106") (term "0,1,1,0,0"))
            (rule "add_zero_left" (formula "106") (term "1,1,0,0"))
            (rule "eqSymm" (formula "106") (term "1,0,0"))
            (rule "polySimp_addAssoc" (formula "106") (term "1,0,1,0"))
            (rule "add_literals" (formula "106") (term "0,1,0,1,0"))
            (rule "add_zero_left" (formula "106") (term "1,0,1,0"))
             (builtin "One Step Simplification" (formula "106"))
            (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "99"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
            (rule "applyEqReverse" (formula "106") (term "1,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "105") (term "1,0") (ifseqformula "104"))
             (builtin "One Step Simplification" (formula "105"))
            (rule "ifthenelse_split" (formula "68") (term "0"))
            (branch " ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
               (rule "andLeft" (formula "68"))
               (rule "notLeft" (formula "69"))
               (rule "notLeft" (formula "68"))
               (rule "applyEqReverse" (formula "70") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "80") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "87") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "72") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "87") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "70") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "80") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "72") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
               (rule "hideAuxiliaryEq" (formula "68"))
               (rule "replace_known_right" (formula "86") (term "0,0,0,1,0,0") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "102")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "103")))
               (rule "applyEqReverse" (formula "87") (term "1,1,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "95") (term "0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "0,0,1,1,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "0,0,0,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "87") (term "1,2,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "1,0,1,1,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "92") (term "0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "1,1,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "0,0,1,1,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "90") (term "1,2,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "1,0,1,1,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "93") (term "0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "1,0,1,0,1,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "88") (term "1,1,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "1,0,1,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "88") (term "0,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "90") (term "1,1,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "1,0,1,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "1,1,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "88") (term "1,0,0,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "1,0,1,0,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "0,0,0,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "88") (term "1,2,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "87") (term "0,0,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "0,0,0,0,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "87") (term "1,0,0,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "91") (term "1,0,1,0,1,0,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "1,0,1,0,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "89") (term "0,0,0,0,1,0,0") (ifseqformula "86"))
               (rule "applyEqReverse" (formula "90") (term "1,0,0,1,0,0") (ifseqformula "86"))
               (rule "hideAuxiliaryEq" (formula "86"))
               (rule "replace_known_right" (formula "71") (term "0,1,1,0,0,0,0") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "101")) (ifInst ""  (formula "102")) (ifInst ""  (formula "101")) (ifInst ""  (formula "102")))
               (rule "applyEqReverse" (formula "95") (term "0,1,0") (ifseqformula "71"))
               (rule "applyEqReverse" (formula "73") (term "1,1,1") (ifseqformula "71"))
               (rule "applyEqReverse" (formula "94") (term "1,1,1") (ifseqformula "71"))
               (rule "applyEqReverse" (formula "91") (term "0,1") (ifseqformula "71"))
               (rule "applyEqReverse" (formula "95") (term "1,1,1") (ifseqformula "71"))
               (rule "applyEqReverse" (formula "93") (term "0,1") (ifseqformula "71"))
               (rule "applyEqReverse" (formula "74") (term "1,1,1") (ifseqformula "71"))
               (rule "hideAuxiliaryEq" (formula "71"))
               (rule "replace_known_right" (formula "83") (term "0,0,0,0") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "101")))
               (rule "hideAuxiliaryEq" (formula "83"))
               (rule "replace_known_right" (formula "78") (term "0,0,0,0,0,0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")))
               (rule "replace_known_right" (formula "69") (term "0,1,1,0,0,0,0") (ifseqformula "99"))
                (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")))
               (rule "applyEqReverse" (formula "74") (term "1,1") (ifseqformula "69"))
               (rule "applyEqReverse" (formula "75") (term "1,1") (ifseqformula "69"))
               (rule "applyEqReverse" (formula "91") (term "1,1,0") (ifseqformula "69"))
               (rule "applyEqReverse" (formula "90") (term "1,1") (ifseqformula "69"))
               (rule "hideAuxiliaryEq" (formula "69"))
               (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "98"))
                (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "99")))
               (rule "hideAuxiliaryEq" (formula "68"))
               (rule "replace_known_right" (formula "68") (term "0,0,0,0") (ifseqformula "97"))
                (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "98")))
               (rule "hideAuxiliaryEq" (formula "68"))
               (rule "replace_known_right" (formula "74") (term "0,1,1,0,0") (ifseqformula "97"))
                (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "96")))
               (rule "hideAuxiliaryEq" (formula "74"))
               (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "95"))
                (builtin "One Step Simplification" (formula "68"))
               (rule "true_left" (formula "68"))
               (rule "replace_known_right" (formula "68") (term "0") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "68"))
               (rule "replace_known_right" (formula "67") (term "0") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "67"))
               (rule "replace_known_right" (formula "70") (term "0") (ifseqformula "94"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "replace_known_left" (formula "71") (term "1") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "71"))
               (rule "true_left" (formula "71"))
               (rule "replace_known_left" (formula "69") (term "1") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "true_left" (formula "69"))
               (rule "replace_known_right" (formula "83") (term "1,0") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "83"))
               (rule "replace_known_right" (formula "86") (term "0,0") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "86"))
               (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "84"))
               (rule "replace_known_right" (formula "82") (term "1,0") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "82"))
               (rule "replace_known_right" (formula "85") (term "1,0") (ifseqformula "92"))
                (builtin "One Step Simplification" (formula "85"))
               (rule "polySimp_homoEq" (formula "68"))
               (rule "polySimp_homoEq" (formula "86") (term "1"))
               (rule "polySimp_homoEq" (formula "85") (term "1"))
               (rule "polySimp_addComm1" (formula "68") (term "0"))
               (rule "polySimp_addComm1" (formula "86") (term "0,1"))
               (rule "polySimp_addComm1" (formula "85") (term "0,1"))
               (rule "inEqSimp_commuteLeq" (formula "69"))
               (rule "inEqSimp_commuteGeq" (formula "83") (term "1"))
               (rule "inEqSimp_commuteGeq" (formula "84") (term "0"))
               (rule "polySimp_sepPosMonomial" (formula "68"))
               (rule "polySimp_mulComm0" (formula "68") (term "1"))
               (rule "polySimp_rightDist" (formula "68") (term "1"))
               (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
               (rule "mul_literals" (formula "68") (term "0,1"))
               (rule "polySimp_elimOne" (formula "68") (term "1,1"))
               (rule "applyEq" (formula "84") (term "0,1") (ifseqformula "68"))
               (rule "polySimp_homoEq" (formula "84") (term "1"))
               (rule "polySimp_mulComm0" (formula "84") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "84") (term "1,0,1"))
               (rule "mul_literals" (formula "84") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "84") (term "0,1"))
               (rule "add_literals" (formula "84") (term "0,0,1"))
               (rule "applyEq" (formula "86") (term "0,0") (ifseqformula "68"))
               (rule "polySimp_homoEq" (formula "86") (term "0"))
               (rule "polySimp_mulComm0" (formula "86") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "86") (term "1,0,0"))
               (rule "mul_literals" (formula "86") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "86") (term "0,0"))
               (rule "add_literals" (formula "86") (term "0,0,0"))
               (rule "applyEq" (formula "85") (term "1,0,1") (ifseqformula "68"))
               (rule "polySimp_addAssoc" (formula "85") (term "0,1"))
               (rule "polySimp_addComm1" (formula "85") (term "0,0,1"))
               (rule "add_literals" (formula "85") (term "0,0,0,1"))
               (rule "applyEq" (formula "82") (term "0,1") (ifseqformula "68"))
               (rule "polySimp_homoEq" (formula "82") (term "1"))
               (rule "polySimp_mulComm0" (formula "82") (term "1,0,1"))
               (rule "polySimp_rightDist" (formula "82") (term "1,0,1"))
               (rule "mul_literals" (formula "82") (term "0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "82") (term "0,1"))
               (rule "add_literals" (formula "82") (term "0,0,1"))
               (rule "applyEq" (formula "86") (term "1,0,1") (ifseqformula "68"))
               (rule "polySimp_addAssoc" (formula "86") (term "0,1"))
               (rule "polySimp_addComm1" (formula "86") (term "0,0,1"))
               (rule "add_literals" (formula "86") (term "0,0,0,1"))
               (rule "polySimp_sepNegMonomial" (formula "84") (term "1"))
               (rule "polySimp_mulLiterals" (formula "84") (term "0,1"))
               (rule "polySimp_elimOne" (formula "84") (term "0,1"))
               (rule "polySimp_sepNegMonomial" (formula "86") (term "0"))
               (rule "polySimp_mulLiterals" (formula "86") (term "0,0"))
               (rule "polySimp_elimOne" (formula "86") (term "0,0"))
               (rule "polySimp_sepPosMonomial" (formula "85") (term "1"))
               (rule "polySimp_mulComm0" (formula "85") (term "1,1"))
               (rule "polySimp_rightDist" (formula "85") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1"))
               (rule "mul_literals" (formula "85") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "85") (term "1,1,1"))
               (rule "polySimp_sepNegMonomial" (formula "82") (term "1"))
               (rule "polySimp_mulLiterals" (formula "82") (term "0,1"))
               (rule "polySimp_elimOne" (formula "82") (term "0,1"))
               (rule "polySimp_sepPosMonomial" (formula "86") (term "1"))
               (rule "polySimp_mulComm0" (formula "86") (term "1,1"))
               (rule "polySimp_rightDist" (formula "86") (term "1,1"))
               (rule "mul_literals" (formula "86") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "86") (term "1,1,1"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "self.tail = self TRUE"
                  (rule "applyEqReverse" (formula "97") (term "1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,1") (ifseqformula "14"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,1") (ifseqformula "14"))
                  (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "14"))
                  (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                  (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "14"))
                  (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "14"))
                  (rule "applyEqReverse" (formula "96") (term "1,1,0") (ifseqformula "14"))
                  (rule "hideAuxiliaryEq" (formula "14"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "25") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "15") (term "1,1,0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "15") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "eqSymm" (formula "20") (term "0,0"))
                  (rule "eqSymm" (formula "23") (term "0,0"))
                  (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "8") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "17") (term "0,0"))
                  (rule "replace_known_left" (formula "16") (term "1,0,1,0,0") (ifseqformula "36"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "91")) (ifInst ""  (formula "91")) (ifInst ""  (formula "36")) (ifInst ""  (formula "91")))
                  (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "replace_known_left" (formula "21") (term "1,0,1,0,0,0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "90")) (ifInst ""  (formula "90")) (ifInst ""  (formula "90")) (ifInst ""  (formula "35")))
                  (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "replace_known_right" (formula "10") (term "0,0,0,0,0,0") (ifseqformula "89"))
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "89")) (ifInst ""  (formula "34")) (ifInst ""  (formula "89")) (ifInst ""  (formula "34")) (ifInst ""  (formula "61")))
                  (rule "true_left" (formula "10"))
                  (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "88"))
                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "33")))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "replace_known_left" (formula "16") (term "1,0,1,0,0") (ifseqformula "32"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "87")) (ifInst ""  (formula "87")) (ifInst ""  (formula "32")) (ifInst ""  (formula "87")))
                  (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "replace_known_left" (formula "17") (term "0,1,0,0") (ifseqformula "31"))
                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "86")))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "85"))
                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "30")))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "replace_known_left" (formula "14") (term "0,1,0,0") (ifseqformula "29"))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "84")))
                  (rule "hideAuxiliaryEq" (formula "14"))
                  (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "83"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "28")))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "26") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "25") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "7") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "6") (term "0,1") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "22") (term "1,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "eqSymm" (formula "14") (term "0,0"))
                  (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "eqSymm" (formula "17") (term "0,0"))
                  (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "78")) (ifInst ""  (formula "23")) (ifInst ""  (formula "78")) (ifInst ""  (formula "23")))
                  (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "77")))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "77")) (ifInst ""  (formula "77")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")) (ifInst ""  (formula "77")) (ifInst ""  (formula "22")))
                  (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "20")))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "19")))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "69"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "3")))
                  (rule "true_left" (formula "11"))
                  (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "9"))
                  (rule "applyEqReverse" (formula "10") (term "0,1") (ifseqformula "9"))
                  (rule "hideAuxiliaryEq" (formula "9"))
                  (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "polySimp_homoEq" (formula "66") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "66") (term "0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,1,0"))
                  (rule "add_literals" (formula "66") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "66") (term "1,0,1,0"))
                  (rule "add_literals" (formula "66") (term "0,1,0"))
                  (rule "equal_literals" (formula "66") (term "1,0"))
                   (builtin "One Step Simplification" (formula "66"))
                  (rule "false_right" (formula "66"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "add_zero_left" (formula "4") (term "1"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "0,0"))
                  (rule "add_zero_left" (formula "7") (term "0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "equal_literals" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
               (branch "self.tail = self FALSE"
                  (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "97") (term "1,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "96") (term "1,1,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "96"))
                  (rule "applyEqReverse" (formula "2") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "5") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,1") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "89"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0,1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0,1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "eqSymm" (formula "7") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "14") (term "0,0"))
                  (rule "eqSymm" (formula "7") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "20") (term "0,0"))
                  (rule "eqSymm" (formula "17") (term "0,0"))
                  (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "88")))
                  (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "86"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "87")))
                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_right" (formula "12") (term "1,0,1,0,0,0") (ifseqformula "86"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "85")) (ifInst ""  (formula "85")) (ifInst ""  (formula "85")) (ifInst ""  (formula "86")))
                  (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "85"))
                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "86")))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,1,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,1,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0,1,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0,0,0") (ifseqformula "8"))
                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_right" (formula "15") (term "1,0,1,0,0,0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "83")) (ifInst ""  (formula "83")) (ifInst ""  (formula "83")) (ifInst ""  (formula "84")))
                  (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "replace_known_right" (formula "7") (term "0,0,0,0,0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "83")))
                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                  (rule "hideAuxiliaryEq" (formula "7"))
                  (rule "replace_known_right" (formula "11") (term "0,1,1,0,0,0,0") (ifseqformula "81"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "81")) (ifInst ""  (formula "82")) (ifInst ""  (formula "81")) (ifInst ""  (formula "82")))
                  (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_right" (formula "7") (term "0,0,0,0,0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "80")) (ifInst ""  (formula "81")) (ifInst ""  (formula "80")) (ifInst ""  (formula "81")) (ifInst ""  (formula "58")))
                  (rule "true_left" (formula "7"))
                  (rule "replace_known_right" (formula "11") (term "0,1,0,0") (ifseqformula "80"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "79")))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "78"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "77"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_left" (formula "5") (term "1") (ifseqformula "4"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "polySimp_homoEq" (formula "3"))
                  (rule "inEqSimp_commuteLeq" (formula "79") (term "0"))
                  (rule "replace_known_left" (formula "79") (term "0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "79"))
                  (rule "allRight" (formula "79") (inst "sk=f_0"))
                  (rule "allRight" (formula "79") (inst "sk=o_0"))
                  (rule "orRight" (formula "79"))
                  (rule "orRight" (formula "79"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "2"))
                  (rule "applyEq" (formula "7") (term "2,0") (ifseqformula "50"))
                  (rule "polySimp_sepPosMonomial" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "applyEq" (formula "72") (term "1,3,0,0") (ifseqformula "3"))
                  (rule "polySimp_addAssoc" (formula "72") (term "3,0,0"))
                  (rule "add_literals" (formula "72") (term "0,3,0,0"))
                  (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "3"))
                  (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                  (rule "add_literals" (formula "7") (term "0,1,0"))
                  (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "3"))
                  (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                  (rule "add_literals" (formula "15") (term "0,1,0"))
                  (rule "applyEq" (formula "7") (term "1,2,0") (ifseqformula "3"))
                  (rule "polySimp_addAssoc" (formula "7") (term "2,0"))
                  (rule "add_literals" (formula "7") (term "0,2,0"))
                  (rule "add_zero_left" (formula "7") (term "2,0"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "polySimp_homoEq" (formula "7") (term "1"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,1"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1"))
                  (rule "add_literals" (formula "7") (term "1,1,0,1"))
                  (rule "times_zero_1" (formula "7") (term "1,0,1"))
                  (rule "add_literals" (formula "7") (term "0,1"))
                  (rule "equal_literals" (formula "7") (term "1"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "73"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "7"))
                  (rule "applyEqReverse" (formula "17") (term "1,0") (ifseqformula "7"))
                  (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "7"))
                  (rule "hideAuxiliaryEq" (formula "7"))
                  (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "72"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,0,1,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,1,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,1,1,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,1,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "11") (term "1,2,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "11") (term "1,0,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "13") (term "1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "11") (term "0,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,1,1,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,1,1,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,1,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "8") (term "1,2,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,1,0,1,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "17") (term "0,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "6"))
                  (rule "hideAuxiliaryEq" (formula "6"))
                  (rule "eqSymm" (formula "12") (term "0,0"))
                  (rule "eqSymm" (formula "9") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_commuteGeq" (formula "14") (term "0"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                  (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "33") (term "1"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,1"))
                  (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "37") (term "0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0"))
                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "35") (term "0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0"))
                  (rule "applyEq" (formula "63") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "63") (term "1"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,0,1"))
                  (rule "mul_literals" (formula "63") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "63") (term "0,0,1"))
                  (rule "add_literals" (formula "63") (term "0,0,0,1"))
                  (rule "applyEq" (formula "4") (term "1,3,0") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "3,0"))
                  (rule "add_literals" (formula "4") (term "0,3,0"))
                  (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "64") (term "0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                  (rule "add_literals" (formula "64") (term "0,0,0"))
                  (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "60") (term "1"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,0,1"))
                  (rule "mul_literals" (formula "60") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,1"))
                  (rule "add_literals" (formula "60") (term "0,0,1"))
                  (rule "applyEq" (formula "62") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "62") (term "1"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,0,1"))
                  (rule "mul_literals" (formula "62") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,1"))
                  (rule "add_literals" (formula "62") (term "0,0,1"))
                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "31"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                  (rule "add_literals" (formula "31") (term "0,0"))
                  (rule "add_zero_left" (formula "31") (term "0"))
                  (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "64") (term "1"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,0,1"))
                  (rule "mul_literals" (formula "64") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "64") (term "0,0,1"))
                  (rule "add_literals" (formula "64") (term "0,0,0,1"))
                  (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "46") (term "1"))
                  (rule "add_literals" (formula "46") (term "0,1"))
                  (rule "add_zero_left" (formula "46") (term "1"))
                  (rule "applyEqReverse" (formula "62") (term "0,1,0,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "35") (term "0,1,0,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "63") (term "0,1,0,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "4") (term "1,3,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "15") (term "1,1,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "33") (term "0,1,0,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "11") (term "1,1,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "37") (term "0,1,0,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "12") (term "0,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "60") (term "0,1,0,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "68") (term "1,3,0,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "64") (term "0,1,0,0") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "64") (term "0,1,0,1") (ifseqformula "46"))
                  (rule "applyEqReverse" (formula "14") (term "0,1") (ifseqformula "46"))
                  (rule "hideAuxiliaryEq" (formula "46"))
                  (rule "polySimp_homoEq" (formula "15") (term "1"))
                  (rule "polySimp_homoEq" (formula "16") (term "1"))
                  (rule "polySimp_homoEq" (formula "2"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "applyEq" (formula "57") (term "0") (ifseqformula "9"))
                  (rule "applyEqReverse" (formula "58") (term "2,0") (ifseqformula "57"))
                  (rule "hideAuxiliaryEq" (formula "57"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "5"))
                  (rule "applyEqReverse" (formula "56") (term "0,0,0,1,0,0,0,0") (ifseqformula "54"))
                  (rule "applyEqReverse" (formula "56") (term "0,0,0,0,1,0,0,0") (ifseqformula "54"))
                  (rule "applyEqReverse" (formula "57") (term "0,0,0,1,0,0,0,0") (ifseqformula "54"))
                  (rule "applyEqReverse" (formula "57") (term "0,0,0,0,1,0,0,0") (ifseqformula "54"))
                  (rule "hideAuxiliaryEq" (formula "54"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "55") (term "2,0") (ifseqformula "54"))
                  (rule "hideAuxiliaryEq" (formula "54"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "7"))
                  (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "54"))
                  (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "54"))
                  (rule "hideAuxiliaryEq" (formula "54"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "10"))
                  (rule "applyEqReverse" (formula "58") (term "1,0,0,1") (ifseqformula "54"))
                  (rule "applyEqReverse" (formula "59") (term "1,0,0,1") (ifseqformula "54"))
                  (rule "hideAuxiliaryEq" (formula "54"))
                  (rule "polySimp_sepNegMonomial" (formula "56") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "56") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "35") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "33") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "37") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "54") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "54") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "54") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "57") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "15") (term "1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "16") (term "1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "applyEq" (formula "61") (term "1,3,0,0") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "61") (term "3,0,0"))
                  (rule "add_literals" (formula "61") (term "0,3,0,0"))
                  (rule "applyEq" (formula "12") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "12") (term "1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                  (rule "add_literals" (formula "12") (term "0,0,1"))
                  (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "57") (term "0"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                  (rule "add_literals" (formula "57") (term "0,0,0"))
                  (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "55") (term "1"))
                  (rule "polySimp_mulComm0" (formula "55") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "55") (term "1,0,1"))
                  (rule "mul_literals" (formula "55") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "55") (term "0,1"))
                  (rule "add_literals" (formula "55") (term "0,0,1"))
                  (rule "applyEq" (formula "56") (term "0,1,0,1") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "56") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "56") (term "1,0,1"))
                  (rule "mul_literals" (formula "56") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "56") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "56") (term "0,0,1"))
                  (rule "add_literals" (formula "56") (term "0,0,0,1"))
                  (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "14") (term "1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,1"))
                  (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "37") (term "0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0"))
                  (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "35") (term "0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0"))
                  (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "33") (term "1"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                  (rule "add_literals" (formula "33") (term "0,0,1"))
                  (rule "applyEq" (formula "57") (term "0,1,0,1") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "57") (term "1,0,1"))
                  (rule "mul_literals" (formula "57") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "57") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                  (rule "add_literals" (formula "57") (term "0,0,0,1"))
                  (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "16") (term "0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0"))
                  (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "16") (term "1"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "16") (term "0,0,1"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1"))
                  (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "2"))
                  (rule "polySimp_mulComm0" (formula "31") (term "0"))
                  (rule "polySimp_rightDist" (formula "31") (term "0"))
                  (rule "mul_literals" (formula "31") (term "0,0"))
                  (rule "applyEq" (formula "4") (term "1,3,0") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "4") (term "3,0"))
                  (rule "add_literals" (formula "4") (term "0,3,0"))
                  (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2"))
                  (rule "polySimp_homoEq" (formula "15") (term "1"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1"))
                  (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "2"))
                  (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
                  (rule "add_literals" (formula "11") (term "0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "12") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "57") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "57") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "55") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "55") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "56") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "56") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "14") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "37") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "35") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "33") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "57") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "16") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "16") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "15") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "15") (term "0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                  (rule "polySimp_elimOne" (formula "31") (term "0"))
                  (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "72"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__8"))
                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_lang_Object_created__9"))
                  (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "44"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "75")))
                  (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "73"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet100100_116" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100100_117" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "cut_direct" (formula "42") (term "0"))
                  (branch "CUT: self.tail.tail = null TRUE"
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "42"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "true_left" (formula "38"))
                     (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "40"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "true_left" (formula "41"))
                     (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "38"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "37"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "true_left" (formula "55"))
                     (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "36"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "35"))
                     (rule "polySimp_homoEq" (formula "54") (term "1"))
                     (rule "mul_literals" (formula "54") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                     (rule "add_literals" (formula "54") (term "0,0,1"))
                     (rule "add_zero_left" (formula "54") (term "0,1"))
                     (rule "applyEq" (formula "58") (term "1,3,0,0") (ifseqformula "35"))
                     (rule "add_literals" (formula "58") (term "3,0,0"))
                     (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "35"))
                     (rule "add_literals" (formula "10") (term "3,0"))
                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "35"))
                     (rule "qeq_literals" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "34"))
                     (rule "add_literals" (formula "5") (term "1,0"))
                     (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "34"))
                     (rule "polySimp_homoEq" (formula "19") (term "1"))
                     (rule "mul_literals" (formula "19") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                     (rule "add_literals" (formula "19") (term "0,0,1"))
                     (rule "add_zero_left" (formula "19") (term "0,1"))
                     (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "34"))
                     (rule "add_literals" (formula "17") (term "1,0"))
                     (rule "applyEq" (formula "55") (term "1") (ifseqformula "34"))
                     (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "34"))
                     (rule "add_literals" (formula "27") (term "1"))
                     (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "34"))
                     (rule "add_literals" (formula "8") (term "1"))
                     (rule "commute_and_2" (formula "65"))
                     (rule "ifthenelse_split" (formula "12") (term "0"))
                     (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                        (rule "andLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "11") (term "0,1,0,0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "59")))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0,0,0,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,1,0,0,0,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_right" (formula "11") (term "1,0,1,0,0,0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "57")))
                        (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_right" (formula "13") (term "1,0,1,0,0,0") (ifseqformula "56"))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")) (ifInst ""  (formula "57")) (ifInst ""  (formula "56")))
                        (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "replace_known_right" (formula "12") (term "0,1,0,0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "56")))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "48"))
                        (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "46"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "47") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_commuteLeq" (formula "47"))
                        (rule "applyEq" (formula "12") (term "2,0") (ifseqformula "48"))
                        (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "equal_literals" (formula "12") (term "1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "53"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "cut_direct" (formula "61") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                           (rule "typeEqDerived" (formula "61") (term "0,1,0") (ifseqformula "1"))
                           (rule "typeEqDerived" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "62"))
                            (builtin "One Step Simplification" (formula "61"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "false_right" (formula "62"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "4") (term "0,0,0"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEqRigid" (formula "6") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEqRigid" (formula "60") (term "1,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "57"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "56"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,0,0,1,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "2") (term "1,0,0,1,0,0,0"))
                           (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "eqSymm" (formula "56"))
                           (rule "applyEqRigid" (formula "55") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "55") (term "1,0,0"))
                           (rule "applyEq" (formula "55") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "castDel" (formula "55") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "false_right" (formula "55"))
                           (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "55"))
                           (rule "closeTrue" (formula "55"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "62"))
                           (rule "notRight" (formula "62"))
                           (rule "commute_and" (formula "6") (term "0,0"))
                           (rule "commute_and" (formula "5") (term "0,0"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "7") (term "0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0"))
                           (rule "commute_and" (formula "61") (term "0"))
                           (rule "commute_and_2" (formula "61"))
                           (rule "commute_and_2" (formula "7") (term "0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "cut_direct" (formula "42") (term "0"))
                           (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "cut_direct" (formula "43") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "63"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "49"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "4") (term "1,0,1,1,0,0"))
                                    (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "2,1,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "4") (term "1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "4") (term "0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "59"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "false_right" (formula "49"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "57") (term "0,1,0,1") (ifseqformula "2"))
                                    (rule "castDel" (formula "57") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "12"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "notRight" (formula "57"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "12"))
                                    (rule "eqSymm" (formula "58"))
                                    (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "close" (formula "57") (ifseqformula "1"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "52")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "49") (term "0"))
                                          (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "58") (term "1,0"))
                                          (rule "close" (formula "58") (ifseqformula "12"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "59") (term "1,0"))
                                             (rule "close" (formula "59") (ifseqformula "12"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "51") (term "0"))
                                                (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "58") (term "1,0"))
                                                (rule "close" (formula "58") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "cut_direct" (formula "53") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "52") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "61") (term "1,0"))
                                                   (rule "close" (formula "61") (ifseqformula "11"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "ineffectiveCast" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "60") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "62"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqRigid" (formula "50") (term "0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "61") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "replace_known_right" (formula "50") (term "0,1") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "closeTrue" (formula "59"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "62"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "50") (term "0,0,1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "49") (term "0,0,0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "49") (term "0,0,1,0"))
                                             (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "2"))
                                             (rule "castDel" (formula "58") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "notRight" (formula "58"))
                                             (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEqRigid" (formula "48") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "orRight" (formula "48"))
                                             (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "closeTrue" (formula "59"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "48") (term "0,0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "59") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "replace_known_right" (formula "48") (term "0,1") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "10"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "58") (term "1,0"))
                                                (rule "close" (formula "58") (ifseqformula "11"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "63") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "64"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "61") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "61"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "47"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "2,2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "3") (term "2,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "2"))
                                    (rule "castDel" (formula "58") (term "1,0"))
                                    (rule "close" (formula "58") (ifseqformula "12"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "52")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "50") (term "0"))
                                          (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "61") (term "1,0"))
                                          (rule "close" (formula "61") (ifseqformula "14"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "62") (term "1,0"))
                                             (rule "close" (formula "62") (ifseqformula "13"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "60") (term "1,0"))
                                                (rule "close" (formula "60") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "cut_direct" (formula "53") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "11"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "2"))
                                                   (rule "close" (formula "61") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "63"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "59") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "59") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "notRight" (formula "59"))
                                          (rule "replace_known_left" (formula "49") (term "0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "57") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "63"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "applyEq" (formula "62") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "62") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "notRight" (formula "62"))
                                             (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "49") (term "0,1,0,1,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "49") (term "1,0,1,1"))
                                                (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "61") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "notRight" (formula "61"))
                                                (rule "replace_known_left" (formula "50") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "57") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "64") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "cut_direct" (formula "43") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "64"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "53")) (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "63") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "63") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "63"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "applyEq" (formula "64") (term "2,1") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "64") (term "1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "49"))
                                    (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "castDel" (formula "3") (term "0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "2"))
                                    (rule "castDel" (formula "58") (term "1,0"))
                                    (rule "close" (formula "58") (ifseqformula "12"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "replace_known_right" (formula "64") (term "0,1,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "2")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "closeTrue" (formula "64"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "52") (term "0"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "62") (term "1,0"))
                                             (rule "close" (formula "62") (ifseqformula "13"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "48") (term "0"))
                                                (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "58") (term "1,0"))
                                                (rule "close" (formula "58") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "cut_direct" (formula "53") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "11"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "ineffectiveCast" (formula "49") (term "0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "60") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "63"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "49") (term "0,0,0,1,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "49") (term "0,0,1,0"))
                                          (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "eqSymm" (formula "60"))
                                          (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "false_right" (formula "48"))
                                          (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "2"))
                                          (rule "castDel" (formula "58") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "notRight" (formula "58"))
                                          (rule "applyEq" (formula "48") (term "0,1,0,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "48") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "notRight" (formula "48"))
                                          (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "closeTrue" (formula "59"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "63"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "48") (term "0,1,0,1,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "48") (term "1,0,1,1"))
                                             (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEqRigid" (formula "48") (term "0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEq" (formula "59") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "59") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "57") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "50") (term "0,0,1,0"))
                                                (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "62") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "replace_known_right" (formula "50") (term "0,1") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "10"))
                                                (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "false_right" (formula "47"))
                                                (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "false_right" (formula "47"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "2"))
                                                (rule "castDel" (formula "47") (term "1,0,1"))
                                                (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "58") (term "1,0"))
                                                (rule "close" (formula "58") (ifseqformula "11"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "64") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "65"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "65") (term "2,1") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "65") (term "1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "48"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "60") (term "0,1,0,1") (ifseqformula "2"))
                                    (rule "castDel" (formula "60") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "13"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "notRight" (formula "60"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                    (rule "eqSymm" (formula "59"))
                                    (rule "close" (formula "59") (ifseqformula "19"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "51"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "52")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "48") (term "0"))
                                          (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "11"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "closeTrue" (formula "61"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "48") (term "0"))
                                             (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "59") (term "1,0"))
                                             (rule "close" (formula "59") (ifseqformula "12"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "61") (term "1,0"))
                                                (rule "close" (formula "61") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "cut_direct" (formula "53") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "65") (term "1,0"))
                                                   (rule "close" (formula "65") (ifseqformula "12"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "ineffectiveCast" (formula "62") (term "1,0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "62") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "64"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "63") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "notRight" (formula "63"))
                                          (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "60"))
                                          (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "false_right" (formula "48"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "58") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "50") (term "0,0,1,0"))
                                             (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "63") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "notRight" (formula "63"))
                                             (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "65"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEqRigid" (formula "48") (term "1,0,0,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "48") (term "0,1,0,1,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "48") (term "1,0,1,1"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "60") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "51") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "61") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "47") (term "0,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "59") (term "1,0"))
                                                (rule "close" (formula "59") (ifseqformula "11"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "65") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,1,0,0,0,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0,0,0,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "57"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "cut_direct" (formula "64") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                           (rule "typeEqDerived" (formula "64") (term "0,1,0") (ifseqformula "1"))
                           (rule "typeEqDerived" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "65"))
                            (builtin "One Step Simplification" (formula "64"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "false_right" (formula "65"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,1,1,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "3") (term "1,0,1,1,0,0,0"))
                           (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "3") (term "1,0,0,1,0,0,0"))
                           (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "64") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "64") (term "1,0,0"))
                           (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "5") (term "0,0,0"))
                           (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "63"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "62") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "61") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "castDel" (formula "61") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "61"))
                           (rule "false_right" (formula "61"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2") (term "0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "eqSymm" (formula "58"))
                           (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "closeTrue" (formula "58"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "notRight" (formula "65"))
                           (rule "commute_and" (formula "6") (term "0,0"))
                           (rule "commute_and" (formula "5") (term "0,0"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "7") (term "0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0"))
                           (rule "commute_and" (formula "64") (term "0"))
                           (rule "commute_and_2" (formula "64"))
                           (rule "commute_or" (formula "14") (term "1,0,0,0"))
                           (rule "commute_or" (formula "12") (term "1,0,0,0"))
                           (rule "commute_and_2" (formula "7") (term "0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0"))
                           (rule "cut_direct" (formula "47") (term "0"))
                           (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "cut_direct" (formula "48") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "cut_direct" (formula "49") (term "0"))
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "replace_known_left" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_left" (formula "13") (term "0,0,1,0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "false_right" (formula "53"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "typeEqDerived" (formula "57") (term "0,0,0") (ifseqformula "3"))
                                       (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "57"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "applyEq" (formula "55") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "55") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "53") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "52") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "10"))
                                       (rule "eqSymm" (formula "52"))
                                       (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "2"))
                                       (rule "castDel" (formula "51") (term "1,0"))
                                       (rule "close" (formula "51") (ifseqformula "11"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "57") (term "0,1,0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "2")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "46") (term "0"))
                                             (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "10"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "false_right" (formula "45"))
                                             (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "51") (term "1,0"))
                                             (rule "close" (formula "51") (ifseqformula "11"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "11"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "56") (term "1,0"))
                                                (rule "close" (formula "56") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "48") (term "0"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "52") (term "1,0"))
                                                   (rule "close" (formula "52") (ifseqformula "12"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "59"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "49") (term "0"))
                                                      (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "55") (term "1,0"))
                                                      (rule "close" (formula "55") (ifseqformula "10"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "2"))
                                                      (rule "close" (formula "54") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "cut_direct" (formula "54") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "replace_known_left" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "54") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "12"))
                                                   (rule "eqSymm" (formula "55"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "52") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "52") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "56") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "replace_known_right" (formula "46") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "57") (term "0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "47") (term "1,0,1"))
                                                (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "12"))
                                                (rule "eqSymm" (formula "58"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "56") (term "1,0"))
                                                (rule "close" (formula "56") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "57") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEqRigid" (formula "48") (term "0,0,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "54") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "53") (term "1,0"))
                                                   (rule "close" (formula "53") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "57") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "57")))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "46") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "45") (term "0,1,0,1") (ifseqformula "2"))
                                                      (rule "castDel" (formula "45") (term "1,0,1"))
                                                      (rule "applyEqRigid" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "51") (term "0"))
                                                      (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "1"))
                                                      (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "9"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "51") (term "1,0"))
                                                      (rule "close" (formula "51") (ifseqformula "10"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "58") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "14") (term "0,0,0,0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                    (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "notRight" (formula "56"))
                                    (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                    (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "equal_literals" (formula "14") (term "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "63"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "64"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "false_right" (formula "53"))
                                       (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "61") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "notRight" (formula "61"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "49"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "56") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "53")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                             (rule "eqSymm" (formula "64"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "61") (term "1,0"))
                                             (rule "close" (formula "61") (ifseqformula "14"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "49") (term "0"))
                                                (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "57") (term "1,0"))
                                                (rule "close" (formula "57") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "62") (term "1,0"))
                                                   (rule "close" (formula "62") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "cut_direct" (formula "54") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "52") (term "0"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "62") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "61") (term "1,0"))
                                                      (rule "close" (formula "61") (ifseqformula "12"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "59") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "62"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "50") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "60") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "60") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "notRight" (formula "60"))
                                             (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "14"))
                                             (rule "eqSymm" (formula "61"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "closeTrue" (formula "57"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "cut_direct" (formula "60") (term "0,1,0"))
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "59") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "57") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "62") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "63") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "4"))
                                                   (rule "castDel" (formula "51") (term "1,0,1"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "closeTrue" (formula "63"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "63") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "63")))
                                                      (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "49") (term "0,1,0,1") (ifseqformula "4"))
                                                      (rule "castDel" (formula "49") (term "1,0,1"))
                                                      (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                      (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "59") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "58") (term "1,0"))
                                                      (rule "close" (formula "58") (ifseqformula "12"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "64") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "cut_direct" (formula "49") (term "0"))
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "replace_known_left" (formula "12") (term "0,0,0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_left" (formula "13") (term "0,0,0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "false_right" (formula "54"))
                                    (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "13") (term "0,0"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "typeEqDerived" (formula "58") (term "0,0,0") (ifseqformula "3"))
                                       (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "58"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "59") (term "2,1") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "59") (term "1") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "55") (term "0,1,0,1") (ifseqformula "2"))
                                       (rule "castDel" (formula "55") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "14"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "notRight" (formula "55"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "45"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "51") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "49")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "12"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "48") (term "0"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "56"))
                                             (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "52") (term "1,0"))
                                             (rule "close" (formula "52") (ifseqformula "11"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "false_right" (formula "46"))
                                                (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "false_right" (formula "46"))
                                                (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "46") (term "0"))
                                                (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "false_right" (formula "46"))
                                                (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "closeTrue" (formula "55"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "46") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "52") (term "1,0"))
                                                   (rule "close" (formula "52") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "49") (term "0"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "57") (term "1,0"))
                                                      (rule "close" (formula "57") (ifseqformula "11"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "ineffectiveCast" (formula "46") (term "0") (ifseqformula "2"))
                                                      (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "55") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "cut_direct" (formula "55") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "false_right" (formula "56"))
                                             (rule "replace_known_left" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "46") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "52") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "12"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "53") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "55") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "57") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "replace_known_right" (formula "46") (term "0,1,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "58") (term "0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "47") (term "1,0,1"))
                                                (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "56") (term "1,0"))
                                                (rule "close" (formula "56") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "58") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "10"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "closeTrue" (formula "58"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "58") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,0,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "54") (term "0"))
                                                      (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "45") (term "0,1,0,1") (ifseqformula "3"))
                                                      (rule "castDel" (formula "45") (term "1,0,1"))
                                                      (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "54") (term "1,0"))
                                                      (rule "close" (formula "54") (ifseqformula "11"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "59") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "14") (term "0,0,0,0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "14"))
                                    (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "notRight" (formula "57"))
                                    (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                    (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "equal_literals" (formula "14") (term "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "64"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "65"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "61") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "59") (term "2,1") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "59") (term "1") (ifseqformula "12"))
                                       (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "46"))
                                       (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "58") (term "1,0"))
                                       (rule "close" (formula "58") (ifseqformula "13"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "64") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "53")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "13"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "50") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "3") (term "1,0"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "58") (term "1,0"))
                                             (rule "close" (formula "58") (ifseqformula "13"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "52") (term "0"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "62") (term "1,0"))
                                                (rule "close" (formula "62") (ifseqformula "14"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "52") (term "0"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "60") (term "1,0"))
                                                   (rule "close" (formula "60") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "cut_direct" (formula "54") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "53") (term "0"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "64") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "63") (term "1,0"))
                                                      (rule "close" (formula "63") (ifseqformula "13"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "61") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "63"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "51") (term "0,0,0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "51") (term "0,0,1,0"))
                                             (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "62") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "replace_known_right" (formula "51") (term "0,1") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "cut_direct" (formula "61") (term "0,1,0"))
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "58") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "61") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "63") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEqRigid" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "60") (term "1,0"))
                                                   (rule "close" (formula "60") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")))
                                                      (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "59") (term "0"))
                                                      (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "59") (term "1,0"))
                                                      (rule "close" (formula "59") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "65") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "cut_direct" (formula "48") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "true_left" (formula "49"))
                                 (rule "cut_direct" (formula "49") (term "0"))
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "replace_known_left" (formula "14") (term "0,0,0,1,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "14"))
                                    (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_left" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "false_right" (formula "54"))
                                    (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "45"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "typeEqDerived" (formula "58") (term "0,0,0") (ifseqformula "3"))
                                       (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "58"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "8") (term "0,1,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                       (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "59"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "54") (term "0,1,0,1") (ifseqformula "3"))
                                       (rule "castDel" (formula "54") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "12"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "notRight" (formula "54"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "false_right" (formula "46"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "51") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "49")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "false_right" (formula "46"))
                                             (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "46") (term "0"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "closeTrue" (formula "55"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "false_right" (formula "46"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "47") (term "0"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "closeTrue" (formula "55"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "55") (term "1,0"))
                                                   (rule "close" (formula "55") (ifseqformula "12"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "60"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "49") (term "0"))
                                                      (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "56") (term "1,0"))
                                                      (rule "close" (formula "56") (ifseqformula "10"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "ineffectiveCast" (formula "46") (term "0") (ifseqformula "2"))
                                                      (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "55") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "cut_direct" (formula "55") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "false_right" (formula "56"))
                                             (rule "replace_known_left" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "55") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "11"))
                                                   (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "53") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "57") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "replace_known_right" (formula "46") (term "0,1,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "58") (term "0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "56") (term "1,0"))
                                                (rule "close" (formula "56") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "58") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "57") (term "1,0"))
                                                   (rule "close" (formula "57") (ifseqformula "12"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "58") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "47") (term "0,0,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "45") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "54") (term "0"))
                                                      (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "53") (term "1,0"))
                                                      (rule "close" (formula "53") (ifseqformula "10"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "59") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "notRight" (formula "57"))
                                    (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                    (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "equal_literals" (formula "14") (term "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "64"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "65"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "63") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "notRight" (formula "63"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "false_right" (formula "53"))
                                       (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "62") (term "2,1") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "62") (term "1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "49"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "57") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "64") (term "0,1,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "3")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "62") (term "1,0"))
                                             (rule "close" (formula "62") (ifseqformula "14"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "51") (term "0"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "closeTrue" (formula "62"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "59") (term "1,0"))
                                                   (rule "close" (formula "59") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "cut_direct" (formula "54") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "63") (term "1,0"))
                                                      (rule "close" (formula "63") (ifseqformula "12"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "60") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "63"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "50") (term "0,1,0,1,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "50") (term "1,0,1,1"))
                                             (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "61"))
                                             (rule "applyEq" (formula "48") (term "0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEq" (formula "59") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "59") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "57") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "cut_direct" (formula "61") (term "0,1,0"))
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "13"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "closeTrue" (formula "61"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "61") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "63") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "48") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "49") (term "0,0,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "60") (term "1,0"))
                                                   (rule "close" (formula "60") (ifseqformula "12"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "64"))
                                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "64")))
                                                      (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "4"))
                                                      (rule "castDel" (formula "51") (term "1,0,1"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "61") (term "1,0"))
                                                      (rule "close" (formula "61") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "65") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "cut_direct" (formula "49") (term "0"))
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "replace_known_left" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "49"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_left" (formula "13") (term "0,0,0,0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "48")) (ifInst ""  (formula "48")))
                                    (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "false_right" (formula "57"))
                                    (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "44"))
                                    (rule "eqSymm" (formula "12") (term "0,0"))
                                    (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "typeEqDerived" (formula "59") (term "0,0,0") (ifseqformula "3"))
                                       (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "59"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "eqSymm" (formula "60"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "3"))
                                       (rule "castDel" (formula "58") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "15"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "notRight" (formula "58"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "54") (term "2,1") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "54") (term "1") (ifseqformula "11"))
                                       (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "43"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "52") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "2")))
                                          (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "58") (term "1,0"))
                                             (rule "close" (formula "58") (ifseqformula "14"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "58") (term "1,0"))
                                                (rule "close" (formula "58") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "48") (term "0"))
                                                   (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "47") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "55") (term "1,0"))
                                                   (rule "close" (formula "55") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "49") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "57") (term "1,0"))
                                                      (rule "close" (formula "57") (ifseqformula "10"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "ineffectiveCast" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "typeEqDerived2" (formula "2") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "2"))
                                                      (rule "close" (formula "55") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "cut_direct" (formula "56") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "false_right" (formula "57"))
                                             (rule "replace_known_left" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "47") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "54") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "55") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "46") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "47") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "11"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "58") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "replace_known_right" (formula "46") (term "0,1,0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "59") (term "0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "10"))
                                                (rule "applyEqRigid" (formula "46") (term "0,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "56") (term "1,0"))
                                                (rule "close" (formula "56") (ifseqformula "11"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "59") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "47") (term "0,0,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "45") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "false_right" (formula "45"))
                                                   (rule "applyEqRigid" (formula "45") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "56") (term "1,0"))
                                                   (rule "close" (formula "56") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "59") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "57") (term "0"))
                                                      (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "10"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "46") (term "0,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "45") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "44"))
                                                      (rule "false_right" (formula "44"))
                                                      (rule "applyEqRigid" (formula "45") (term "0,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "54") (term "1,0"))
                                                      (rule "close" (formula "54") (ifseqformula "10"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "60") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "14") (term "0,0,1,0,0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")))
                                    (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                    (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "56")) (ifInst ""  (formula "56")))
                                    (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "12"))
                                    (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                    (rule "hideAuxiliaryEq" (formula "12"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notRight" (formula "58"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                    (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "equal_literals" (formula "14") (term "1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "inEqSimp_commuteLeq" (formula "13"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "65"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEq" (formula "5") (term "2,2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "5") (term "2,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,1,1,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "1,0,1,1,0,0"))
                                       (rule "applyEq" (formula "66") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "64") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "64") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "notRight" (formula "64"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "50"))
                                       (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "58") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "5"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "53")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                             (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "65"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "52") (term "0"))
                                             (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "63") (term "1,0"))
                                             (rule "close" (formula "63") (ifseqformula "16"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "50") (term "0"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "59") (term "1,0"))
                                                (rule "close" (formula "59") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "61") (term "1,0"))
                                                   (rule "close" (formula "61") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "cut_direct" (formula "54") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "13"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "61") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "51") (term "0,1,0,1,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "51") (term "1,0,1,1"))
                                             (rule "applyEq" (formula "51") (term "0,0,0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "51") (term "0,0,1,0"))
                                             (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "63") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "notRight" (formula "63"))
                                             (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "64"))
                                             (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "cut_direct" (formula "62") (term "0,1,0"))
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "closeTrue" (formula "62"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "60") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "64") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "65") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "62") (term "0"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "closeTrue" (formula "62"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "65") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                       (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "65")))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "66") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: self.tail.tail = null FALSE"
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "replace_known_right" (formula "38") (term "0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "69"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "41"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "39"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "true_left" (formula "40"))
                     (rule "commute_and_2" (formula "73"))
                     (rule "ifthenelse_split" (formula "12") (term "0"))
                     (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                        (rule "andLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "15") (term "1,0,1,0,0,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "65")))
                        (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "66"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "66")) (ifInst ""  (formula "66")) (ifInst ""  (formula "65")) (ifInst ""  (formula "65")))
                        (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "66"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "65")))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "applyEqReverse" (formula "58") (term "1,1,1") (ifseqformula "15"))
                        (rule "applyEqReverse" (formula "59") (term "1,1,1") (ifseqformula "15"))
                        (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
                        (rule "applyEqReverse" (formula "57") (term "1,0") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "56") (term "1,1") (ifseqformula "12"))
                        (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "14"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_right" (formula "12") (term "0,1,0,0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "63")))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "54") (term "0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "54"))
                        (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "52"))
                        (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "62"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "61"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "61"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "15"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "52"))
                         (builtin "One Step Simplification" (formula "53"))
                        (rule "true_left" (formula "53"))
                        (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "50"))
                         (builtin "One Step Simplification" (formula "51"))
                        (rule "true_left" (formula "51"))
                        (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "polySimp_homoEq" (formula "50"))
                        (rule "polySimp_addComm1" (formula "50") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "49"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "14"))
                        (rule "inEqSimp_homoInEq1" (formula "29"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "0,0"))
                        (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "54") (term "3,0,0"))
                        (rule "add_literals" (formula "54") (term "0,3,0,0"))
                        (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "10") (term "3,0"))
                        (rule "add_literals" (formula "10") (term "0,3,0"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0"))
                        (rule "add_literals" (formula "12") (term "0,1,0"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                        (rule "add_literals" (formula "5") (term "0,1,0"))
                        (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1"))
                        (rule "add_literals" (formula "22") (term "0,1"))
                        (rule "applyEq" (formula "52") (term "1") (ifseqformula "14"))
                        (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "32") (term "1"))
                        (rule "add_literals" (formula "32") (term "0,1"))
                        (rule "add_zero_left" (formula "32") (term "1"))
                        (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "10") (term "1,3,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "54") (term "1,3,0,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "14") (term "1,1") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "32"))
                        (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "32"))
                        (rule "hideAuxiliaryEq" (formula "32"))
                        (rule "polySimp_homoEq" (formula "22"))
                        (rule "polySimp_homoEq" (formula "14"))
                        (rule "polySimp_addComm1" (formula "22") (term "0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "49"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1"))
                        (rule "polySimp_rightDist" (formula "49") (term "1"))
                        (rule "mul_literals" (formula "49") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                        (rule "applyEq" (formula "12") (term "2,0") (ifseqformula "49"))
                        (rule "polySimp_sepPosMonomial" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                        (rule "applyEq" (formula "53") (term "1,3,0,0") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "53") (term "3,0,0"))
                        (rule "add_literals" (formula "53") (term "0,3,0,0"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                        (rule "add_literals" (formula "5") (term "0,1,0"))
                        (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0"))
                        (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "10") (term "3,0"))
                        (rule "add_literals" (formula "10") (term "0,3,0"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0"))
                        (rule "add_literals" (formula "12") (term "0,1,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "22"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0"))
                        (rule "add_literals" (formula "29") (term "0,0"))
                        (rule "add_zero_left" (formula "29") (term "0"))
                        (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "22"))
                        (rule "polySimp_addAssoc" (formula "51") (term "1"))
                        (rule "add_literals" (formula "51") (term "0,1"))
                        (rule "applyEq" (formula "12") (term "1") (ifseqformula "22"))
                        (rule "polySimp_sepPosMonomial" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1"))
                        (rule "mul_literals" (formula "14") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                        (rule "applyEq" (formula "53") (term "1,3,0,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "53") (term "3,0,0"))
                        (rule "add_literals" (formula "53") (term "0,3,0,0"))
                        (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0"))
                        (rule "add_literals" (formula "12") (term "0,1,0"))
                        (rule "applyEq" (formula "10") (term "1,3,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "10") (term "3,0"))
                        (rule "add_literals" (formula "10") (term "0,3,0"))
                        (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "14"))
                        (rule "polySimp_mulComm0" (formula "29") (term "0"))
                        (rule "polySimp_rightDist" (formula "29") (term "0"))
                        (rule "mul_literals" (formula "29") (term "0,0"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
                        (rule "add_literals" (formula "5") (term "0,1,0"))
                        (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1"))
                        (rule "add_literals" (formula "22") (term "0,1"))
                        (rule "applyEq" (formula "51") (term "1,1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "51") (term "1"))
                        (rule "add_literals" (formula "51") (term "0,1"))
                        (rule "add_zero_left" (formula "51") (term "1"))
                        (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1"))
                        (rule "add_literals" (formula "12") (term "0,1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "polySimp_homoEq" (formula "12") (term "1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,1"))
                        (rule "add_literals" (formula "12") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1"))
                        (rule "add_literals" (formula "12") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "12") (term "1,0,1"))
                        (rule "add_zero_right" (formula "12") (term "0,1"))
                        (rule "equal_literals" (formula "12") (term "1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "54"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0"))
                        (rule "cut_direct" (formula "63") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                           (rule "typeEqDerived" (formula "63") (term "0,1,0") (ifseqformula "1"))
                           (rule "typeEqDerived" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "64"))
                            (builtin "One Step Simplification" (formula "63"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "false_right" (formula "64"))
                           (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "6") (term "0,0,0"))
                           (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "4") (term "0,0,0"))
                           (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "58") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "58") (term "1,0,0"))
                           (rule "applyEq" (formula "58") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "castDel" (formula "58") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "58"))
                           (rule "false_right" (formula "58"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "2") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "eqSymm" (formula "57"))
                           (rule "applyEqRigid" (formula "57") (term "1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "57"))
                           (rule "closeTrue" (formula "57"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "64"))
                           (rule "notRight" (formula "64"))
                           (rule "commute_and" (formula "6") (term "0,0"))
                           (rule "commute_and" (formula "5") (term "0,0"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "63") (term "0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "7") (term "0,0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0"))
                           (rule "cut_direct" (formula "43") (term "0"))
                           (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                               (builtin "One Step Simplification" (formula "44"))
                              (rule "true_left" (formula "44"))
                              (rule "cut_direct" (formula "44") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "commute_and_2" (formula "63"))
                                 (rule "commute_and_2" (formula "7") (term "0,0"))
                                 (rule "commute_and_2" (formula "2") (term "0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "65"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "64") (term "0,1,0,1") (ifseqformula "3"))
                                    (rule "castDel" (formula "64") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "notRight" (formula "64"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "false_right" (formula "53"))
                                    (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "49"))
                                    (rule "eqSymm" (formula "62"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "close" (formula "58") (ifseqformula "1"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "53")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "false_right" (formula "54"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                          (rule "eqSymm" (formula "65"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "60") (term "1,0"))
                                          (rule "close" (formula "60") (ifseqformula "12"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "66"))
                                             (rule "applyEq" (formula "65") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "64") (term "1,0"))
                                             (rule "close" (formula "64") (ifseqformula "14"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "63") (term "1,0"))
                                                (rule "close" (formula "63") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "cut_direct" (formula "54") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "53") (term "0"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "12"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "62") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "64"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "49") (term "0,1,0,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "49") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "10"))
                                          (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "2"))
                                          (rule "castDel" (formula "59") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "notRight" (formula "48"))
                                          (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "closeTrue" (formula "60"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "49") (term "0,1,0,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "49") (term "1,0,0,1"))
                                             (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "60") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "notRight" (formula "48"))
                                             (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "closeTrue" (formula "60"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "51") (term "0,1,0,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "51") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "61") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "2"))
                                                (rule "polySimp_homoEq" (formula "60"))
                                                (rule "polySimp_pullOutFactor1b" (formula "60") (term "0"))
                                                (rule "add_literals" (formula "60") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "60") (term "1,0"))
                                                (rule "add_literals" (formula "60") (term "0"))
                                                (rule "equal_literals" (formula "60"))
                                                (rule "false_right" (formula "60"))
                                                (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "59") (term "1,0"))
                                                (rule "close" (formula "59") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "65") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "commute_and_2" (formula "64"))
                                 (rule "commute_and_2" (formula "7") (term "0,0"))
                                 (rule "commute_and_2" (formula "2") (term "0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "66"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "54")))
                                    (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "53") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "false_right" (formula "53"))
                                    (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "64") (term "0,0,0"))
                                    (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "50"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "2"))
                                    (rule "castDel" (formula "3") (term "0,0,0,0,0"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "59"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "61") (term "1") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "11"))
                                    (rule "close" (formula "61") (ifseqformula "19"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "53")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "53") (term "0"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "2") (term "1,0"))
                                          (rule "applyEq" (formula "66") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                          (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "60") (term "1,0"))
                                          (rule "close" (formula "60") (ifseqformula "12"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "false_right" (formula "53"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "63") (term "1,0"))
                                             (rule "close" (formula "63") (ifseqformula "13"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "63") (term "1,0"))
                                                (rule "close" (formula "63") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "68"))
                                                (rule "cut_direct" (formula "54") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "53") (term "0"))
                                                   (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "11"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "63") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "65"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "50") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "63") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "notRight" (formula "63"))
                                          (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "65"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "50") (term "0,0,1,0"))
                                             (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEqRigid" (formula "51") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "61") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "notRight" (formula "61"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                             (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "orRight" (formula "49"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "61") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "49") (term "0,1,0,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "49") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "10"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "61") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                                (rule "polySimp_homoEq" (formula "61"))
                                                (rule "polySimp_pullOutFactor1b" (formula "61") (term "0"))
                                                (rule "add_literals" (formula "61") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "61") (term "1,0"))
                                                (rule "add_literals" (formula "61") (term "0"))
                                                (rule "equal_literals" (formula "61"))
                                                (rule "false_right" (formula "61"))
                                                (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "notRight" (formula "48"))
                                                (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "60") (term "1,0"))
                                                (rule "close" (formula "60") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "66") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                               (builtin "One Step Simplification" (formula "43"))
                              (rule "cut_direct" (formula "44") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "commute_and_2" (formula "64"))
                                 (rule "commute_and_2" (formula "7") (term "0,0"))
                                 (rule "commute_and_2" (formula "2") (term "0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "66"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "54")) (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                    (rule "castDel" (formula "63") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "notRight" (formula "63"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "13"))
                                    (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "48"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "close" (formula "59") (ifseqformula "1"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "66") (term "0,1,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "2")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "12"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "closeTrue" (formula "66"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "false_right" (formula "53"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "12"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "61") (term "1,0"))
                                             (rule "close" (formula "61") (ifseqformula "12"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "68"))
                                                (rule "cut_direct" (formula "54") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "53") (term "0"))
                                                   (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "65") (term "1,0"))
                                                   (rule "close" (formula "65") (ifseqformula "12"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "ineffectiveCast" (formula "63") (term "1,0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "62") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "65"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "50") (term "1,0,1,1"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "50") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "63") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "notRight" (formula "63"))
                                          (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "13"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "closeTrue" (formula "63"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "65"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "50") (term "0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "12"))
                                             (rule "eqSymm" (formula "64"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "62"))
                                             (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "61") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "50") (term "0,0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "63") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "notRight" (formula "63"))
                                                (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "12"))
                                                (rule "polySimp_homoEq" (formula "64"))
                                                (rule "polySimp_pullOutFactor1b" (formula "64") (term "0"))
                                                (rule "add_literals" (formula "64") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "64") (term "1,0"))
                                                (rule "add_literals" (formula "64") (term "0"))
                                                (rule "equal_literals" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "59") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "66") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "commute_and_2" (formula "65"))
                                 (rule "commute_and_2" (formula "7") (term "0,0"))
                                 (rule "commute_and_2" (formula "2") (term "0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0"))
                                 (rule "commute_and" (formula "3") (term "0,0,0,0"))
                                 (rule "commute_and_2" (formula "3") (term "0,0,0"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "3"))
                                    (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "67"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_right" (formula "8") (term "0,1,0,0,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                    (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "50"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "applyEq" (formula "66") (term "0,1,0,1") (ifseqformula "3"))
                                    (rule "castDel" (formula "66") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "notRight" (formula "66"))
                                    (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "false_right" (formula "51"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "11"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "close" (formula "60") (ifseqformula "1"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "52"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "53")))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "67"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "false_right" (formula "54"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "51") (term "0"))
                                          (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "62") (term "1,0"))
                                          (rule "close" (formula "62") (ifseqformula "13"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "false_right" (formula "54"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "64") (term "1,0"))
                                             (rule "close" (formula "64") (ifseqformula "13"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "12"))
                                                (rule "polySimp_homoEq" (formula "66"))
                                                (rule "polySimp_pullOutFactor1b" (formula "66") (term "0"))
                                                (rule "add_literals" (formula "66") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "66") (term "1,0"))
                                                (rule "add_literals" (formula "66") (term "0"))
                                                (rule "equal_literals" (formula "66"))
                                                (rule "false_right" (formula "66"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "2") (term "1,0"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "69"))
                                                (rule "cut_direct" (formula "54") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "68") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "52") (term "0"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "65") (term "1,0"))
                                                   (rule "close" (formula "65") (ifseqformula "11"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "ineffectiveCast" (formula "50") (term "0") (ifseqformula "2"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "64") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "64") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "66"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "50") (term "1,0,1,1"))
                                          (rule "applyEqRigid" (formula "50") (term "0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "64") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "64") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "notRight" (formula "64"))
                                          (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                          (rule "eqSymm" (formula "65"))
                                          (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "closeTrue" (formula "62"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "3"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "66"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "50") (term "0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "false_right" (formula "49"))
                                             (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "closeTrue" (formula "64"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "3"))
                                                (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "63") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "notRight" (formula "63"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                (rule "polySimp_homoEq" (formula "62"))
                                                (rule "polySimp_pullOutFactor1b" (formula "62") (term "0"))
                                                (rule "add_literals" (formula "62") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "62") (term "1,0"))
                                                (rule "add_zero_right" (formula "62") (term "0"))
                                                (rule "equal_literals" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "67") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                        (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                        (rule "hideAuxiliaryEq" (formula "12"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0,0,0,0") (ifseqformula "11"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "applyEqReverse" (formula "12") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,1,0,0,0") (ifseqformula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "64"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "commute_or" (formula "55"))
                        (rule "cut_direct" (formula "72") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                           (rule "typeEqDerived" (formula "72") (term "0,1,0") (ifseqformula "1"))
                           (rule "typeEqDerived" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "73"))
                            (builtin "One Step Simplification" (formula "72"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "false_right" (formula "73"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "3") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "71") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "71") (term "1,0,0"))
                           (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "70"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "69"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "69") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "castDel" (formula "69") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "69"))
                           (rule "false_right" (formula "69"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "67"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "66"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "67")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "notRight" (formula "73"))
                           (rule "commute_or" (formula "18"))
                           (rule "commute_and" (formula "6") (term "0,0"))
                           (rule "commute_and" (formula "5") (term "0,0"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "72") (term "0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "7") (term "0,0,0"))
                           (rule "commute_and_2" (formula "72"))
                           (rule "commute_and" (formula "2") (term "0,0,0"))
                           (rule "commute_or" (formula "12") (term "1,0,0,0"))
                           (rule "commute_or" (formula "14") (term "1,0,0,0"))
                           (rule "commute_and_2" (formula "7") (term "0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "3") (term "0,0,0"))
                           (rule "cut_direct" (formula "20") (term "0"))
                           (branch "CUT: self.size = 2 TRUE"
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "20"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "19"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "18"))
                              (rule "polySimp_homoEq" (formula "17") (term "1"))
                              (rule "mul_literals" (formula "17") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                              (rule "add_literals" (formula "17") (term "0,0,1"))
                              (rule "add_zero_left" (formula "17") (term "0,1"))
                              (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "18"))
                              (rule "add_literals" (formula "6") (term "1,0"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "11") (term "1,3,0") (ifseqformula "18"))
                              (rule "add_literals" (formula "11") (term "3,0"))
                              (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "18"))
                              (rule "polySimp_homoEq" (formula "53") (term "1"))
                              (rule "mul_literals" (formula "53") (term "1,0,1"))
                              (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                              (rule "add_literals" (formula "53") (term "0,0,1"))
                              (rule "add_zero_left" (formula "53") (term "0,1"))
                              (rule "applyEq" (formula "57") (term "1,3,0,0") (ifseqformula "18"))
                              (rule "add_literals" (formula "57") (term "3,0,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "18"))
                              (rule "add_literals" (formula "15") (term "1,0"))
                              (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "18"))
                              (rule "add_literals" (formula "26") (term "1"))
                              (rule "applyEq" (formula "55") (term "1") (ifseqformula "18"))
                              (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "18"))
                              (rule "add_literals" (formula "35") (term "1"))
                              (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "18"))
                              (rule "add_literals" (formula "9") (term "1"))
                              (rule "cut_direct" (formula "49") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                  (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "cut_direct" (formula "50") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "51") (term "0"))
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "replace_known_left" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_left" (formula "13") (term "0,0,1,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "13"))
                                       (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "false_right" (formula "53"))
                                       (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "47"))
                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "12") (term "0,0"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "60") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "60"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "52")))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "eqSymm" (formula "61"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "59") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "59") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "notRight" (formula "59"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "48"))
                                          (rule "eqSymm" (formula "60"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "11"))
                                          (rule "eqSymm" (formula "54"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "53") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "cut_direct" (formula "57") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "false_right" (formula "58"))
                                             (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "48") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "55") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "closeTrue" (formula "54"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "55") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "59") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "14"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "59") (term "1,0"))
                                                   (rule "close" (formula "59") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "56") (term "1,0"))
                                                      (rule "close" (formula "56") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "54") (term "0"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "54") (term "1,0"))
                                                         (rule "close" (formula "54") (ifseqformula "12"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "62"))
                                                         (rule "cut_direct" (formula "51") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "59") (term "1,0"))
                                                            (rule "close" (formula "59") (ifseqformula "11"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "ineffectiveCast" (formula "57") (term "1,0") (ifseqformula "2"))
                                                            (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "57") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "60") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "47") (term "0,0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "1"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "56") (term "1,0"))
                                                   (rule "close" (formula "56") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "60") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "48") (term "0,0,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "57") (term "1,0"))
                                                      (rule "close" (formula "57") (ifseqformula "12"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "typeEqDerived" (formula "60") (term "0,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "60"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                                         (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "11"))
                                                         (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "56") (term "1,0"))
                                                         (rule "close" (formula "56") (ifseqformula "12"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "61") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_right" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                       (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "notRight" (formula "58"))
                                       (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_commuteLeq" (formula "51"))
                                       (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "52"))
                                       (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "equal_literals" (formula "14") (term "1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                          (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "66"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "56")))
                                          (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "eqSymm" (formula "67"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "4"))
                                          (rule "castDel" (formula "63") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "notRight" (formula "63"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "49"))
                                          (rule "eqSymm" (formula "61"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "cut_direct" (formula "63") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "false_right" (formula "64"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "15"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "62"))
                                                (rule "applyEqRigid" (formula "51") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEqRigid" (formula "54") (term "0,0,1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "61") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                                      (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "59") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "65") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "66"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                   (rule "closeTrue" (formula "66"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "15"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "15"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "cut_direct" (formula "55") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "66") (term "1,0"))
                                                            (rule "close" (formula "66") (ifseqformula "14"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "ineffectiveCast" (formula "62") (term "0") (ifseqformula "3"))
                                                            (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqRigid" (formula "62") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "62") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "66") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "66")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "65") (term "1,0"))
                                                   (rule "close" (formula "65") (ifseqformula "16"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "66") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "66")))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "4"))
                                                      (rule "castDel" (formula "51") (term "1,0,1"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "51") (term "0,0,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "61") (term "0"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "61") (term "1,0"))
                                                      (rule "close" (formula "61") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "typeEqDerived" (formula "66") (term "0,0") (ifseqformula "4"))
                                                         (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "66"))
                                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "66")))
                                                         (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "62") (term "1,0"))
                                                         (rule "close" (formula "62") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "67") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "51") (term "0"))
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "replace_known_left" (formula "14") (term "0,0,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "53") (term "0,1") (ifseqformula "14"))
                                       (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "replace_known_left" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "false_right" (formula "57"))
                                       (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "47"))
                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "12") (term "0,0"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "61") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "61"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "52")) (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "14"))
                                          (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "47"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "56") (term "0,1,0,1") (ifseqformula "2"))
                                          (rule "castDel" (formula "56") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "notRight" (formula "56"))
                                          (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "55") (term "1,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "54") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "cut_direct" (formula "58") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "14"))
                                                (rule "eqSymm" (formula "60"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "58") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "59") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "57") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "49") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "56") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "60") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "58") (term "1,0"))
                                                   (rule "close" (formula "58") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "13"))
                                                      (rule "eqSymm" (formula "63"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "61") (term "1,0"))
                                                      (rule "close" (formula "61") (ifseqformula "14"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "58") (term "1,0"))
                                                         (rule "close" (formula "58") (ifseqformula "13"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "cut_direct" (formula "51") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "60") (term "0"))
                                                            (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "60") (term "1,0"))
                                                            (rule "close" (formula "60") (ifseqformula "12"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "ineffectiveCast" (formula "57") (term "0") (ifseqformula "2"))
                                                            (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "57") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "61") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                                   (rule "eqSymm" (formula "62"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "59") (term "1,0"))
                                                   (rule "close" (formula "59") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "61") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "59") (term "1,0"))
                                                      (rule "close" (formula "59") (ifseqformula "12"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "typeEqDerived" (formula "61") (term "0,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                         (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "58") (term "0"))
                                                         (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "castDel" (formula "55") (term "1,0"))
                                                         (rule "close" (formula "55") (ifseqformula "11"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "62") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_right" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                       (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "notRight" (formula "59"))
                                       (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "51"))
                                       (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "52"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "equal_literals" (formula "14") (term "1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "4"))
                                          (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "67"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "56")))
                                          (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "eqSymm" (formula "68"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "52"))
                                          (rule "eqSymm" (formula "68"))
                                          (rule "applyEqRigid" (formula "5") (term "2,2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "5") (term "2,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "applyEqRigid" (formula "5") (term "2,1,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "5") (term "1,0") (ifseqformula "35"))
                                          (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "65") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "64") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "4") (term "1,0,1,0,0"))
                                          (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "4") (term "0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "61") (term "1,0"))
                                          (rule "close" (formula "61") (ifseqformula "14"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "cut_direct" (formula "64") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "false_right" (formula "65"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "15"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "62") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "62") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "66") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "closeTrue" (formula "65"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "15"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "67") (term "1,0"))
                                                      (rule "close" (formula "67") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "3") (term "1,0"))
                                                         (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "62") (term "0"))
                                                         (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "62") (term "1,0"))
                                                         (rule "close" (formula "62") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "cut_direct" (formula "55") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "66") (term "0"))
                                                            (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "66") (term "1,0"))
                                                            (rule "close" (formula "66") (ifseqformula "14"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "ineffectiveCast" (formula "63") (term "0") (ifseqformula "3"))
                                                            (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqRigid" (formula "64") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "64") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "66") (term "1,0"))
                                                      (rule "close" (formula "66") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                         (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                         (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "64") (term "0"))
                                                         (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "64") (term "1,0"))
                                                         (rule "close" (formula "64") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "68") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "cut_direct" (formula "50") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "cut_direct" (formula "51") (term "0"))
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "replace_known_left" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_left" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "13"))
                                       (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "false_right" (formula "58"))
                                       (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "47"))
                                       (rule "eqSymm" (formula "13") (term "0,0"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "12") (term "0,0"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "61") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "61"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "52")))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "eqSymm" (formula "62"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "59") (term "0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "57") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "notRight" (formula "57"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "57") (term "2,1") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "57") (term "1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "45"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "54") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "cut_direct" (formula "58") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "56") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "49") (term "0,0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "12"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "closeTrue" (formula "58"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "55") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "60") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "58") (term "1,0"))
                                                   (rule "close" (formula "58") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "58") (term "1,0"))
                                                      (rule "close" (formula "58") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "59") (term "0"))
                                                         (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "59") (term "1,0"))
                                                         (rule "close" (formula "59") (ifseqformula "12"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "cut_direct" (formula "51") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "61") (term "1,0"))
                                                            (rule "close" (formula "61") (ifseqformula "12"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "ineffectiveCast" (formula "57") (term "0") (ifseqformula "2"))
                                                            (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "61") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "48") (term "0,1,0,1") (ifseqformula "3"))
                                                   (rule "castDel" (formula "48") (term "1,0,1"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "57") (term "1,0"))
                                                   (rule "close" (formula "57") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "61") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "47") (term "0,0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "56") (term "0"))
                                                      (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "56") (term "1,0"))
                                                      (rule "close" (formula "56") (ifseqformula "11"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "typeEqDerived" (formula "61") (term "0,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                         (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "48") (term "0,1,0,1") (ifseqformula "3"))
                                                         (rule "castDel" (formula "48") (term "1,0,1"))
                                                         (rule "applyEq" (formula "60") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "castDel" (formula "58") (term "1,0"))
                                                         (rule "close" (formula "58") (ifseqformula "11"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "62") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "14") (term "0,0,1,0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                       (rule "applyEqReverse" (formula "53") (term "0,1") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "notRight" (formula "59"))
                                       (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "inEqSimp_commuteLeq" (formula "51"))
                                       (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "52"))
                                       (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "equal_literals" (formula "14") (term "1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "4"))
                                          (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "67"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
                                          (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "eqSymm" (formula "68"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEq" (formula "67") (term "0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "64") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "50"))
                                          (rule "eqSymm" (formula "64"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "61") (term "1,0"))
                                          (rule "close" (formula "61") (ifseqformula "14"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "cut_direct" (formula "64") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "false_right" (formula "65"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "61") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "66") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEqRigid" (formula "69") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "16"))
                                                   (rule "eqSymm" (formula "69"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "66") (term "1,0"))
                                                   (rule "close" (formula "66") (ifseqformula "16"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "64") (term "1,0"))
                                                      (rule "close" (formula "64") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "14"))
                                                         (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "3") (term "1,0"))
                                                         (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "61") (term "0"))
                                                         (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "61") (term "1,0"))
                                                         (rule "close" (formula "61") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "cut_direct" (formula "55") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "66") (term "1,0"))
                                                            (rule "close" (formula "66") (ifseqformula "13"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "63") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "65") (term "1,0"))
                                                   (rule "close" (formula "65") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "53") (term "0,1,0,1") (ifseqformula "4"))
                                                      (rule "castDel" (formula "53") (term "1,0,1"))
                                                      (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "51") (term "0,0,1") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "62") (term "0"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                         (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "67"))
                                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "67")))
                                                         (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "64") (term "1,0"))
                                                         (rule "close" (formula "64") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "68") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "cut_direct" (formula "51") (term "0"))
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "replace_known_left" (formula "14") (term "0,0,1,0,0,0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "51")) (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "53") (term "0,1") (ifseqformula "14"))
                                       (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                       (rule "hideAuxiliaryEq" (formula "14"))
                                       (rule "replace_known_left" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "50"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "50")) (ifInst ""  (formula "50")))
                                       (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "57"))
                                       (rule "false_right" (formula "57"))
                                       (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "47"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "47"))
                                       (rule "eqSymm" (formula "12") (term "0,0"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "46"))
                                       (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "46"))
                                       (rule "eqSymm" (formula "12") (term "0,0"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "3"))
                                          (rule "typeEqDerived" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "62"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "52")) (ifInst ""  (formula "3")))
                                          (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "48"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,1,1,0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "4") (term "1,0,1,1,0,0"))
                                          (rule "applyEqRigid" (formula "4") (term "2,1,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "4") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "4") (term "0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "58") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "58") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "notRight" (formula "58"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "applyEq" (formula "4") (term "1,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "56") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "cut_direct" (formula "59") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "false_right" (formula "60"))
                                             (rule "replace_known_left" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "49") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "13"))
                                                   (rule "eqSymm" (formula "61"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "59") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "57") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "61") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "62") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "60") (term "1,0"))
                                                   (rule "close" (formula "60") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "12"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "closeTrue" (formula "59"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "ifthenelse_split" (formula "4") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "4"))
                                                         (rule "typeEqDerived" (formula "2") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                         (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "59") (term "0"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "2") (term "1,0"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "57") (term "1,0"))
                                                         (rule "close" (formula "57") (ifseqformula "13"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "64"))
                                                         (rule "cut_direct" (formula "51") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "applyEq" (formula "63") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "62") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "61") (term "1,0"))
                                                            (rule "close" (formula "61") (ifseqformula "11"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "ineffectiveCast" (formula "59") (term "1,0") (ifseqformula "2"))
                                                            (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "58") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "typeEqDerived" (formula "62") (term "0,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "48") (term "0,0,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "58") (term "1,0"))
                                                   (rule "close" (formula "58") (ifseqformula "11"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "typeEqDerived" (formula "62") (term "0,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "2"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "59") (term "1,0"))
                                                      (rule "close" (formula "59") (ifseqformula "12"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "typeEqDerived" (formula "62") (term "0,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived" (formula "50") (term "0,1,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "62"))
                                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "62")))
                                                         (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "58") (term "0,0") (ifseqformula "3"))
                                                         (rule "castDel" (formula "58") (term "0"))
                                                         (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "11"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "2"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "2"))
                                                         (rule "castDel" (formula "56") (term "1,0"))
                                                         (rule "close" (formula "56") (ifseqformula "11"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "63") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "59")))
                                       (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                       (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                       (rule "hideAuxiliaryEq" (formula "12"))
                                       (rule "replace_known_right" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "58")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                       (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "notRight" (formula "60"))
                                       (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "inEqSimp_commuteLeq" (formula "51"))
                                       (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "52"))
                                       (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "equal_literals" (formula "14") (term "1"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                       (rule "hideAuxiliaryEq" (formula "13"))
                                       (rule "inEqSimp_commuteLeq" (formula "13"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "typeEqDerived" (formula "68") (term "0,0,0") (ifseqformula "4"))
                                          (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "68"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "56")))
                                          (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "eqSymm" (formula "69"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "69") (term "2,1") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "69") (term "1") (ifseqformula "17"))
                                          (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "52"))
                                          (rule "applyEq" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "5") (term "0,0,0,0,0"))
                                          (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "applyEq" (formula "66") (term "0,1,0,1") (ifseqformula "4"))
                                          (rule "castDel" (formula "66") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "notRight" (formula "66"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "66") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "63") (term "0") (ifseqformula "6"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "applyEq" (formula "5") (term "1,0,1,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "5") (term "2,1,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "5") (term "1,0") (ifseqformula "32"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "5") (term "1,0,0,0,0"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "61") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "cut_direct" (formula "65") (term "0,1,0"))
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "false_right" (formula "66"))
                                             (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "4") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "4"))
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqRigid" (formula "54") (term "0,0,1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "63") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "67") (ifseqformula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "68") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEq" (formula "69") (term "0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "66") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "15"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "64"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "66") (term "1,0"))
                                                      (rule "close" (formula "66") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "67") (term "1,0"))
                                                         (rule "close" (formula "67") (ifseqformula "15"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "cut_direct" (formula "55") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "68") (term "1,0"))
                                                            (rule "close" (formula "68") (ifseqformula "14"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "55"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "54"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "53"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "ineffectiveCast" (formula "64") (term "0") (ifseqformula "3"))
                                                            (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "65") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "68"))
                                                    (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "68")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "65") (term "1,0"))
                                                   (rule "close" (formula "65") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "68")))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "67") (term "1,0"))
                                                      (rule "close" (formula "67") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "4"))
                                                         (rule "typeEqDerived" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                          (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "68")))
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "close" (formula "69") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: self.size = 2 FALSE"
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "64"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "replace_known_right" (formula "14") (term "0,0,0,1,0,0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "63")) (ifInst ""  (formula "63")))
                              (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "56") (term "1,1,1") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "57") (term "1,1,1") (ifseqformula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "62"))
                               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                              (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                              (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                              (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "12"))
                              (rule "hideAuxiliaryEq" (formula "12"))
                              (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "62"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "61")))
                              (rule "true_left" (formula "16"))
                              (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "61"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "61"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "60"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "60"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
                              (rule "true_left" (formula "14"))
                              (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "59"))
                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                              (rule "true_left" (formula "52"))
                              (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                              (rule "true_left" (formula "50"))
                              (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "notRight" (formula "59"))
                              (rule "polySimp_homoEq" (formula "52"))
                              (rule "polySimp_addComm1" (formula "52") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "51"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                              (rule "add_literals" (formula "7") (term "0,1,0"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "16"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                              (rule "add_literals" (formula "12") (term "0,3,0"))
                              (rule "applyEq" (formula "56") (term "1,3,0,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "56") (term "3,0,0"))
                              (rule "add_literals" (formula "56") (term "0,3,0,0"))
                              (rule "applyEq" (formula "59") (term "0") (ifseqformula "16"))
                              (rule "polySimp_homoEq" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0"))
                              (rule "add_literals" (formula "59") (term "0,0"))
                              (rule "add_zero_left" (formula "59") (term "0"))
                              (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "24") (term "1"))
                              (rule "add_literals" (formula "24") (term "0,1"))
                              (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "34") (term "1"))
                              (rule "add_literals" (formula "34") (term "0,1"))
                              (rule "add_zero_left" (formula "34") (term "1"))
                              (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "56") (term "1,3,0,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "12") (term "1,3,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "59") (term "0,0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "polySimp_homoEq" (formula "16"))
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "51"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                              (rule "mul_literals" (formula "51") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                              (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "51"))
                              (rule "polySimp_invertEq" (formula "58"))
                              (rule "mul_literals" (formula "58") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                              (rule "polySimp_elimOne" (formula "58") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1"))
                              (rule "mul_literals" (formula "16") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                              (rule "applyEq" (formula "58") (term "0") (ifseqformula "16"))
                              (rule "applyEq" (formula "55") (term "1,3,0,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "55") (term "3,0,0"))
                              (rule "add_literals" (formula "55") (term "0,3,0,0"))
                              (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                              (rule "add_literals" (formula "12") (term "0,3,0"))
                              (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                              (rule "add_literals" (formula "14") (term "0,1,0"))
                              (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                              (rule "add_literals" (formula "7") (term "0,1,0"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "16"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0"))
                              (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "16"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_homoEq" (formula "14") (term "1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                              (rule "add_literals" (formula "14") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "14") (term "1,0,1"))
                              (rule "add_literals" (formula "14") (term "0,1"))
                              (rule "equal_literals" (formula "14") (term "1"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "notLeft" (formula "14"))
                              (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                              (rule "hideAuxiliaryEq" (formula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "13"))
                              (rule "polySimp_sepPosMonomial" (formula "56"))
                              (rule "mul_literals" (formula "56") (term "1"))
                              (rule "polySimp_sepNegMonomial" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "cut_direct" (formula "44") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "cut_direct" (formula "45") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "66"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "false_right" (formula "54"))
                                       (rule "applyEq" (formula "64") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "64") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "notRight" (formula "64"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "51"))
                                       (rule "eqSymm" (formula "64"))
                                       (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "12"))
                                       (rule "eqSymm" (formula "60"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "59") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "63") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "false_right" (formula "64"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "65"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "63") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "60") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "53") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "61") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "59") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "65") (ifseqformula "4"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "66") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "66"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "66"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "63") (term "0"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "61") (term "1,0"))
                                                (rule "close" (formula "61") (ifseqformula "14"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "14"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "14"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "cut_direct" (formula "54") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "65") (term "0"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "64") (term "1,0"))
                                                         (rule "close" (formula "64") (ifseqformula "12"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "63") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "66") (term "0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "66")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "11"))
                                                (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "62") (term "1,0"))
                                                (rule "close" (formula "62") (ifseqformula "12"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "66") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "66")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "53") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "62") (term "1,0"))
                                                   (rule "close" (formula "62") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "66") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "66")))
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "63") (term "0"))
                                                      (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "63") (term "1,0"))
                                                      (rule "close" (formula "63") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "67") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "67"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,1,1,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "1,0,1,1,0,0"))
                                       (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "50"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "3"))
                                       (rule "castDel" (formula "61") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "13"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "notRight" (formula "61"))
                                       (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "60") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "64") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "false_right" (formula "65"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "63") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "closeTrue" (formula "62"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                                   (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "66") (ifseqformula "4"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "14"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "15"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "61") (term "0"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "61") (term "1,0"))
                                                      (rule "close" (formula "61") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "cut_direct" (formula "54") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "12"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "63") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "64") (term "0"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "68") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "cut_direct" (formula "45") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "67"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "68") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "68") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "67") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "50"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "61") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "62") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                       (rule "eqSymm" (formula "62"))
                                       (rule "close" (formula "62") (ifseqformula "20"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "64") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "false_right" (formula "65"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "62") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "53") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "66") (ifseqformula "4"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "65"))
                                          (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "67") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "67"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "64") (term "0"))
                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "14"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "closeTrue" (formula "64"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "14"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "65"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "64") (term "0"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                                      (rule "polySimp_homoEq" (formula "65"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "65") (term "0"))
                                                      (rule "add_literals" (formula "65") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "65") (term "1,0"))
                                                      (rule "add_literals" (formula "65") (term "0"))
                                                      (rule "equal_literals" (formula "65"))
                                                      (rule "false_right" (formula "65"))
                                                      (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "14"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "cut_direct" (formula "54") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "applyEq" (formula "68") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "65") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "65") (term "0"))
                                                         (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "65") (term "1,0"))
                                                         (rule "close" (formula "65") (ifseqformula "12"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                         (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "63") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "67"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "67"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "13"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "67") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "64") (term "1,0"))
                                                      (rule "close" (formula "64") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "68") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "68") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "68"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "69"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "49"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "64") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "false_right" (formula "50"))
                                       (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                       (rule "eqSymm" (formula "63"))
                                       (rule "applyEq" (formula "4") (term "2,2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "27"))
                                       (rule "applyEqRigid" (formula "4") (term "2,1,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "4") (term "1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "4") (term "0,1,0,1,0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "4") (term "1,0,1,0,0"))
                                       (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "62") (term "1,0"))
                                       (rule "close" (formula "62") (ifseqformula "13"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "65") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "false_right" (formula "66"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "closeTrue" (formula "65"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "13"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "closeTrue" (formula "64"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "67") (ifseqformula "4"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "66"))
                                          (rule "replace_known_right" (formula "3") (term "0,1,0,0,0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "68") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "68"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "68"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "54") (term "0,1,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "14"))
                                                (rule "eqSymm" (formula "66"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "14"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "66") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "62") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "70"))
                                                      (rule "cut_direct" (formula "54") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "67") (term "0"))
                                                         (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "12"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "53"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "52"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "ineffectiveCast" (formula "64") (term "0") (ifseqformula "3"))
                                                         (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "64") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "64") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "64") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "68")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "64") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "64") (term "0"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "68"))
                                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "68")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "3"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "12"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "4"))
                                                      (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "68")))
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "close" (formula "69") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch " ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
               (rule "applyEqReverse" (formula "80") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "70") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "87") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "87"))
               (rule "applyEqReverse" (formula "72") (term "0,0,0,1,0,0,0,0") (ifseqformula "68"))
               (rule "applyEqReverse" (formula "70") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "70"))
               (rule "applyEqReverse" (formula "80") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "80"))
               (rule "applyEqReverse" (formula "72") (term "0,0,0,0,1,0,0,0") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "72"))
               (rule "applyEqReverse" (formula "87") (term "0,0,0,1,0,0,0") (ifseqformula "68"))
               (rule "hideAuxiliaryEq" (formula "68"))
               (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "102"))
                (builtin "One Step Simplification" (formula "68"))
               (rule "applyEqReverse" (formula "69") (term "2,0") (ifseqformula "68"))
               (rule "hideAuxiliaryEq" (formula "68"))
               (rule "replace_known_right" (formula "83") (term "0,0") (ifseqformula "101"))
                (builtin "One Step Simplification" (formula "83"))
               (rule "applyEqReverse" (formula "85") (term "2,0") (ifseqformula "83"))
               (rule "hideAuxiliaryEq" (formula "83"))
               (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "100"))
                (builtin "One Step Simplification" (formula "69"))
               (rule "applyEqReverse" (formula "70") (term "2,0") (ifseqformula "69"))
               (rule "hideAuxiliaryEq" (formula "69"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "self.tail = self TRUE"
                  (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "103") (term "1,0,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "22") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "25") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "1,1,0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "25") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "13") (term "1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "37") (term "0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "25") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "9") (term "1,2,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "10") (term "0,0,1,1,0,0,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "100") (term "1,1,0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "5") (term "0,1") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "eqSymm" (formula "8") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "23") (term "0,0"))
                  (rule "eqSymm" (formula "17") (term "0,0"))
                  (rule "eqSymm" (formula "8") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "20") (term "0,0"))
                  (rule "replace_known_right" (formula "19") (term "0,1,1,0,0,0,0") (ifseqformula "97"))
                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "97")) (ifInst ""  (formula "36")) (ifInst ""  (formula "97")) (ifInst ""  (formula "36")))
                  (rule "applyEqReverse" (formula "20") (term "2,0") (ifseqformula "19"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "replace_known_left" (formula "21") (term "1,0,1,0,0,0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "96")) (ifInst ""  (formula "96")) (ifInst ""  (formula "96")) (ifInst ""  (formula "35")))
                  (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "replace_known_right" (formula "20") (term "0,0,0,0") (ifseqformula "95"))
                   (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "34")))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "replace_known_right" (formula "18") (term "0,0,0,0") (ifseqformula "94"))
                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "33")))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "replace_known_right" (formula "10") (term "0,0,0,0,0,0") (ifseqformula "93"))
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "93")) (ifInst ""  (formula "32")) (ifInst ""  (formula "93")) (ifInst ""  (formula "32")) (ifInst ""  (formula "59")))
                  (rule "true_left" (formula "10"))
                  (rule "replace_known_right" (formula "8") (term "0,0,0,0,0") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "2")) (ifInst ""  (formula "2")) (ifInst ""  (formula "31")))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "replace_known_right" (formula "14") (term "0,0,0,1,0,0") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "91")) (ifInst ""  (formula "91")) (ifInst ""  (formula "30")) (ifInst ""  (formula "30")))
                  (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                  (rule "hideAuxiliaryEq" (formula "14"))
                  (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "29")))
                  (rule "hideAuxiliaryEq" (formula "8"))
                  (rule "replace_known_left" (formula "12") (term "0,1,0,0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "89")))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "88"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "87"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "6") (term "0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "24") (term "1,1,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "20") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "eqSymm" (formula "17") (term "0,0"))
                  (rule "eqSymm" (formula "14") (term "0,0"))
                  (rule "replace_known_right" (formula "16") (term "0,0,0,0,0,0") (ifseqformula "84"))
                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "84")) (ifInst ""  (formula "23")) (ifInst ""  (formula "84")) (ifInst ""  (formula "23")))
                  (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "replace_known_left" (formula "12") (term "0,1,0,0") (ifseqformula "22"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "83")))
                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_right" (formula "12") (term "0,1,1,0,0,0,0") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "82")) (ifInst ""  (formula "21")) (ifInst ""  (formula "82")) (ifInst ""  (formula "21")))
                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "81")))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "12"))
                  (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "76")))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "75"))
                   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "3")))
                  (rule "true_left" (formula "12"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "74"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "5"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "true_left" (formula "4"))
                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "71"))
                   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "4")))
                  (rule "true_left" (formula "9"))
                  (rule "polySimp_homoEq" (formula "72") (term "1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "72") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "1"))
                  (rule "add_literals" (formula "4") (term "0,1"))
                  (rule "add_zero_left" (formula "4") (term "1"))
                  (rule "polySimp_pullOutFactor1b" (formula "72") (term "0,1,0"))
                  (rule "add_literals" (formula "72") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "72") (term "1,0,1,0"))
                  (rule "add_literals" (formula "72") (term "0,1,0"))
                  (rule "equal_literals" (formula "72") (term "1,0"))
                   (builtin "One Step Simplification" (formula "72"))
                  (rule "false_right" (formula "72"))
                  (rule "polySimp_homoEq" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "3"))
                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,0"))
                  (rule "times_zero_1" (formula "3") (term "0"))
                  (rule "leq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0"))
                  (rule "add_literals" (formula "3") (term "0"))
                  (rule "equal_literals" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch "self.tail = self FALSE"
                  (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "103") (term "1,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "98"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "102") (term "1,1,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "102"))
                  (rule "applyEqReverse" (formula "2") (term "0,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "6") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "5") (term "1,1,1") (ifseqformula "13"))
                  (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "13"))
                  (rule "hideAuxiliaryEq" (formula "13"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "96"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "17") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "12") (term "1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "34") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0,1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0,1") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "35") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "16") (term "1,0,1,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "9") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "31") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,1,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "21") (term "0,0,1,1,0,0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "13") (term "1,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "11"))
                  (rule "applyEqReverse" (formula "8") (term "1,0,1,0,1,0,0") (ifseqformula "10"))
                  (rule "hideAuxiliaryEq" (formula "10"))
                  (rule "eqSymm" (formula "6") (term "1,0,0,0"))
                  (rule "eqSymm" (formula "19") (term "0,0"))
                  (rule "eqSymm" (formula "13") (term "0,0"))
                  (rule "eqSymm" (formula "6") (term "0,1,0,0"))
                  (rule "eqSymm" (formula "16") (term "0,0"))
                  (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "93"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                  (rule "hideAuxiliaryEq" (formula "14"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                  (rule "hideAuxiliaryEq" (formula "11"))
                  (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "7"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,1,0,0,0,0") (ifseqformula "7"))
                  (rule "applyEqReverse" (formula "11") (term "0,0,0,0,1,0,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,1,0,0,0,0") (ifseqformula "7"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,0,1,0,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "applyEqReverse" (formula "8") (term "0,0,0,0,1,0,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0,0,1,0,0,0") (ifseqformula "7"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,1,0,0,0") (ifseqformula "7"))
                  (rule "hideAuxiliaryEq" (formula "7"))
                  (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "90"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                  (rule "hideAuxiliaryEq" (formula "14"))
                  (rule "polySimp_homoEq" (formula "5") (term "1"))
                  (rule "polySimp_homoEq" (formula "4") (term "1"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "2") (term "1"))
                  (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "92") (term "0"))
                  (rule "replace_known_left" (formula "92") (term "0") (ifseqformula "34"))
                   (builtin "One Step Simplification" (formula "92"))
                  (rule "allRight" (formula "92") (inst "sk=f_0"))
                  (rule "allRight" (formula "92") (inst "sk=o_0"))
                  (rule "orRight" (formula "92"))
                  (rule "orRight" (formula "92"))
                  (rule "applyEq" (formula "72") (term "0") (ifseqformula "10"))
                  (rule "applyEqReverse" (formula "73") (term "1,2,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "73") (term "1,1,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "1,0,1,1,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "0,0,0,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "0,0,0,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "1,0,1,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "1,0,1,0,1,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "76") (term "0,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "1,1,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "1,0,1,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "74") (term "1,2,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "74") (term "1,0,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "0,0,1,1,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "81") (term "0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "76") (term "1,2,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "1,0,1,1,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "76") (term "1,1,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "1,1,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "1,0,1,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "0,0,0,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "1,0,1,0,1,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "79") (term "0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "77") (term "0,0,0,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "76") (term "1,0,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "74") (term "0,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "73") (term "0,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "1,0,1,0,1,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "75") (term "0,0,1,1,0,0,0,0") (ifseqformula "72"))
                  (rule "applyEqReverse" (formula "78") (term "0,0,0,0") (ifseqformula "72"))
                  (rule "hideAuxiliaryEq" (formula "72"))
                  (rule "applyEq" (formula "14") (term "0") (ifseqformula "57"))
                  (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                  (rule "hideAuxiliaryEq" (formula "14"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "57"))
                  (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                  (rule "hideAuxiliaryEq" (formula "12"))
                  (rule "applyEq" (formula "63") (term "0") (ifseqformula "6"))
                  (rule "applyEqReverse" (formula "64") (term "2,0") (ifseqformula "63"))
                  (rule "hideAuxiliaryEq" (formula "63"))
                  (rule "polySimp_sepPosMonomial" (formula "5") (term "1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,1"))
                  (rule "polySimp_sepPosMonomial" (formula "4") (term "1"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,1"))
                  (rule "mul_literals" (formula "4") (term "0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1"))
                  (rule "polySimp_elimOne" (formula "4") (term "1,1,1"))
                  (rule "pullOutSelect" (formula "89") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "82"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "90"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__8"))
                  (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=java_lang_Object_created__9"))
                  (rule "applyEq" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "53"))
                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "93")))
                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "4") (term "0,0,1,1,0,0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "91"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "56"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "replaceKnownSelect_taclet110100_104" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110100_105" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "93"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfInfiniteUnion" (formula "1") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "54"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "94")))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "cut_direct" (formula "47") (term "0"))
                  (branch "CUT: self.tail.tail = null TRUE"
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "replace_known_left" (formula "51") (term "0") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "true_left" (formula "51"))
                     (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "47"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "48"))
                     (rule "add_literals" (formula "26") (term "1,0"))
                     (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "48"))
                     (rule "equal_literals" (formula "59") (term "1"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "notLeft" (formula "59"))
                     (rule "replace_known_right" (formula "13") (term "0,0,0,0,0") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "84")) (ifInst ""  (formula "84")))
                     (rule "replace_known_right" (formula "16") (term "0,1,1,0,0,0") (ifseqformula "84"))
                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "84")) (ifInst ""  (formula "84")))
                     (rule "applyEqReverse" (formula "73") (term "1,0,1,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "69") (term "0,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,1,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "69") (term "1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "77") (term "0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "72") (term "1,2,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "1,1,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "69") (term "1,2,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "72") (term "1,1,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "72") (term "0,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "70") (term "1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "70") (term "0,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "75") (term "0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "69") (term "1,1,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "70") (term "1,2,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "70") (term "1,1,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "72") (term "1,0,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "74") (term "0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "73") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                     (rule "applyEqReverse" (formula "71") (term "1,1,0") (ifseqformula "16"))
                     (rule "hideAuxiliaryEq" (formula "16"))
                     (rule "replace_known_right" (formula "57") (term "0,1,1,0,0,0") (ifseqformula "83"))
                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "83")) (ifInst ""  (formula "83")))
                     (rule "applyEqReverse" (formula "75") (term "0,1") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "73") (term "0,1") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "76") (term "1,1,1") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "77") (term "1,1,1") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "59") (term "1,1,1") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "77") (term "0,1,0") (ifseqformula "57"))
                     (rule "applyEqReverse" (formula "58") (term "1,1,1") (ifseqformula "57"))
                     (rule "hideAuxiliaryEq" (formula "57"))
                     (rule "replace_known_right" (formula "56") (term "0,0,0,0,0") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "82")) (ifInst ""  (formula "82")))
                     (rule "applyEqReverse" (formula "59") (term "1,1") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "60") (term "1,1") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "56"))
                     (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "56"))
                     (rule "hideAuxiliaryEq" (formula "56"))
                     (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "56"))
                     (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_right" (formula "83") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "notRight" (formula "83"))
                     (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "82"))
                      (builtin "One Step Simplification" (formula "59"))
                     (rule "replace_known_left" (formula "13") (term "0,1,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "replace_known_left" (formula "12") (term "1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "75"))
                     (rule "replace_known_right" (formula "74") (term "1,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "74"))
                     (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "replace_known_right" (formula "72") (term "1,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "72"))
                     (rule "replace_known_right" (formula "71") (term "1,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "71"))
                     (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "replace_known_right" (formula "30") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "81"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "56"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "true_left" (formula "57"))
                     (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "58"))
                     (rule "true_left" (formula "58"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "polySimp_homoEq" (formula "55"))
                     (rule "polySimp_homoEq" (formula "72") (term "1"))
                     (rule "polySimp_homoEq" (formula "71") (term "1"))
                     (rule "polySimp_addComm1" (formula "55") (term "0"))
                     (rule "polySimp_addComm1" (formula "72") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "71") (term "0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "56"))
                     (rule "inEqSimp_commuteGeq" (formula "70") (term "0"))
                     (rule "inEqSimp_commuteGeq" (formula "69") (term "1"))
                     (rule "applyEq" (formula "14") (term "1,3,0") (ifseqformula "46"))
                     (rule "add_literals" (formula "14") (term "3,0"))
                     (rule "applyEq" (formula "44") (term "0") (ifseqformula "46"))
                     (rule "qeq_literals" (formula "44"))
                     (rule "true_left" (formula "44"))
                     (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "45"))
                     (rule "add_literals" (formula "16") (term "1,0"))
                     (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "45"))
                     (rule "add_literals" (formula "6") (term "1,0"))
                     (rule "applyEq" (formula "75") (term "1,3,0,0") (ifseqformula "45"))
                     (rule "add_literals" (formula "75") (term "3,0,0"))
                     (rule "applyEq" (formula "73") (term "1") (ifseqformula "45"))
                     (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "45"))
                     (rule "add_literals" (formula "37") (term "1"))
                     (rule "applyEq" (formula "45") (term "0") (ifseqformula "10"))
                     (rule "polySimp_homoEq" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                     (rule "mul_literals" (formula "45") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "45") (term "0"))
                     (rule "add_literals" (formula "45") (term "0,0"))
                     (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "10"))
                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                     (rule "mul_literals" (formula "54") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                     (rule "add_literals" (formula "54") (term "0,0,0"))
                     (rule "add_zero_left" (formula "54") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "71") (term "1"))
                     (rule "polySimp_mulComm0" (formula "71") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "71") (term "1,1"))
                     (rule "mul_literals" (formula "71") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "71") (term "1,1,1"))
                     (rule "polySimp_sepPosMonomial" (formula "70") (term "1"))
                     (rule "polySimp_mulComm0" (formula "70") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "70") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1"))
                     (rule "mul_literals" (formula "70") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "70") (term "1,1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0"))
                     (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "45"))
                      (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "44"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "43"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "42"))
                     (rule "add_literals" (formula "10") (term "1"))
                     (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "42"))
                     (rule "mul_literals" (formula "51") (term "0,0"))
                     (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "42"))
                     (rule "ifEqualsInteger" (formula "16"))
                     (rule "equal_literals" (formula "16") (term "1,0"))
                      (builtin "One Step Simplification" (formula "16"))
                     (rule "andLeft" (formula "16"))
                     (rule "notLeft" (formula "16"))
                     (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "74"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "hideAuxiliaryEq" (formula "11"))
                     (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "73"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "18") (term "1,2,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "20") (term "1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "22") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "14"))
                     (rule "hideAuxiliaryEq" (formula "14"))
                     (rule "eqSymm" (formula "22") (term "0,0"))
                     (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "72"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "15"))
                     (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "15"))
                     (rule "hideAuxiliaryEq" (formula "15"))
                     (rule "eqSymm" (formula "18") (term "0,0"))
                     (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "65"))
                     (rule "true_left" (formula "65"))
                     (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "63"))
                     (rule "true_left" (formula "63"))
                     (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "14"))
                      (builtin "One Step Simplification" (formula "61"))
                     (rule "true_left" (formula "61"))
                     (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "applyEq" (formula "22") (term "1,1,1") (ifseqformula "38"))
                     (rule "add_literals" (formula "22") (term "1,1"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "14"))
                     (rule "applyEqReverse" (formula "59") (term "0,0,0,0,1,0,0,0") (ifseqformula "55"))
                     (rule "applyEqReverse" (formula "59") (term "0,0,0,1,0,0,0,0") (ifseqformula "55"))
                     (rule "applyEqReverse" (formula "57") (term "0,0,0,1,0,0,0,0") (ifseqformula "55"))
                     (rule "applyEqReverse" (formula "57") (term "0,0,0,0,1,0,0,0") (ifseqformula "55"))
                     (rule "hideAuxiliaryEq" (formula "55"))
                     (rule "applyEq" (formula "57") (term "0") (ifseqformula "18"))
                     (rule "applyEqReverse" (formula "58") (term "2,0") (ifseqformula "57"))
                     (rule "hideAuxiliaryEq" (formula "57"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "15"))
                     (rule "applyEqReverse" (formula "56") (term "2,0") (ifseqformula "55"))
                     (rule "hideAuxiliaryEq" (formula "55"))
                     (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "13"))
                     (rule "add_literals" (formula "47") (term "0"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "13"))
                     (rule "polySimp_homoEq" (formula "57") (term "1"))
                     (rule "mul_literals" (formula "57") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "57") (term "0,1"))
                     (rule "add_literals" (formula "57") (term "0,0,1"))
                     (rule "add_zero_left" (formula "57") (term "0,1"))
                     (rule "applyEq" (formula "55") (term "0") (ifseqformula "19"))
                     (rule "applyEqReverse" (formula "57") (term "0,1") (ifseqformula "55"))
                     (rule "hideAuxiliaryEq" (formula "55"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "54"))
                     (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                     (rule "hideAuxiliaryEq" (formula "16"))
                     (rule "commute_and_2" (formula "66"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and_2" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "7") (term "0,0,0"))
                     (rule "commute_and" (formula "2") (term "0,0,0"))
                     (rule "cut_direct" (formula "67") (term "0,0"))
                     (branch "CUT: o_0 = null TRUE"
                        (rule "typeEqDerived" (formula "67") (term "0,1,0") (ifseqformula "1"))
                        (rule "typeEqDerived" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "68"))
                         (builtin "One Step Simplification" (formula "67"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "false_right" (formula "68"))
                        (rule "applyEq" (formula "4") (term "0,1,0,1,1,0,0,0") (ifseqformula "1"))
                        (rule "castDel" (formula "4") (term "1,0,1,1,0,0,0"))
                        (rule "applyEqRigid" (formula "4") (term "1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "67") (term "0,0,0,1") (ifseqformula "1"))
                        (rule "castDel" (formula "67") (term "0,0,1"))
                         (builtin "One Step Simplification" (formula "67"))
                        (rule "false_right" (formula "67"))
                        (rule "applyEqRigid" (formula "3") (term "1,2,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "7") (term "1,0,0"))
                        (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "66"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "applyEqRigid" (formula "66") (term "1,0") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1,0,0,0") (ifseqformula "1"))
                        (rule "castDel" (formula "4") (term "1,0,0,1,0,0,0"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "65"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "5") (term "1,0,0"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "64"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "5") (term "0,1,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "5") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "5") (term "1,0,0,0") (ifseqformula "63"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                        (rule "castDel" (formula "3") (term "0,0,0,0,0,0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "61"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "CUT: o_0 = null FALSE"
                         (builtin "One Step Simplification" (formula "68"))
                        (rule "notRight" (formula "68"))
                        (rule "commute_and" (formula "67") (term "0"))
                        (rule "commute_and_2" (formula "67"))
                        (rule "commute_and_2" (formula "8") (term "0,0"))
                        (rule "commute_and_2" (formula "3") (term "0,0"))
                        (rule "commute_and_2" (formula "4") (term "0,0,0"))
                        (rule "commute_and_2" (formula "4") (term "0,0"))
                        (rule "commute_and" (formula "4") (term "0,0,0,0"))
                        (rule "commute_and_2" (formula "4") (term "0,0,0"))
                        (rule "ifthenelse_split" (formula "18") (term "0"))
                        (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "61")))
                           (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "60")))
                           (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEqReverse" (formula "52") (term "0,0,0,0,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEqReverse" (formula "17") (term "0,0,0,1,0,0,0,0") (ifseqformula "15"))
                           (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0,0,0,0") (ifseqformula "15"))
                           (rule "hideAuxiliaryEq" (formula "15"))
                           (rule "replace_known_right" (formula "16") (term "1,0,1,0,0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "60")) (ifInst ""  (formula "59")))
                           (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "53") (term "0,1") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "replace_known_right" (formula "50") (term "0,0,0,0,0,0") (ifseqformula "59"))
                            (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                           (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                           (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "50"))
                           (rule "hideAuxiliaryEq" (formula "50"))
                           (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "49"))
                           (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "50"))
                           (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "58"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "50"))
                           (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "51"))
                           (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "equal_literals" (formula "16") (term "1"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "56"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "15"))
                           (rule "hideAuxiliaryEq" (formula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                              (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "64"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "55"))
                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                              (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "9"))
                              (rule "hideAuxiliaryEq" (formula "9"))
                              (rule "eqSymm" (formula "65"))
                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "false_right" (formula "54"))
                              (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "4"))
                              (rule "castDel" (formula "61") (term "0,0,0"))
                              (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "61"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                              (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "60") (term "2,1") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "60") (term "1") (ifseqformula "15"))
                              (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "48"))
                              (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "3"))
                              (rule "castDel" (formula "58") (term "1,0"))
                              (rule "close" (formula "58") (ifseqformula "15"))
                           )
                           (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "notLeft" (formula "4"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "53"))
                                  (builtin "One Step Simplification" (formula "55"))
                                 (rule "replace_known_right" (formula "64") (term "0,1,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "3")))
                                 (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "64"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "ifthenelse_split" (formula "5") (term "0"))
                                 (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "5"))
                                    (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                    (rule "castDel" (formula "64") (term "1,0"))
                                    (rule "close" (formula "64") (ifseqformula "18"))
                                 )
                                 (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "5"))
                                       (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "4"))
                                       (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                       (rule "castDel" (formula "3") (term "1,0"))
                                       (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                                       (rule "castDel" (formula "51") (term "0"))
                                       (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "5"))
                                       (rule "castDel" (formula "59") (term "1,0"))
                                       (rule "close" (formula "59") (ifseqformula "16"))
                                    )
                                    (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "5"))
                                          (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                          (rule "castDel" (formula "3") (term "1,0"))
                                          (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "4"))
                                          (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "false_right" (formula "52"))
                                          (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "52") (term "0"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                          (rule "castDel" (formula "58") (term "1,0"))
                                          (rule "close" (formula "58") (ifseqformula "15"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "66"))
                                          (rule "cut_direct" (formula "55") (term "1"))
                                          (branch "CUT: o_0 = self TRUE"
                                             (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "56"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                             (rule "castDel" (formula "4") (term "1,0"))
                                             (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                             (rule "castDel" (formula "64") (term "1,0"))
                                             (rule "close" (formula "64") (ifseqformula "15"))
                                          )
                                          (branch "CUT: o_0 = self FALSE"
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "false_right" (formula "56"))
                                             (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "cut_direct" (formula "40") (term "0"))
                                             (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "true_left" (formula "41"))
                                                (rule "cut_direct" (formula "41") (term "0"))
                                                (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "ineffectiveCast" (formula "61") (term "1,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "61") (ifseqformula "2"))
                                                )
                                                (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "ineffectiveCast" (formula "62") (term "1,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "61") (ifseqformula "2"))
                                                )
                                             )
                                             (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "cut_direct" (formula "41") (term "0"))
                                                (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "61") (ifseqformula "1"))
                                                )
                                                (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "ineffectiveCast" (formula "4") (term "1,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived2" (formula "3") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "62") (ifseqformula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "cut_direct" (formula "61") (term "0,1,0"))
                                 (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "false_right" (formula "62"))
                                    (rule "replace_known_left" (formula "52") (term "0,1,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "false_right" (formula "52"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "60") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "58") (ifseqformula "1"))
                                    )
                                    (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "4"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "false_right" (formula "52"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "57") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                             (rule "close" (formula "63") (ifseqformula "4"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "61"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "64"))
                                        (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "64")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "51") (term "0,0,1") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "60") (term "1,0"))
                                       (rule "close" (formula "60") (ifseqformula "14"))
                                    )
                                    (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                          (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "64"))
                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "64")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "applyEq" (formula "52") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "closeTrue" (formula "63"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "64") (term "0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "53") (term "0,1,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "64")))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "51") (term "1,0,1"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEqRigid" (formula "50") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "applyEq" (formula "60") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "60") (term "0"))
                                             (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "60") (term "1,0"))
                                             (rule "close" (formula "60") (ifseqformula "15"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                             (rule "close" (formula "65") (ifseqformula "3"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "61"))
                            (builtin "One Step Simplification" (formula "16"))
                           (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "60"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0,0,0,0") (ifseqformula "15"))
                           (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "applyEqReverse" (formula "52") (term "0,0,0,0,1,0,0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "52"))
                           (rule "applyEqReverse" (formula "17") (term "0,0,0,1,0,0,0") (ifseqformula "15"))
                           (rule "hideAuxiliaryEq" (formula "15"))
                           (rule "commute_or" (formula "51") (term "1,0,0,0"))
                           (rule "commute_or" (formula "16") (term "1,0,0,0"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "4"))
                              (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "67"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "andLeft" (formula "3"))
                              (rule "notLeft" (formula "4"))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "60")))
                              (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "9"))
                              (rule "hideAuxiliaryEq" (formula "9"))
                              (rule "eqSymm" (formula "68"))
                              (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "59"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "8"))
                              (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "3"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "false_right" (formula "59"))
                              (rule "applyEq" (formula "67") (term "2,1") (ifseqformula "3"))
                              (rule "narrowSelectType" (formula "67") (term "1") (ifseqformula "22"))
                              (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "3"))
                              (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "56"))
                              (rule "applyEq" (formula "65") (term "0,1,0,1") (ifseqformula "4"))
                              (rule "castDel" (formula "65") (term "1,0,1"))
                              (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "23"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "notRight" (formula "65"))
                              (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "61") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                              (rule "castDel" (formula "1") (term "0"))
                              (rule "close" (formula "60") (ifseqformula "1"))
                           )
                           (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "58"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                              (rule "hideAuxiliaryEq" (formula "7"))
                              (rule "ifthenelse_split" (formula "14") (term "0"))
                              (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "notLeft" (formula "14"))
                                 (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "53") (term "0,1") (ifseqformula "16"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                 (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "50"))
                                 (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "50"))
                                 (rule "hideAuxiliaryEq" (formula "50"))
                                 (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "notRight" (formula "58"))
                                 (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_commuteLeq" (formula "49"))
                                 (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "50"))
                                 (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "equal_literals" (formula "15") (term "1"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "14"))
                                 (rule "hideAuxiliaryEq" (formula "14"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "notLeft" (formula "6"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "58") (term "0,1,0") (ifseqformula "54"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "replace_known_right" (formula "64") (term "0,1,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "4")))
                                    (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "ifthenelse_split" (formula "6") (term "0"))
                                    (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "6"))
                                       (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "false_right" (formula "56"))
                                       (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "5"))
                                       (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "6"))
                                       (rule "castDel" (formula "52") (term "0"))
                                       (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "6"))
                                       (rule "castDel" (formula "59") (term "1,0"))
                                       (rule "close" (formula "59") (ifseqformula "17"))
                                    )
                                    (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "ifthenelse_split" (formula "6") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "6"))
                                          (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                          (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "4"))
                                          (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "16"))
                                          (rule "eqSymm" (formula "65"))
                                          (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "false_right" (formula "53"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                          (rule "castDel" (formula "61") (term "1,0"))
                                          (rule "close" (formula "61") (ifseqformula "16"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "ifthenelse_split" (formula "6") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "6"))
                                             (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "false_right" (formula "53"))
                                             (rule "applyEq" (formula "57") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "false_right" (formula "57"))
                                             (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "6"))
                                             (rule "castDel" (formula "54") (term "0"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "false_right" (formula "53"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "6"))
                                             (rule "castDel" (formula "59") (term "1,0"))
                                             (rule "close" (formula "59") (ifseqformula "17"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "eqSymm" (formula "66"))
                                             (rule "cut_direct" (formula "58") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "66") (term "1,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "16"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "false_right" (formula "59"))
                                                (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "cut_direct" (formula "41") (term "0"))
                                                (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                                    (builtin "One Step Simplification" (formula "42"))
                                                   (rule "true_left" (formula "42"))
                                                   (rule "cut_direct" (formula "42") (term "0"))
                                                   (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "4"))
                                                      (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "60") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "ineffectiveCast" (formula "53") (term "0") (ifseqformula "4"))
                                                      (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "61") (ifseqformula "3"))
                                                   )
                                                )
                                                (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "cut_direct" (formula "42") (term "0"))
                                                   (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "ineffectiveCast" (formula "53") (term "0") (ifseqformula "4"))
                                                      (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEqRigid" (formula "62") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "62") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "ineffectiveCast" (formula "54") (term "0") (ifseqformula "4"))
                                                      (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "62") (ifseqformula "3"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "cut_direct" (formula "55") (term "1"))
                                    (branch "CUT: o_0 = self TRUE"
                                       (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "1"))
                                       (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "56"))
                                        (builtin "One Step Simplification" (formula "62"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "1"))
                                       (rule "castDel" (formula "62") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "replace_known_right" (formula "53") (term "0,1") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "52") (term "0,1,0,1") (ifseqformula "1"))
                                       (rule "castDel" (formula "52") (term "1,0,1"))
                                       (rule "applyEq" (formula "52") (term "0,0,0,1,0") (ifseqformula "1"))
                                       (rule "castDel" (formula "52") (term "0,0,1,0"))
                                       (rule "replace_known_right" (formula "52") (term "0,1,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                       (rule "castDel" (formula "61") (term "1,0"))
                                       (rule "close" (formula "61") (ifseqformula "17"))
                                    )
                                    (branch "CUT: o_0 = self FALSE"
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "false_right" (formula "56"))
                                       (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "61")))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                              (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                 (rule "applyEqReverse" (formula "51") (term "0,1") (ifseqformula "14"))
                                 (rule "hideAuxiliaryEq" (formula "14"))
                                 (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "56"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "applyEqReverse" (formula "49") (term "1,1") (ifseqformula "48"))
                                 (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "48"))
                                 (rule "hideAuxiliaryEq" (formula "48"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "1"))
                                 (rule "ifthenelse_split" (formula "14") (term "0"))
                                 (branch " (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self TRUE"
                                    (rule "applyEqReverse" (formula "17") (term "0,1") (ifseqformula "15"))
                                    (rule "equal_literals" (formula "17") (term "1"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "false_right" (formula "54"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "replace_known_left" (formula "50") (term "0,0,0,1") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "14")) (ifInst ""  (formula "14")))
                                    (rule "false_right" (formula "50"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "close" (formula "55") (ifseqformula "14"))
                                 )
                                 (branch " (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self FALSE"
                                    (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "14"))
                                    (rule "hideAuxiliaryEq" (formula "14"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "53"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,1") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "56") (term "0,1,0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "53")))
                                       (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "5"))
                                          (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "4"))
                                          (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "15"))
                                          (rule "eqSymm" (formula "64"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "64"))
                                          (rule "closeTrue" (formula "64"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "51") (term "0"))
                                             (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "60") (term "1,0"))
                                             (rule "close" (formula "60") (ifseqformula "15"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "49") (term "0"))
                                                (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "57") (term "1,0"))
                                                (rule "close" (formula "57") (ifseqformula "14"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "cut_direct" (formula "56") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "14"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "ineffectiveCast" (formula "60") (term "1,0") (ifseqformula "3"))
                                                   (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqRigid" (formula "60") (term "1,0") (ifseqformula "1"))
                                                   (rule "close" (formula "60") (ifseqformula "2"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "4"))
                                          (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "62"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "false_right" (formula "53"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "49") (term "0,1,0,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "49") (term "1,0,0,1"))
                                          (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "14"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "57") (term "0,1,0,1") (ifseqformula "3"))
                                          (rule "castDel" (formula "57") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "notRight" (formula "57"))
                                          (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "closeTrue" (formula "57"))
                                       )
                                       (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "62"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "false_right" (formula "54"))
                                             (rule "applyEq" (formula "51") (term "0,1,0,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "51") (term "1,0,0,1"))
                                             (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "59") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "59") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "closeTrue" (formula "59"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "52") (term "0,1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "false_right" (formula "49"))
                                                (rule "applyEqRigid" (formula "53") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "60") (term "0,1,0,1") (ifseqformula "4"))
                                                (rule "castDel" (formula "60") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "notRight" (formula "60"))
                                                (rule "replace_known_left" (formula "51") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "56") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                (rule "close" (formula "63") (ifseqformula "3"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: self.tail.tail = null FALSE"
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "89"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "50"))
                     (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "88"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "48"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "49"))
                      (builtin "One Step Simplification" (formula "50"))
                     (rule "true_left" (formula "50"))
                     (rule "commute_or" (formula "30") (term "0"))
                     (rule "cut_direct" (formula "60") (term "1"))
                     (branch "CUT: self.size = 1 TRUE"
                         (builtin "One Step Simplification" (formula "61"))
                        (rule "true_left" (formula "61"))
                        (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "60"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "replace_known_left" (formula "63") (term "0") (ifseqformula "59"))
                         (builtin "One Step Simplification" (formula "63"))
                        (rule "true_left" (formula "63"))
                        (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "59"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "58"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "true_left" (formula "60"))
                        (rule "applyEq" (formula "9") (term "0,1") (ifseqformula "58"))
                        (rule "polySimp_homoEq" (formula "9") (term "1"))
                        (rule "mul_literals" (formula "9") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,1"))
                        (rule "add_literals" (formula "9") (term "0,0,1"))
                        (rule "add_zero_left" (formula "9") (term "0,1"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "58"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "58"))
                        (rule "add_literals" (formula "24") (term "1,0"))
                        (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "58"))
                        (rule "polySimp_homoEq" (formula "59") (term "1"))
                        (rule "mul_literals" (formula "59") (term "1,0,1"))
                        (rule "polySimp_addComm1" (formula "59") (term "0,1"))
                        (rule "add_literals" (formula "59") (term "0,0,1"))
                        (rule "add_zero_left" (formula "59") (term "0,1"))
                        (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "58"))
                        (rule "add_literals" (formula "5") (term "1,0"))
                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "58"))
                        (rule "qeq_literals" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "57"))
                        (rule "add_literals" (formula "13") (term "3,0"))
                        (rule "applyEq" (formula "79") (term "1,3,0,0") (ifseqformula "57"))
                        (rule "add_literals" (formula "79") (term "3,0,0"))
                        (rule "applyEq" (formula "46") (term "1,1") (ifseqformula "57"))
                        (rule "add_literals" (formula "46") (term "1"))
                        (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "57"))
                        (rule "add_literals" (formula "37") (term "1"))
                        (rule "applyEq" (formula "77") (term "1") (ifseqformula "57"))
                        (rule "commute_or" (formula "25") (term "0"))
                        (rule "commute_or" (formula "55") (term "1,0,0,0"))
                        (rule "commute_or" (formula "56") (term "1,0,0,0"))
                        (rule "commute_or" (formula "26") (term "0"))
                        (rule "commute_and_2" (formula "86"))
                        (rule "commute_or" (formula "11") (term "1,0,0,0"))
                        (rule "commute_or" (formula "14") (term "1,0,0,0"))
                        (rule "commute_and" (formula "5") (term "0,0"))
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "commute_and" (formula "3") (term "0,0"))
                        (rule "commute_and_2" (formula "2") (term "0,0"))
                        (rule "commute_and" (formula "6") (term "0,0,0"))
                        (rule "commute_and" (formula "1") (term "0,0,0"))
                        (rule "ifthenelse_split" (formula "10") (term "0"))
                        (branch " ( ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self) ∧ ( (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self ∨ ¬ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "10"))
                           (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                           (rule "hideAuxiliaryEq" (formula "12"))
                           (rule "commute_and" (formula "87") (term "0"))
                           (rule "commute_and_2" (formula "87"))
                           (rule "commute_and_2" (formula "6") (term "0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0,0"))
                           (rule "commute_and_2" (formula "2") (term "0,0,0"))
                           (rule "cut_direct" (formula "88") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (rule "typeEqDerived" (formula "88") (term "0,0,0") (ifseqformula "1"))
                              (rule "typeEqDerived" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "89"))
                               (builtin "One Step Simplification" (formula "88"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "false_right" (formula "89"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "3") (term "1,0,1,1,0,0"))
                              (rule "applyEqRigid" (formula "3") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "3") (term "0,0,1,0,0,0"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "86"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "87") (term "1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "86") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "castDel" (formula "86") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "86"))
                              (rule "false_right" (formula "86"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "85"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "84"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3") (term "1,0,0"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0,0"))
                              (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "82"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "83")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "notRight" (formula "89"))
                              (rule "ifthenelse_split" (formula "16") (term "0"))
                              (branch " ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "0,0,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,1,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,1,1,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "70") (term "0,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "73") (term "1,2,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "75") (term "0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "70") (term "1,1,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "71") (term "0,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "0,0,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,1,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "0,0,0,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "0,0,1,1,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "70") (term "1,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "71") (term "1,2,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "71") (term "1,1,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "0,0,0,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,1,0,1,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,0,1,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "70") (term "1,2,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "72") (term "1,1,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "73") (term "1,1,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "78") (term "0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "73") (term "0,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "0,0,1,1,0,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "74") (term "1,0,1,0,1,0,0,0") (ifseqformula "18"))
                                 (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "18"))
                                 (rule "hideAuxiliaryEq" (formula "18"))
                                 (rule "replace_known_left" (formula "58") (term "1,0,0,0") (ifseqformula "16"))
                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "84")) (ifInst ""  (formula "17")))
                                 (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "20") (term "2,0") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "76") (term "1,1,0") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "75") (term "1,1") (ifseqformula "58"))
                                 (rule "hideAuxiliaryEq" (formula "58"))
                                 (rule "replace_known_left" (formula "58") (term "1,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "83")) (ifInst ""  (formula "16")))
                                 (rule "applyEqReverse" (formula "60") (term "0,1") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "76") (term "1,1,1") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "75") (term "0,1") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "77") (term "0,1,0") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "73") (term "0,1") (ifseqformula "58"))
                                 (rule "applyEqReverse" (formula "77") (term "1,1,1") (ifseqformula "58"))
                                 (rule "hideAuxiliaryEq" (formula "58"))
                                 (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "82")) (ifInst ""  (formula "16")))
                                 (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "59"))
                                 (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "58"))
                                 (rule "replace_known_right" (formula "84") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "84"))
                                 (rule "notRight" (formula "84"))
                                 (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "73"))
                                 (rule "replace_known_right" (formula "27") (term "1,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "75"))
                                 (rule "replace_known_right" (formula "74") (term "1,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "74"))
                                 (rule "replace_known_right" (formula "30") (term "1,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "replace_known_right" (formula "71") (term "1,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "replace_known_right" (formula "16") (term "0,0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
                                 (rule "true_left" (formula "16"))
                                 (rule "replace_known_right" (formula "71") (term "1,0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "71"))
                                 (rule "replace_known_left" (formula "12") (term "0,1") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "12"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "17"))
                                 (rule "equal_literals" (formula "30") (term "0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "29") (term "1,1,1") (ifseqformula "17"))
                                 (rule "add_literals" (formula "29") (term "1,1"))
                                 (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "17"))
                                 (rule "equal_literals" (formula "28") (term "1"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "17"))
                                 (rule "equal_literals" (formula "26") (term "1"))
                                  (builtin "One Step Simplification" (formula "26"))
                                 (rule "notLeft" (formula "26"))
                                 (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "17"))
                                 (rule "equal_literals" (formula "11"))
                                 (rule "closeFalse" (formula "11"))
                              )
                              (branch " ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "68") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "1,0,1,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "71") (term "0,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "68") (term "0,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "71") (term "1,2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "69") (term "1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "73") (term "0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "69") (term "0,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "71") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "68") (term "1,2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "72") (term "1,1,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "69") (term "1,2,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "70") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqReverse" (formula "69") (term "1,1,0") (ifseqformula "16"))
                                 (rule "hideAuxiliaryEq" (formula "16"))
                                 (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "82"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "applyEqReverse" (formula "60") (term "1,1") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "74") (term "1,1,0") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "73") (term "1,1") (ifseqformula "56"))
                                 (rule "hideAuxiliaryEq" (formula "56"))
                                 (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "81"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "applyEqReverse" (formula "74") (term "1,1,1") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "73") (term "0,1") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "71") (term "0,1") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "75") (term "0,1,0") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "58") (term "0,1") (ifseqformula "56"))
                                 (rule "applyEqReverse" (formula "75") (term "1,1,1") (ifseqformula "56"))
                                 (rule "hideAuxiliaryEq" (formula "56"))
                                 (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "80"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "polySimp_homoEq" (formula "73") (term "1"))
                                 (rule "polySimp_homoEq" (formula "74") (term "1"))
                                 (rule "polySimp_addComm1" (formula "73") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "74") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "58") (term "1"))
                                 (rule "inEqSimp_commuteGeq" (formula "72") (term "1,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "71") (term "1"))
                                 (rule "polySimp_sepPosMonomial" (formula "73") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "73") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "73") (term "1,1"))
                                 (rule "mul_literals" (formula "73") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "73") (term "1,1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "74") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "74") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "74") (term "1,1"))
                                 (rule "mul_literals" (formula "74") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "74") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "74") (term "1,1,1"))
                                 (rule "commute_or" (formula "70") (term "0"))
                                 (rule "commute_or" (formula "71") (term "0"))
                                 (rule "commute_or" (formula "73") (term "0"))
                                 (rule "ifthenelse_split" (formula "16") (term "0"))
                                 (branch " (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self TRUE"
                                    (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "28") (term "0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,1,0,1,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,1,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,1,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0,0,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "27") (term "0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "0,0,1,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "24") (term "1,2,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "26") (term "1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "22") (term "0,0,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "0,0,1,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,1,1,0,0,0") (ifseqformula "17"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "eqSymm" (formula "25") (term "0,0"))
                                    (rule "eqSymm" (formula "22") (term "0,0"))
                                    (rule "replace_known_right" (formula "21") (term "0,0,0,0,0,0") (ifseqformula "84"))
                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "84")) (ifInst ""  (formula "31")) (ifInst ""  (formula "84")) (ifInst ""  (formula "31")))
                                    (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "replace_known_left" (formula "23") (term "1,0,1,0,0") (ifseqformula "30"))
                                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "83")) (ifInst ""  (formula "83")) (ifInst ""  (formula "30")) (ifInst ""  (formula "83")))
                                    (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "replace_known_right" (formula "20") (term "0,0,0,0") (ifseqformula "82"))
                                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "29")))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "replace_known_left" (formula "19") (term "0,1,0,0") (ifseqformula "28"))
                                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "81")))
                                    (rule "hideAuxiliaryEq" (formula "19"))
                                    (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "18"))
                                    (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "18"))
                                    (rule "applyEqReverse" (formula "23") (term "1,1") (ifseqformula "18"))
                                    (rule "hideAuxiliaryEq" (formula "18"))
                                    (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEqReverse" (formula "10") (term "0,1") (ifseqformula "17"))
                                    (rule "equal_literals" (formula "10") (term "1"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "applyEqReverse" (formula "25") (term "1,1,1") (ifseqformula "17"))
                                    (rule "add_literals" (formula "25") (term "1,1"))
                                    (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "17"))
                                    (rule "equal_literals" (formula "25") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "10")))
                                    (rule "true_left" (formula "25"))
                                    (rule "applyEqReverse" (formula "24") (term "1,1,1") (ifseqformula "17"))
                                    (rule "add_literals" (formula "24") (term "1,1"))
                                    (rule "applyEqReverse" (formula "21") (term "0,1") (ifseqformula "17"))
                                    (rule "equal_literals" (formula "21") (term "1"))
                                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "78")) (ifInst ""  (formula "10")))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "17"))
                                    (rule "equal_literals" (formula "22") (term "1"))
                                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "10")))
                                    (rule "true_left" (formula "22"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "replace_known_right" (formula "18") (term "0,0,0,0") (ifseqformula "75"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "22")))
                                    (rule "hideAuxiliaryEq" (formula "18"))
                                    (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "72"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "18"))
                                    (rule "hideAuxiliaryEq" (formula "18"))
                                    (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "16"))
                                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
                                    (rule "true_left" (formula "11"))
                                    (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "15"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "71"))
                                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "10")))
                                    (rule "true_left" (formula "16"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "10"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "false_right" (formula "65"))
                                    (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "64"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "9")) (ifInst ""  (formula "57")))
                                    (rule "true_left" (formula "14"))
                                    (rule "replace_known_left" (formula "60") (term "0,0,0,1") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
                                    (rule "false_right" (formula "60"))
                                    (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "true_left" (formula "52"))
                                    (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1,1,0,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,1,0,1,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "47") (term "1,0,1,0,0") (ifseqformula "14"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "applyEq" (formula "46") (term "1,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_right" (formula "46") (term "0,0,0,0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "ifthenelse_negated" (formula "46") (term "0"))
                                    (rule "applyEq" (formula "48") (term "1,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "41") (term "1") (ifseqformula "9"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,1") (ifseqformula "9"))
                                    (rule "applyEq" (formula "48") (term "1,0,0,0,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "45") (term "1,1,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                    (rule "applyEq" (formula "43") (term "1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "13"))
                                    (rule "close" (formula "58") (ifseqformula "9"))
                                 )
                                 (branch " (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self FALSE"
                                    (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "26") (term "0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "23") (term "0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,1,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "19") (term "1,2,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "23") (term "1,2,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "24") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "hideAuxiliaryEq" (formula "16"))
                                    (rule "eqSymm" (formula "21") (term "0,0"))
                                    (rule "eqSymm" (formula "24") (term "0,0"))
                                    (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "79"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "17"))
                                    (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "17"))
                                    (rule "hideAuxiliaryEq" (formula "17"))
                                    (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "78"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "10") (term "0,1") (ifseqformula "16"))
                                    (rule "applyEqReverse" (formula "26") (term "1,1,1") (ifseqformula "15"))
                                    (rule "applyEqReverse" (formula "23") (term "0,1") (ifseqformula "15"))
                                    (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "76"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "notLeft" (formula "10"))
                                    (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "74"))
                                     (builtin "One Step Simplification" (formula "51"))
                                    (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "74"))
                                     (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "75")))
                                    (rule "closeTrue" (formula "80"))
                                 )
                              )
                           )
                        )
                        (branch " ( ¬ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self) ∧ ( (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = self ∨ ¬ ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                           (rule "hideAuxiliaryEq" (formula "10"))
                           (rule "commute_and" (formula "86") (term "0"))
                           (rule "commute_and_2" (formula "86"))
                           (rule "commute_and_2" (formula "6") (term "0,0"))
                           (rule "commute_and_2" (formula "1") (term "0,0"))
                           (rule "andRight" (formula "80"))
                           (branch
                              (rule "orRight" (formula "80"))
                              (rule "notRight" (formula "80"))
                              (rule "replace_known_left" (formula "11") (term "0,0,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "14") (term "0,0,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "70") (term "1,0,1,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "69") (term "0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "67") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "66") (term "1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "69") (term "1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "66") (term "1,2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "69") (term "1,2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "71") (term "0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "67") (term "1,2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "1,0,1,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "67") (term "0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "66") (term "0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "66") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "70") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "72") (term "0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "69") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "68") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "18") (term "1,2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "27") (term "0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "23") (term "1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "24") (term "0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,1,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "1,0,1,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "19") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "79"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEqReverse" (formula "25") (term "1,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "15"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "replace_known_left" (formula "52") (term "0,0,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "67") (term "0,1") (ifseqformula "52"))
                              (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "52"))
                              (rule "applyEqReverse" (formula "71") (term "1,1,1") (ifseqformula "52"))
                              (rule "applyEqReverse" (formula "69") (term "0,1") (ifseqformula "52"))
                              (rule "applyEqReverse" (formula "71") (term "0,1,0") (ifseqformula "52"))
                              (rule "applyEqReverse" (formula "70") (term "1,1,1") (ifseqformula "52"))
                              (rule "applyEqReverse" (formula "54") (term "0,1") (ifseqformula "52"))
                              (rule "hideAuxiliaryEq" (formula "52"))
                              (rule "replace_known_left" (formula "51") (term "0,0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "67") (term "1,1") (ifseqformula "51"))
                              (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "51"))
                              (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "51"))
                              (rule "applyEqReverse" (formula "68") (term "1,1,0") (ifseqformula "51"))
                              (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "51"))
                              (rule "hideAuxiliaryEq" (formula "51"))
                              (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "75"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "13"))
                              (rule "applyEqReverse" (formula "9") (term "0,1") (ifseqformula "13"))
                              (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "12"))
                              (rule "applyEqReverse" (formula "20") (term "0,1") (ifseqformula "12"))
                              (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "12"))
                              (rule "applyEqReverse" (formula "22") (term "1,1,1") (ifseqformula "12"))
                              (rule "hideAuxiliaryEq" (formula "12"))
                              (rule "eqSymm" (formula "15") (term "0,0"))
                              (rule "eqSymm" (formula "18") (term "0,0"))
                              (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "replace_known_left" (formula "73") (term "0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "73"))
                              (rule "false_right" (formula "73"))
                              (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "61"))
                              (rule "true_left" (formula "61"))
                              (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "replace_known_left" (formula "60") (term "1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "60"))
                              (rule "true_left" (formula "60"))
                              (rule "replace_known_left" (formula "59") (term "1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "59"))
                              (rule "true_left" (formula "59"))
                              (rule "replace_known_left" (formula "20") (term "1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "replace_known_left" (formula "19") (term "1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "replace_known_left" (formula "19") (term "0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "replace_known_left" (formula "55") (term "1,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "12"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,0,1,0,0,0") (ifseqformula "50"))
                              (rule "applyEqReverse" (formula "54") (term "0,0,0,1,0,0,0,0") (ifseqformula "50"))
                              (rule "applyEqReverse" (formula "52") (term "0,0,0,1,0,0,0,0") (ifseqformula "50"))
                              (rule "applyEqReverse" (formula "52") (term "0,0,0,0,1,0,0,0") (ifseqformula "50"))
                              (rule "hideAuxiliaryEq" (formula "50"))
                              (rule "applyEq" (formula "53") (term "1,1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,0,0,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "46") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "48") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "17") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "12") (term "1,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "59"))
                              (rule "applyEq" (formula "51") (term "1,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "50") (term "1,1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "51") (term "1,1,0,1,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "48") (term "1,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "13") (term "1,1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "53") (term "1,1,0,1,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "52") (term "0") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "53") (term "2,0") (ifseqformula "52"))
                              (rule "hideAuxiliaryEq" (formula "52"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "50"))
                              (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                              (rule "hideAuxiliaryEq" (formula "13"))
                              (rule "applyEq" (formula "16") (term "0") (ifseqformula "51"))
                              (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                              (rule "hideAuxiliaryEq" (formula "16"))
                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "13"))
                              (rule "hideAuxiliaryEq" (formula "49"))
                              (rule "commute_and_2" (formula "3") (term "0,0,0"))
                              (rule "cut_direct" (formula "60") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                 (rule "typeEqDerived" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                 (rule "typeEqDerived" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "61"))
                                  (builtin "One Step Simplification" (formula "60"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "false_right" (formula "61"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "59"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "6") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                 (rule "hideAuxiliaryEq" (formula "6"))
                                 (rule "applyEqRigid" (formula "59") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "5") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "57"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEqRigid" (formula "5") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "4") (term "1,0,1,1,0,0"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "4") (term "0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "56") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "56"))
                                 (rule "false_right" (formula "56"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "55"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "54"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "61"))
                                 (rule "notRight" (formula "61"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "typeEqDerived" (formula "62") (term "0,0,0") (ifseqformula "4"))
                                    (rule "typeEqDerived" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "62"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
                                    (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "5") (term "0,1,0,0,0") (ifseqformula "56"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEq" (formula "63") (term "2,1") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "20"))
                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "false_right" (formula "56"))
                                    (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                    (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "53"))
                                    (rule "applyEq" (formula "60") (term "0,1,0,1") (ifseqformula "4"))
                                    (rule "castDel" (formula "60") (term "1,0,1"))
                                    (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "21"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "notRight" (formula "60"))
                                    (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                    (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "close" (formula "55") (ifseqformula "1"))
                                 )
                                 (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "55"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "commute_and_2" (formula "3") (term "0,0"))
                                    (rule "cut_direct" (formula "59") (term "0,1,0"))
                                    (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "false_right" (formula "60"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "cut_direct" (formula "44") (term "0"))
                                       (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "replace_known_left" (formula "48") (term "0,0,0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                                          (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,1,0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "replace_known_left" (formula "12") (term "0,0,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "41"))
                                          (rule "eqSymm" (formula "11") (term "0,0"))
                                          (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "11") (term "0,0"))
                                          (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "13"))
                                             (rule "eqSymm" (formula "53"))
                                             (rule "applyEq" (formula "47") (term "0,0,1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "51") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "cut_direct" (formula "47") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "2") (term "0"))
                                                (rule "close" (formula "51") (ifseqformula "2"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                       (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "replace_known_left" (formula "12") (term "1,0,1,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "44")) (ifInst ""  (formula "54")))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_right" (formula "47") (term "0,0,0,0,0,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "53")) (ifInst ""  (formula "43")) (ifInst ""  (formula "53")) (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "replace_known_left" (formula "13") (term "0,1,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "52")))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_right" (formula "45") (term "0,0,0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "42")))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "50")))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "ifthenelse_split" (formula "11") (term "0"))
                                          (branch "case_study.SortedListNode.tail = self TRUE"
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "11"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "52") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "13"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "50") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "cut_direct" (formula "47") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "2") (term "0"))
                                                   (rule "close" (formula "52") (ifseqformula "2"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "52")))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                          (branch "case_study.SortedListNode.tail = self FALSE"
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "54") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "54"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "52"))
                                                (rule "applyEqRigid" (formula "47") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "51") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "cut_direct" (formula "49") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "2") (term "0"))
                                                   (rule "close" (formula "54") (ifseqformula "2"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "54")))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "cut_direct" (formula "44") (term "0"))
                                       (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "true_left" (formula "45"))
                                          (rule "replace_known_left" (formula "48") (term "0,0,0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "44")) (ifInst ""  (formula "44")))
                                          (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "48"))
                                          (rule "hideAuxiliaryEq" (formula "48"))
                                          (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,1,0,0,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "43")) (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_left" (formula "45") (term "0,0,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "45"))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "11") (term "1,2,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "41"))
                                          (rule "eqSymm" (formula "11") (term "0,0"))
                                          (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "applyEq" (formula "11") (term "0,0,0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "11") (term "0,0"))
                                          (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "3") (term "1,0"))
                                                (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "13"))
                                                (rule "eqSymm" (formula "56"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "54") (term "1,0"))
                                                (rule "close" (formula "54") (ifseqformula "14"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEq" (formula "56") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "13"))
                                                   (rule "eqSymm" (formula "56"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "54") (term "1,0"))
                                                   (rule "close" (formula "54") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "50") (term "0"))
                                                      (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "3"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "false_right" (formula "45"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "50") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "50") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "49") (term "1,0"))
                                                      (rule "close" (formula "49") (ifseqformula "12"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "57"))
                                                      (rule "cut_direct" (formula "49") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "56") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "53") (term "0"))
                                                         (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "53") (term "1,0"))
                                                         (rule "close" (formula "53") (ifseqformula "11"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "45"))
                                                         (rule "false_right" (formula "45"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "29"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0,0") (ifseqformula "26"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "11"))
                                                         (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "37"))
                                                         (rule "true_left" (formula "37"))
                                                         (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "3"))
                                                         (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "52") (ifseqformula "2"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "cut_direct" (formula "47") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                (rule "typeEqDerived" (formula "54") (term "0,0") (ifseqformula "1"))
                                                (rule "typeEqDerived" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "54")))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "47") (term "1,0,1"))
                                                (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "0"))
                                                (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "1,0"))
                                                (rule "close" (formula "53") (ifseqformula "14"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                          )
                                       )
                                       (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "replace_known_left" (formula "12") (term "1,0,1,0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "54")) (ifInst ""  (formula "54")) (ifInst ""  (formula "44")) (ifInst ""  (formula "54")))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_right" (formula "47") (term "0,1,1,0,0,0,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "53")) (ifInst ""  (formula "43")) (ifInst ""  (formula "53")) (ifInst ""  (formula "43")))
                                          (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "47"))
                                          (rule "hideAuxiliaryEq" (formula "47"))
                                          (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "52"))
                                           (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "43")))
                                          (rule "hideAuxiliaryEq" (formula "11"))
                                          (rule "replace_known_left" (formula "45") (term "0,1,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "51")))
                                          (rule "hideAuxiliaryEq" (formula "45"))
                                          (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "42")))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "ifthenelse_split" (formula "11") (term "0"))
                                          (branch "case_study.SortedListNode.tail = self TRUE"
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "11"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "53") (term "0"))
                                                   (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "false_right" (formula "47"))
                                                   (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "2") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "52") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "13"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "closeTrue" (formula "52"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "52") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "2") (term "1,0"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "50") (term "1,0"))
                                                      (rule "close" (formula "50") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEqRigid" (formula "52") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "52") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "50") (term "1,0"))
                                                         (rule "close" (formula "50") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "57"))
                                                         (rule "cut_direct" (formula "49") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "55") (term "1,0"))
                                                            (rule "close" (formula "55") (ifseqformula "13"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "48"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "47"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "30"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0,0") (ifseqformula "27"))
                                                            (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "3"))
                                                            (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "51") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "51") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cut_direct" (formula "47") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "54") (term "0,0") (ifseqformula "1"))
                                                   (rule "typeEqDerived" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "48"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "54")))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "castDel" (formula "47") (term "1,0,1"))
                                                   (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "54") (term "1,0"))
                                                   (rule "close" (formula "54") (ifseqformula "15"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "45"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                          (branch "case_study.SortedListNode.tail = self FALSE"
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "46") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "46"))
                                                   (rule "false_right" (formula "46"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "52") (term "1,0"))
                                                   (rule "close" (formula "52") (ifseqformula "12"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "54") (term "0"))
                                                      (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "54") (term "1,0"))
                                                      (rule "close" (formula "54") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "55") (term "0"))
                                                         (rule "applyEq" (formula "46") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "46"))
                                                         (rule "false_right" (formula "46"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "53") (term "1,0"))
                                                         (rule "close" (formula "53") (ifseqformula "13"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "eqSymm" (formula "59"))
                                                         (rule "cut_direct" (formula "51") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "46"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "4") (term "1,0"))
                                                            (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "55") (term "0"))
                                                            (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "56") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "55") (term "1,0"))
                                                            (rule "close" (formula "55") (ifseqformula "11"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "51"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "50"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "49"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "false_right" (formula "45"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "29"))
                                                            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0,0") (ifseqformula "26"))
                                                            (rule "ineffectiveCast" (formula "53") (term "0") (ifseqformula "3"))
                                                            (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "54") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "cut_direct" (formula "49") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "56") (term "0,0") (ifseqformula "1"))
                                                   (rule "typeEqDerived" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                    (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "56")))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "56") (term "1,0"))
                                                   (rule "close" (formula "56") (ifseqformula "14"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "orRight" (formula "80"))
                              (rule "notRight" (formula "81"))
                              (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "0,0,1,1,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "0,0,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "1,0,1,0,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "1,0,1,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "1,0,1,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,1,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "22") (term "1,2,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,1,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "24") (term "1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "0,0,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "18") (term "1,2,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "21") (term "1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "1,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "22") (term "1,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,1,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "19") (term "0,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "0,0,1,1,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "0,0,0,0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,1,0,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "25") (term "0,0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "28") (term "0,0,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "19") (term "1,2,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "23") (term "1,0,1,1,0,0") (ifseqformula "15"))
                              (rule "hideAuxiliaryEq" (formula "15"))
                              (rule "replace_known_left" (formula "54") (term "1,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "11") (term "1,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")))
                              (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "applyEqReverse" (formula "26") (term "1,1,0") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "25") (term "1,1") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "16"))
                              (rule "hideAuxiliaryEq" (formula "15"))
                              (rule "replace_known_left" (formula "13") (term "0,1,1,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
                              (rule "replace_known_left" (formula "53") (term "1,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "1")))
                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "78"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "applyEqReverse" (formula "26") (term "0,1,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "26") (term "1,1,1") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "24") (term "0,1") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "9") (term "0,1") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "23") (term "1,1,1") (ifseqformula "13"))
                              (rule "hideAuxiliaryEq" (formula "13"))
                              (rule "replace_known_left" (formula "78") (term "0,1") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "false_right" (formula "78"))
                              (rule "ifthenelse_negated" (formula "49") (term "0"))
                              (rule "ifthenelse_negated" (formula "9") (term "0"))
                              (rule "ifthenelse_negated" (formula "12") (term "0"))
                              (rule "ifthenelse_negated" (formula "50") (term "0"))
                              (rule "applyEq" (formula "60") (term "0") (ifseqformula "13"))
                              (rule "applyEqReverse" (formula "64") (term "0,0,0,1,0,0,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "64") (term "0,0,0,0,1,0,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "62") (term "0,0,0,1,0,0,0,0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "62") (term "0,0,0,0,1,0,0,0") (ifseqformula "60"))
                              (rule "hideAuxiliaryEq" (formula "60"))
                              (rule "applyEq" (formula "14") (term "0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "applyEq" (formula "61") (term "0") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "62") (term "2,0") (ifseqformula "61"))
                              (rule "hideAuxiliaryEq" (formula "61"))
                              (rule "applyEq" (formula "60") (term "0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "63") (term "0,1") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "64") (term "0,1,0") (ifseqformula "60"))
                              (rule "hideAuxiliaryEq" (formula "60"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "60"))
                              (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
                              (rule "hideAuxiliaryEq" (formula "17"))
                              (rule "commute_and_2" (formula "3") (term "0,0,0"))
                              (rule "cut_direct" (formula "76") (term "0,0"))
                              (branch "CUT: o_0 = null TRUE"
                                 (rule "typeEqDerived" (formula "76") (term "0,0,0") (ifseqformula "1"))
                                 (rule "typeEqDerived" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "77"))
                                  (builtin "One Step Simplification" (formula "76"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "false_right" (formula "77"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,1,1,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "4") (term "1,0,1,1,0,0"))
                                 (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "75"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "7") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "74"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "7"))
                                 (rule "hideAuxiliaryEq" (formula "7"))
                                 (rule "applyEq" (formula "4") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "castDel" (formula "4") (term "0,0,0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "73") (term "0,1,0,1") (ifseqformula "1"))
                                 (rule "castDel" (formula "73") (term "1,0,1"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "72"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "4") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "71"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "1,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "70"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: o_0 = null FALSE"
                                  (builtin "One Step Simplification" (formula "77"))
                                 (rule "notRight" (formula "77"))
                                 (rule "commute_and_2" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "48") (term "0"))
                                 (branch " (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                    (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "64") (term "1,1,0") (ifseqformula "49"))
                                    (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "49"))
                                    (rule "hideAuxiliaryEq" (formula "49"))
                                    (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "48"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "64") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "18") (term "1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "1,0,1,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "0,0,1,1,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "61") (term "0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "1,0,1,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "1,0,1,0,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "16") (term "1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,1,1,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "1,0,1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "62") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,1,0") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "eqSymm" (formula "17") (term "0,0"))
                                    (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "20") (term "1,1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "21") (term "1,1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "64") (term "1,1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "64") (term "0,1,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "63") (term "1,1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "50") (term "0,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "60") (term "0,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "62") (term "0,1") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "eqSymm" (formula "15") (term "0,0"))
                                    (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "45"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "44"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "true_left" (formula "58"))
                                    (rule "replace_known_left" (formula "57") (term "1,0") (ifseqformula "44"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "true_left" (formula "57"))
                                    (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "44"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "replace_known_left" (formula "53") (term "1,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "replace_known_left" (formula "52") (term "1,0") (ifseqformula "42"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "true_left" (formula "52"))
                                    (rule "applyEq" (formula "16") (term "1,1,2,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,1,0,1,1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "47") (term "1,1,0,1") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,1,1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "50") (term "1,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,1,0,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "12") (term "1") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,1,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "13") (term "1,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "50") (term "1,1,1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "50") (term "1,1,2,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "17") (term "1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "16") (term "1,1,0,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "48") (term "1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "50") (term "1,1,0,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,1,0,1,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "16") (term "1,1,1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "15") (term "1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "13") (term "1,1,0,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,0,0,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "16") (term "1,0,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "49") (term "1,1,0,1") (ifseqformula "42"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,1,1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,0,0,1,1,0,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "49") (term "1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "51") (term "1,0,0,0,0,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "46") (term "1") (ifseqformula "42"))
                                    (rule "applyEq" (formula "48") (term "1,1,0,1") (ifseqformula "42"))
                                    (rule "applyEq" (formula "57") (term "0") (ifseqformula "42"))
                                    (rule "eqSymm" (formula "57"))
                                    (rule "applyEq" (formula "51") (term "1,1,0,1,0,1,0,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "13") (term "1,1,2,0") (ifseqformula "42"))
                                    (rule "commute_and" (formula "4") (term "0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "63"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "58")))
                                       (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "64"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "applyEqRigid" (formula "63") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "53"))
                                       (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "false_right" (formula "56"))
                                       (rule "applyEq" (formula "60") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "60") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "60"))
                                       (rule "notRight" (formula "60"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "60") (term "0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "56") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "60") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "false_right" (formula "61"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "ifthenelse_split" (formula "14") (term "0"))
                                          (branch " ¬case_study.SortedListNode.tail = null ∧ ¬case_study.SortedListNode.tail.<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "15"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "referencedObjectIsCreatedRight" (formula "56") (ifseqformula "55"))
                                             (rule "close" (formula "56") (ifseqformula "18"))
                                          )
                                          (branch " ¬case_study.SortedListNode.tail = null ∧ ¬case_study.SortedListNode.tail.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "48") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0,0,0,0") (ifseqformula "11"))
                                             (rule "applyEqReverse" (formula "12") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "48") (term "0,0,0,1,0,0,0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "commute_or" (formula "11") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "46") (term "1,0,0,0"))
                                             (rule "cut_direct" (formula "52") (term "0,0"))
                                             (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "replace_known_left" (formula "12") (term "0,0,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "true_left" (formula "43"))
                                                (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "13") (term "0,0"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "hideAuxiliaryEq" (formula "13"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "49"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "5"))
                                                   (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "14"))
                                                   (rule "eqSymm" (formula "54"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "eqSymm" (formula "52"))
                                                   (rule "applyEqRigid" (formula "47") (term "0,0,1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "47"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "2") (term "0"))
                                                   (rule "close" (formula "51") (ifseqformula "2"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "cut_direct" (formula "48") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "54") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "3") (term "0"))
                                                      (rule "close" (formula "53") (ifseqformula "3"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "notRight" (formula "53"))
                                                (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "53")) (ifInst ""  (formula "53")) (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_right" (formula "46") (term "0,0,1,0,0,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "52")) (ifInst ""  (formula "1")) (ifInst ""  (formula "52")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
                                                (rule "true_left" (formula "43"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "2") (term "0"))
                                                   (rule "close" (formula "56") (ifseqformula "2"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "ifthenelse_split" (formula "11") (term "0"))
                                                   (branch "case_study.SortedListNode.tail = self TRUE"
                                                      (rule "hideAuxiliaryEq" (formula "12"))
                                                      (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "11"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "hideAuxiliaryEq" (formula "12"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "10"))
                                                      (rule "cut_direct" (formula "48") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "2") (term "0"))
                                                         (rule "close" (formula "53") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                   )
                                                   (branch "case_study.SortedListNode.tail = self FALSE"
                                                      (rule "hideAuxiliaryEq" (formula "11"))
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "hideAuxiliaryEq" (formula "11"))
                                                      (rule "cut_direct" (formula "50") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "3") (term "0"))
                                                         (rule "close" (formula "54") (ifseqformula "3"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "55")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "replace_known_right" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "ifthenelse_split" (formula "14") (term "0"))
                                          (branch " ¬case_study.SortedListNode.tail = null ∧ ¬case_study.SortedListNode.tail.<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "referencedObjectIsCreatedRight" (formula "55") (ifseqformula "56"))
                                             (rule "close" (formula "55") (ifseqformula "18"))
                                          )
                                          (branch " ¬case_study.SortedListNode.tail = null ∧ ¬case_study.SortedListNode.tail.<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "applyEqReverse" (formula "47") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "applyEqReverse" (formula "12") (term "0,0,0,0,1,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "12") (term "0,0,0,1,0,0,0") (ifseqformula "11"))
                                             (rule "applyEqReverse" (formula "47") (term "0,0,0,1,0,0,0") (ifseqformula "11"))
                                             (rule "hideAuxiliaryEq" (formula "11"))
                                             (rule "commute_or" (formula "11") (term "1,0,0,0"))
                                             (rule "commute_or" (formula "46") (term "1,0,0,0"))
                                             (rule "cut_direct" (formula "52") (term "0,0"))
                                             (branch "CUT: case_study.SortedListNode.tail = null TRUE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "replace_known_left" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "replace_known_left" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "true_left" (formula "43"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "56"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "49"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "8"))
                                                      (rule "hideAuxiliaryEq" (formula "8"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "47") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "51") (term "1,0"))
                                                      (rule "close" (formula "51") (ifseqformula "13"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "53") (term "0"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "47") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "5"))
                                                         (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "3") (term "1,0"))
                                                         (rule "applyEq" (formula "50") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "50") (term "1,0"))
                                                         (rule "close" (formula "50") (ifseqformula "13"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "applyEq" (formula "47") (term "0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "47"))
                                                            (rule "false_right" (formula "47"))
                                                            (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "6"))
                                                            (rule "castDel" (formula "53") (term "1,0"))
                                                            (rule "close" (formula "53") (ifseqformula "14"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "eqSymm" (formula "58"))
                                                            (rule "cut_direct" (formula "50") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "5") (term "1,0"))
                                                               (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "55") (term "0"))
                                                               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "54") (term "1,0"))
                                                               (rule "close" (formula "54") (ifseqformula "12"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "false_right" (formula "47"))
                                                               (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "false_right" (formula "47"))
                                                               (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "48"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "false_right" (formula "46"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "27"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,0,1") (ifseqformula "30"))
                                                               (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "12"))
                                                               (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "4"))
                                                               (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "true_left" (formula "5"))
                                                               (rule "applyEqRigid" (formula "53") (term "1,0") (ifseqformula "1"))
                                                               (rule "close" (formula "53") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "cut_direct" (formula "48") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "55") (term "0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "55")))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "55") (term "1,0"))
                                                      (rule "close" (formula "55") (ifseqformula "15"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "54")))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: case_study.SortedListNode.tail = null FALSE"
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "notRight" (formula "53"))
                                                (rule "replace_known_right" (formula "47") (term "0,0,1,0,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "53")) (ifInst ""  (formula "1")) (ifInst ""  (formula "53")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "47"))
                                                (rule "hideAuxiliaryEq" (formula "47"))
                                                (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "52")) (ifInst ""  (formula "1")) (ifInst ""  (formula "52")) (ifInst ""  (formula "1")))
                                                (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "51")))
                                                (rule "true_left" (formula "43"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "59"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "ifthenelse_split" (formula "14") (term "0"))
                                                   (branch "case_study.SortedListNode.tail = self TRUE"
                                                      (rule "hideAuxiliaryEq" (formula "15"))
                                                      (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "hideAuxiliaryEq" (formula "13"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "12"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "53") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "53") (term "1,0"))
                                                         (rule "close" (formula "53") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "6"))
                                                            (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "4"))
                                                            (rule "castDel" (formula "54") (term "1,0"))
                                                            (rule "close" (formula "54") (ifseqformula "13"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "ifthenelse_split" (formula "5") (term "0"))
                                                            (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                               (rule "andLeft" (formula "5"))
                                                               (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "false_right" (formula "47"))
                                                               (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "5"))
                                                               (rule "castDel" (formula "55") (term "1,0"))
                                                               (rule "close" (formula "55") (ifseqformula "14"))
                                                            )
                                                            (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                               (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "eqSymm" (formula "58"))
                                                               (rule "cut_direct" (formula "50") (term "1"))
                                                               (branch "CUT: o_0 = self TRUE"
                                                                  (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "1"))
                                                                  (rule "castDel" (formula "55") (term "0"))
                                                                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "54") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "castDel" (formula "54") (term "1,0"))
                                                                  (rule "close" (formula "54") (ifseqformula "12"))
                                                               )
                                                               (branch "CUT: o_0 = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "false_right" (formula "51"))
                                                                  (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "false_right" (formula "47"))
                                                                  (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "49"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "false_right" (formula "47"))
                                                                  (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "false_right" (formula "46"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0,0") (ifseqformula "30"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "27"))
                                                                  (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "3"))
                                                                  (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "1"))
                                                                  (rule "close" (formula "53") (ifseqformula "2"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "case_study.SortedListNode.tail = self FALSE"
                                                      (rule "hideAuxiliaryEq" (formula "14"))
                                                      (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "hideAuxiliaryEq" (formula "13"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "55") (term "0"))
                                                         (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "5"))
                                                         (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "3") (term "1,0"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "false_right" (formula "47"))
                                                         (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "52") (term "1,0"))
                                                         (rule "close" (formula "52") (ifseqformula "13"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "4"))
                                                            (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "12"))
                                                            (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "55") (term "1,0"))
                                                            (rule "close" (formula "55") (ifseqformula "13"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "ifthenelse_split" (formula "6") (term "0"))
                                                            (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "5"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "false_right" (formula "50"))
                                                               (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "6"))
                                                               (rule "castDel" (formula "57") (term "1,0"))
                                                               (rule "close" (formula "57") (ifseqformula "14"))
                                                            )
                                                            (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                               (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "6"))
                                                               (rule "hideAuxiliaryEq" (formula "6"))
                                                               (rule "eqSymm" (formula "60"))
                                                               (rule "cut_direct" (formula "52") (term "1"))
                                                               (branch "CUT: o_0 = self TRUE"
                                                                  (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "48"))
                                                                  (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "castDel" (formula "5") (term "1,0"))
                                                                  (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "57") (term "0,0") (ifseqformula "1"))
                                                                  (rule "castDel" (formula "57") (term "0"))
                                                                  (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "1"))
                                                                  (rule "castDel" (formula "56") (term "1,0"))
                                                                  (rule "close" (formula "56") (ifseqformula "12"))
                                                               )
                                                               (branch "CUT: o_0 = self FALSE"
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "false_right" (formula "53"))
                                                                  (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "52"))
                                                                   (builtin "One Step Simplification" (formula "47"))
                                                                  (rule "false_right" (formula "47"))
                                                                  (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "51"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "false_right" (formula "46"))
                                                                  (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "false_right" (formula "46"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "1,0,1") (ifseqformula "30"))
                                                                  (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0,0") (ifseqformula "27"))
                                                                  (rule "ineffectiveCast" (formula "54") (term "0") (ifseqformula "4"))
                                                                  (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "applyEqRigid" (formula "55") (term "1,0") (ifseqformula "1"))
                                                                  (rule "close" (formula "55") (ifseqformula "3"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "ifthenelse_split" (formula "12") (term "0"))
                                                   (branch "case_study.SortedListNode.tail = self TRUE"
                                                      (rule "hideAuxiliaryEq" (formula "13"))
                                                      (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "12"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "hideAuxiliaryEq" (formula "11"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "48") (term "0") (ifseqformula "10"))
                                                      (rule "cut_direct" (formula "48") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "55") (term "0,0") (ifseqformula "1"))
                                                         (rule "typeEqDerived" (formula "48") (term "0,1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                          (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "55")))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "55") (term "1,0"))
                                                         (rule "close" (formula "55") (ifseqformula "15"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "47"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "46"))
                                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "case_study.SortedListNode.tail = self FALSE"
                                                      (rule "hideAuxiliaryEq" (formula "12"))
                                                      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "hideAuxiliaryEq" (formula "11"))
                                                      (rule "cut_direct" (formula "50") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "57") (term "0,0") (ifseqformula "1"))
                                                         (rule "typeEqDerived" (formula "49") (term "0,1,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "57")))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEq" (formula "49") (term "0,1,0,1") (ifseqformula "1"))
                                                         (rule "castDel" (formula "49") (term "1,0,1"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "57") (term "1,0"))
                                                         (rule "close" (formula "57") (ifseqformula "15"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "49"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "48"))
                                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                                         (rule "closeFalse" (formula "4"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch " (self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                    (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "63") (term "1,1,0") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "48"))
                                    (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "48"))
                                    (rule "hideAuxiliaryEq" (formula "48"))
                                    (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,1,1,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "18") (term "1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,0,1,0,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,0,1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "58") (term "1,2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "58") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "16") (term "1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "61") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "58") (term "1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "19") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "0,0,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,0,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "58") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "0,0,1,1,0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "15") (term "1,0,1,1,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "60") (term "0,0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,0,1,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "63") (term "0,0,0") (ifseqformula "13"))
                                    (rule "applyEqReverse" (formula "59") (term "1,0,1,1,0,0,0") (ifseqformula "13"))
                                    (rule "hideAuxiliaryEq" (formula "13"))
                                    (rule "eqSymm" (formula "17") (term "0,0"))
                                    (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "69"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "63") (term "0,1,0") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "49") (term "0,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "61") (term "0,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "62") (term "1,1,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "63") (term "1,1,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "20") (term "1,1,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "59") (term "0,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "19") (term "0,1") (ifseqformula "47"))
                                    (rule "applyEqReverse" (formula "21") (term "1,1,1") (ifseqformula "47"))
                                    (rule "hideAuxiliaryEq" (formula "47"))
                                    (rule "eqSymm" (formula "15") (term "0,0"))
                                    (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "replace_known_right" (formula "59") (term "1,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "replace_known_right" (formula "58") (term "1,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "replace_known_right" (formula "20") (term "1,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "replace_known_right" (formula "61") (term "1,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "replace_known_right" (formula "18") (term "1,0") (ifseqformula "68"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_homoEq" (formula "21") (term "1"))
                                    (rule "polySimp_homoEq" (formula "20") (term "1"))
                                    (rule "polySimp_homoEq" (formula "62") (term "1"))
                                    (rule "polySimp_homoEq" (formula "61") (term "1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "62") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "61") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "inEqSimp_commuteGeq" (formula "19") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "59") (term "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "60") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                    (rule "applyEq" (formula "62") (term "1,0,1") (ifseqformula "48"))
                                    (rule "add_zero_right" (formula "62") (term "0,1"))
                                    (rule "applyEq" (formula "62") (term "0,0") (ifseqformula "48"))
                                    (rule "equal_literals" (formula "62") (term "0"))
                                     (builtin "One Step Simplification" (formula "62"))
                                    (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "48"))
                                    (rule "equal_literals" (formula "58") (term "1"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "notLeft" (formula "58"))
                                    (rule "replace_known_right" (formula "16") (term "0,0,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "replace_known_right" (formula "57") (term "0,0,0,1,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                                    (rule "replace_known_right" (formula "14") (term "0,0,0,1,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")))
                                    (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "56") (term "0,0,0,0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "56"))
                                    (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "60"))
                                    (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "67"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "18"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "57"))
                                     (builtin "One Step Simplification" (formula "58"))
                                    (rule "true_left" (formula "58"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "ifthenelse_negated" (formula "16") (term "0"))
                                    (rule "ifthenelse_negated" (formula "13") (term "0"))
                                    (rule "ifthenelse_negated" (formula "54") (term "0"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "46"))
                                    (rule "add_zero_right" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "46"))
                                    (rule "add_zero_right" (formula "57") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "57"))
                                    (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                    (rule "polySimp_elimOne" (formula "57") (term "0"))
                                    (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "57"))
                                    (rule "applyEq" (formula "55") (term "1") (ifseqformula "57"))
                                    (rule "ifEqualsInteger" (formula "55"))
                                    (rule "polySimp_sepNegMonomial" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "19"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "equal_literals" (formula "17") (term "1"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "62"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "applyEqReverse" (formula "17") (term "1") (ifseqformula "15"))
                                    (rule "hideAuxiliaryEq" (formula "15"))
                                    (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "53"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "44") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "44"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "commute_and" (formula "4") (term "0,0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "72") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "72"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "63"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "59"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "70") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "70") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "69"))
                                        (builtin "One Step Simplification" (formula "70"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "70"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "70") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "59"))
                                       (rule "false_right" (formula "59"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "15"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "applyEqRigid" (formula "4") (term "2,1,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "4") (term "1,0") (ifseqformula "34"))
                                       (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "66") (term "1,0"))
                                       (rule "close" (formula "66") (ifseqformula "16"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "commute_and" (formula "52") (term "0"))
                                       (rule "cut_direct" (formula "69") (term "0,1,0"))
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null TRUE"
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "false_right" (formula "70"))
                                          (rule "replace_known_left" (formula "4") (term "0,1,0,0,0,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "orLeft" (formula "52"))
                                          (branch " (self.tail@heap).tail.tail.size@anon_heap___insertTail_trampoline«anonHeapFunction» = -1 ∧ ( ¬java_lang_Object_created__3«selectSK» = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE)"
                                             (rule "andLeft" (formula "52"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "53"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "42"))
                                             (rule "ifthenelse_split" (formula "12") (term "0"))
                                             (branch " ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                                (rule "hideAuxiliaryEq" (formula "13"))
                                                (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEqReverse" (formula "52") (term "0,0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                                (rule "true_left" (formula "52"))
                                                (rule "hideAuxiliaryEq" (formula "11"))
                                                (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "hideAuxiliaryEq" (formula "49"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "15"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "65") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "closeTrue" (formula "65"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "cut_direct" (formula "57") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "2") (term "0"))
                                                      (rule "close" (formula "66") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "66")))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                             (branch " ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "hideAuxiliaryEq" (formula "49"))
                                                (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEqReverse" (formula "50") (term "0,0,0,0") (ifseqformula "11"))
                                                (rule "hideAuxiliaryEq" (formula "11"))
                                                (rule "replace_known_right" (formula "49") (term "1,0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "56") (term "0,0,1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "64") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "cut_direct" (formula "57") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "2") (term "0"))
                                                      (rule "close" (formula "66") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "66")))
                                                      (rule "closeFalse" (formula "4"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬( ¬java_lang_Object_created__3«selectSK» = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) ∧ case_study_SortedListNode_size_13«selectSK» = -1"
                                             (rule "andLeft" (formula "52"))
                                             (rule "notLeft" (formula "52"))
                                             (rule "orRight" (formula "60"))
                                             (rule "orRight" (formula "60"))
                                             (rule "notRight" (formula "60"))
                                             (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "61"))
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "60")))
                                             (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "12"))
                                             (rule "close" (formula "60") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: (case_study.SortedListNode)(o_0) = null FALSE"
                                           (builtin "One Step Simplification" (formula "70"))
                                          (rule "replace_known_right" (formula "3") (term "0,1,0,0,0,0") (ifseqformula "69"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "orLeft" (formula "52"))
                                          (branch " (self.tail@heap).tail.tail.size@anon_heap___insertTail_trampoline«anonHeapFunction» = -1 ∧ ( ¬java_lang_Object_created__3«selectSK» = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE)"
                                             (rule "andLeft" (formula "52"))
                                             (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "20"))
                                             (rule "inEqSimp_commuteLeq" (formula "42"))
                                             (rule "inEqSimp_commuteLeq" (formula "53"))
                                             (rule "ifthenelse_split" (formula "12") (term "0"))
                                             (branch " ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                                                (rule "hideAuxiliaryEq" (formula "13"))
                                                (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "hideAuxiliaryEq" (formula "50"))
                                                (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEqReverse" (formula "51") (term "0,0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "12")) (ifInst ""  (formula "12")))
                                                (rule "true_left" (formula "51"))
                                                (rule "hideAuxiliaryEq" (formula "11"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "69") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "69"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "58"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "66") (term "0"))
                                                      (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "66") (term "1,0"))
                                                      (rule "close" (formula "66") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "57") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "57"))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "66") (term "0"))
                                                         (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "14"))
                                                          (builtin "One Step Simplification" (formula "68"))
                                                         (rule "closeTrue" (formula "68"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "4"))
                                                            (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "4"))
                                                            (rule "castDel" (formula "64") (term "1,0"))
                                                            (rule "close" (formula "64") (ifseqformula "14"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "71"))
                                                            (rule "cut_direct" (formula "59") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "applyEq" (formula "69") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "69") (term "1,0"))
                                                               (rule "close" (formula "69") (ifseqformula "14"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "false_right" (formula "60"))
                                                               (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "59"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "false_right" (formula "56"))
                                                               (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "false_right" (formula "55"))
                                                               (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "false_right" (formula "55"))
                                                               (rule "cut_direct" (formula "44") (term "0"))
                                                               (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                                                   (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "true_left" (formula "45"))
                                                                  (rule "cut_direct" (formula "45") (term "0"))
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "ineffectiveCast" (formula "65") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "66") (ifseqformula "2"))
                                                                  )
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "ineffectiveCast" (formula "66") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "67") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "67") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "cut_direct" (formula "45") (term "0"))
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "ineffectiveCast" (formula "66") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "66") (ifseqformula "2"))
                                                                  )
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "ineffectiveCast" (formula "67") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "68") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "57") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "68")))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "67") (term "0"))
                                                      (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "67") (term "1,0"))
                                                      (rule "close" (formula "67") (ifseqformula "16"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch " ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "applyEqReverse" (formula "51") (term "0,0,0,0") (ifseqformula "11"))
                                                (rule "hideAuxiliaryEq" (formula "11"))
                                                (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "hideAuxiliaryEq" (formula "48"))
                                                (rule "replace_known_right" (formula "49") (term "1,0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "69") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "69"))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "69"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "57"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "69") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "69") (term "1,0"))
                                                      (rule "close" (formula "69") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "68") (term "1,0"))
                                                         (rule "close" (formula "68") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "56"))
                                                            (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "59"))
                                                            (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "false_right" (formula "55"))
                                                            (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "false_right" (formula "55"))
                                                            (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "4"))
                                                            (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "67") (term "1,0"))
                                                            (rule "close" (formula "67") (ifseqformula "14"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "71"))
                                                            (rule "cut_direct" (formula "59") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "applyEq" (formula "68") (term "0,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "68") (term "0"))
                                                               (rule "applyEq" (formula "69") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "4") (term "1,0"))
                                                               (rule "applyEq" (formula "69") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "68") (term "1,0"))
                                                               (rule "close" (formula "68") (ifseqformula "13"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "false_right" (formula "60"))
                                                               (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "59"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "57"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "cut_direct" (formula "43") (term "0"))
                                                               (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "cut_direct" (formula "44") (term "0"))
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "ineffectiveCast" (formula "65") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "65") (ifseqformula "2"))
                                                                  )
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "ineffectiveCast" (formula "66") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqRigid" (formula "66") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "66") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "cut_direct" (formula "44") (term "0"))
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "true_left" (formula "45"))
                                                                     (rule "ineffectiveCast" (formula "66") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEqRigid" (formula "67") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "67") (ifseqformula "2"))
                                                                  )
                                                                  (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "ineffectiveCast" (formula "67") (term "0") (ifseqformula "3"))
                                                                     (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                                     (rule "close" (formula "67") (ifseqformula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "57") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "68") (term "0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "56") (term "0,1,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "68"))
                                                       (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "68")))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "56") (term "0,1,0,1") (ifseqformula "1"))
                                                      (rule "castDel" (formula "56") (term "1,0,1"))
                                                      (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "67") (term "0"))
                                                      (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "67") (term "1,0"))
                                                      (rule "close" (formula "67") (ifseqformula "15"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "56"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬( ¬java_lang_Object_created__3«selectSK» = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) ∧ case_study_SortedListNode_size_13«selectSK» = -1"
                                             (rule "andLeft" (formula "52"))
                                             (rule "notLeft" (formula "52"))
                                             (rule "orRight" (formula "60"))
                                             (rule "orRight" (formula "60"))
                                             (rule "notRight" (formula "60"))
                                             (rule "replace_known_left" (formula "13") (term "0,0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                             (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "13"))
                                             (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "12"))
                                             (rule "close" (formula "60") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: self.size = 1 FALSE"
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "notLeft" (formula "60"))
                        (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "replace_known_right" (formula "58") (term "0,1,1,0,0,0") (ifseqformula "85"))
                         (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "85")) (ifInst ""  (formula "85")))
                        (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "77") (term "1,1,0") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "76") (term "1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "19") (term "2,0") (ifseqformula "58"))
                        (rule "hideAuxiliaryEq" (formula "58"))
                        (rule "replace_known_right" (formula "13") (term "0,1,1,0,0,0") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "84")) (ifInst ""  (formula "84")))
                        (rule "replace_known_right" (formula "58") (term "0,0,0,1,0,0") (ifseqformula "84"))
                         (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "84")) (ifInst ""  (formula "84")))
                        (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "74") (term "0,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "76") (term "0,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "60") (term "1,1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "78") (term "0,1,0") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "59") (term "1,1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "77") (term "1,1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "78") (term "1,1,1") (ifseqformula "58"))
                        (rule "hideAuxiliaryEq" (formula "58"))
                        (rule "replace_known_right" (formula "16") (term "0,1,1,0,0,0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "83")) (ifInst ""  (formula "83")))
                        (rule "applyEqReverse" (formula "72") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "71") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "68") (term "1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "69") (term "0,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "68") (term "0,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "1,0,1,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "68") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "68") (term "1,2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "1,0,1,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "0,0,1,1,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "76") (term "0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "71") (term "1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "1,0,1,0,1,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "0,0,0,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "74") (term "0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "69") (term "1,1,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "69") (term "1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "1,0,1,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "71") (term "1,2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "71") (term "0,0,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "70") (term "1,0,1,1,0,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "72") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "69") (term "1,2,0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "73") (term "0,0,0,0") (ifseqformula "16"))
                        (rule "hideAuxiliaryEq" (formula "16"))
                        (rule "replace_known_right" (formula "60") (term "0") (ifseqformula "83"))
                         (builtin "One Step Simplification" (formula "60"))
                        (rule "replace_known_right" (formula "59") (term "0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "60")))
                        (rule "true_left" (formula "59"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_right" (formula "58") (term "0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "58"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "56"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "82"))
                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
                        (rule "true_left" (formula "11"))
                        (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "80"))
                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "57")))
                        (rule "true_left" (formula "56"))
                        (rule "replace_known_right" (formula "83") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "83"))
                        (rule "notRight" (formula "83"))
                        (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "81"))
                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
                        (rule "true_left" (formula "10"))
                        (rule "replace_known_right" (formula "29") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "28") (term "1,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_right" (formula "69") (term "1,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "69"))
                        (rule "replace_known_right" (formula "70") (term "1,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "70"))
                        (rule "replace_known_right" (formula "71") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "71"))
                        (rule "replace_known_right" (formula "72") (term "1,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "72"))
                        (rule "replace_known_right" (formula "27") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "26"))
                        (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "79"))
                         (builtin "One Step Simplification" (formula "73"))
                        (rule "replace_known_left" (formula "11") (term "0,1,0,0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "polySimp_homoEq" (formula "56"))
                        (rule "polySimp_homoEq" (formula "72") (term "1"))
                        (rule "polySimp_homoEq" (formula "73") (term "1"))
                        (rule "polySimp_addComm1" (formula "56") (term "0"))
                        (rule "polySimp_addComm1" (formula "72") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "73") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "57"))
                        (rule "inEqSimp_commuteGeq" (formula "70") (term "1"))
                        (rule "inEqSimp_commuteGeq" (formula "71") (term "0"))
                        (rule "applyEq" (formula "77") (term "1,3,0,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "77") (term "3,0,0"))
                        (rule "add_literals" (formula "77") (term "0,3,0,0"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1,0"))
                        (rule "add_literals" (formula "16") (term "0,1,0"))
                        (rule "applyEq" (formula "80") (term "0") (ifseqformula "10"))
                        (rule "polySimp_homoEq" (formula "80"))
                        (rule "polySimp_mulComm0" (formula "80") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "80") (term "1,0"))
                        (rule "mul_literals" (formula "80") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "80") (term "0"))
                        (rule "add_literals" (formula "80") (term "0,0"))
                        (rule "add_zero_left" (formula "80") (term "0"))
                        (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                        (rule "add_literals" (formula "6") (term "0,1,0"))
                        (rule "applyEq" (formula "44") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "44"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "44") (term "0"))
                        (rule "add_literals" (formula "44") (term "0,0"))
                        (rule "add_zero_left" (formula "44") (term "0"))
                        (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                        (rule "add_literals" (formula "24") (term "0,1,0"))
                        (rule "applyEq" (formula "14") (term "1,3,0") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "14") (term "3,0"))
                        (rule "add_literals" (formula "14") (term "0,3,0"))
                        (rule "applyEq" (formula "56") (term "0,1,0,0") (ifseqformula "10"))
                        (rule "polySimp_mulComm0" (formula "56") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "56") (term "1,0,0"))
                        (rule "mul_literals" (formula "56") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "56") (term "0,0"))
                        (rule "add_literals" (formula "56") (term "0,0,0"))
                        (rule "add_zero_left" (formula "56") (term "0,0"))
                        (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "10"))
                        (rule "polySimp_addAssoc" (formula "37") (term "1"))
                        (rule "add_literals" (formula "37") (term "0,1"))
                        (rule "add_zero_left" (formula "37") (term "1"))
                        (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "77") (term "1,3,0,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "80") (term "0,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "44") (term "0,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "28") (term "1,1,1") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "14") (term "1,3,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "56") (term "0,0,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "25") (term "0,1") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "29") (term "1,1,1") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "10") (term "1,1") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "37"))
                        (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "37"))
                        (rule "hideAuxiliaryEq" (formula "37"))
                        (rule "polySimp_homoEq" (formula "28") (term "1"))
                        (rule "polySimp_homoEq" (formula "29") (term "1"))
                        (rule "polySimp_homoEq" (formula "10"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "29") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "71") (term "1"))
                        (rule "polySimp_mulComm0" (formula "71") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "71") (term "1,1"))
                        (rule "mul_literals" (formula "71") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "71") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "71") (term "1,1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "72") (term "1"))
                        (rule "polySimp_mulComm0" (formula "72") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "72") (term "1,1"))
                        (rule "mul_literals" (formula "72") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "72") (term "1,1,1"))
                        (rule "polySimp_invertEq" (formula "79"))
                        (rule "mul_literals" (formula "79") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                        (rule "polySimp_elimOne" (formula "79") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "55"))
                        (rule "polySimp_mulLiterals" (formula "55") (term "1"))
                        (rule "polySimp_elimOne" (formula "55") (term "1"))
                        (rule "applyEq" (formula "68") (term "0,1") (ifseqformula "55"))
                        (rule "applyEq" (formula "72") (term "0,1") (ifseqformula "55"))
                        (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "55"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "polySimp_homoEq" (formula "16") (term "1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,1"))
                        (rule "add_literals" (formula "16") (term "0,1"))
                        (rule "equal_literals" (formula "16") (term "1"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "77"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "hideAuxiliaryEq" (formula "11"))
                        (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "76"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "23") (term "0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "20") (term "0,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "22") (term "1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "1,1,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "21") (term "0,0,1,1,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "17") (term "1,2,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "20") (term "1,2,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "18") (term "1,0,1,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "16") (term "1,2,0") (ifseqformula "14"))
                        (rule "hideAuxiliaryEq" (formula "14"))
                        (rule "eqSymm" (formula "18") (term "0,0"))
                        (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "74"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "9") (term "1") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "23") (term "1,0") (ifseqformula "14"))
                        (rule "hideAuxiliaryEq" (formula "14"))
                        (rule "eqSymm" (formula "20") (term "0,0"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "9"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "0"))
                        (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "49"))
                        (rule "applyEq" (formula "65") (term "0,1") (ifseqformula "49"))
                        (rule "applyEq" (formula "64") (term "0,1") (ifseqformula "49"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "60"))
                        (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
                        (rule "hideAuxiliaryEq" (formula "17"))
                        (rule "applyEq" (formula "56") (term "0") (ifseqformula "13"))
                        (rule "applyEqReverse" (formula "58") (term "0,0,0,1,0,0,0,0") (ifseqformula "56"))
                        (rule "applyEqReverse" (formula "58") (term "0,0,0,0,1,0,0,0") (ifseqformula "56"))
                        (rule "applyEqReverse" (formula "60") (term "0,0,0,0,1,0,0,0") (ifseqformula "56"))
                        (rule "applyEqReverse" (formula "60") (term "0,0,0,1,0,0,0,0") (ifseqformula "56"))
                        (rule "hideAuxiliaryEq" (formula "56"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "56"))
                        (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                        (rule "hideAuxiliaryEq" (formula "14"))
                        (rule "applyEq" (formula "58") (term "0") (ifseqformula "16"))
                        (rule "applyEqReverse" (formula "63") (term "1,1,1") (ifseqformula "58"))
                        (rule "applyEqReverse" (formula "62") (term "1,1,1") (ifseqformula "58"))
                        (rule "hideAuxiliaryEq" (formula "58"))
                        (rule "applyEq" (formula "56") (term "0") (ifseqformula "14"))
                        (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "56"))
                        (rule "applyEqReverse" (formula "59") (term "1,1") (ifseqformula "56"))
                        (rule "hideAuxiliaryEq" (formula "56"))
                        (rule "polySimp_sepPosMonomial" (formula "20") (term "1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1"))
                        (rule "mul_literals" (formula "20") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                        (rule "polySimp_sepPosMonomial" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "mul_literals" (formula "9") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                        (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "20") (term "1"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                        (rule "add_literals" (formula "20") (term "0,0,0,1"))
                        (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "9"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1,0"))
                        (rule "add_literals" (formula "6") (term "0,1,0"))
                        (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "59") (term "1"))
                        (rule "polySimp_mulComm0" (formula "59") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "59") (term "1,0,1"))
                        (rule "mul_literals" (formula "59") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "59") (term "0,1"))
                        (rule "add_literals" (formula "59") (term "0,0,1"))
                        (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "60") (term "1"))
                        (rule "polySimp_mulComm0" (formula "60") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "60") (term "1,0,1"))
                        (rule "mul_literals" (formula "60") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "60") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "60") (term "0,0,1"))
                        (rule "add_literals" (formula "60") (term "0,0,0,1"))
                        (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "21") (term "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "0,0,0,1"))
                        (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "9"))
                        (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                        (rule "add_literals" (formula "12") (term "0,3,0"))
                        (rule "applyEq" (formula "61") (term "0,0") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "61") (term "0"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,0"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,0"))
                        (rule "add_literals" (formula "61") (term "0,0,0"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "9"))
                        (rule "polySimp_addAssoc" (formula "17") (term "1,0"))
                        (rule "add_literals" (formula "17") (term "0,1,0"))
                        (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "19") (term "1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                        (rule "add_literals" (formula "19") (term "0,0,1"))
                        (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "9"))
                        (rule "polySimp_mulComm0" (formula "35") (term "0"))
                        (rule "polySimp_rightDist" (formula "35") (term "0"))
                        (rule "mul_literals" (formula "35") (term "0,0"))
                        (rule "applyEq" (formula "69") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "65") (term "1,3,0,0") (ifseqformula "9"))
                        (rule "polySimp_addAssoc" (formula "65") (term "3,0,0"))
                        (rule "add_literals" (formula "65") (term "0,3,0,0"))
                        (rule "applyEq" (formula "57") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "57") (term "1"))
                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "57") (term "1,0,1"))
                        (rule "mul_literals" (formula "57") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "57") (term "0,1"))
                        (rule "add_literals" (formula "57") (term "0,0,1"))
                        (rule "applyEq" (formula "61") (term "0,1") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "61") (term "1"))
                        (rule "polySimp_mulComm0" (formula "61") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "61") (term "1,0,1"))
                        (rule "mul_literals" (formula "61") (term "0,1,0,1"))
                        (rule "polySimp_addAssoc" (formula "61") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "61") (term "0,0,1"))
                        (rule "add_literals" (formula "61") (term "0,0,0,1"))
                        (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "9"))
                        (rule "polySimp_homoEq" (formula "21") (term "0"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0"))
                        (rule "applyEq" (formula "47") (term "1") (ifseqformula "9"))
                        (rule "polySimp_sepNegMonomial" (formula "20") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "59") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "59") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "59") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "60") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "60") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "60") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "21") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "61") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "61") (term "0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "19") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "69"))
                        (rule "mul_literals" (formula "69") (term "1"))
                        (rule "polySimp_sepNegMonomial" (formula "57") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "57") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "57") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "61") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "61") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "61") (term "0,1"))
                        (rule "polySimp_sepNegMonomial" (formula "21") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                        (rule "polySimp_elimOne" (formula "35") (term "0"))
                        (rule "inEqSimp_strengthen1" (formula "35") (ifseqformula "69"))
                        (rule "add_literals" (formula "35") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "69") (ifseqformula "35"))
                        (rule "mul_literals" (formula "69") (term "1,0,0"))
                        (rule "add_literals" (formula "69") (term "0,0"))
                        (rule "leq_literals" (formula "69") (term "0"))
                         (builtin "One Step Simplification" (formula "69"))
                        (rule "false_right" (formula "69"))
                        (rule "commute_and_2" (formula "73"))
                        (rule "commute_and" (formula "6") (term "0,0"))
                        (rule "commute_and" (formula "5") (term "0,0"))
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "commute_and_2" (formula "3") (term "0,0"))
                        (rule "commute_and" (formula "7") (term "0,0,0"))
                        (rule "commute_and" (formula "2") (term "0,0,0"))
                        (rule "cut_direct" (formula "74") (term "0,0"))
                        (branch "CUT: o_0 = null TRUE"
                           (rule "typeEqDerived" (formula "74") (term "0,1,0") (ifseqformula "1"))
                           (rule "typeEqDerived" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "75"))
                            (builtin "One Step Simplification" (formula "74"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "false_right" (formula "75"))
                           (rule "applyEq" (formula "74") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "castDel" (formula "74") (term "0,0,1"))
                            (builtin "One Step Simplification" (formula "74"))
                           (rule "false_right" (formula "74"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "1,0,0,0"))
                           (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "73"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "4") (term "1,0,0"))
                           (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "72"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "5") (term "1,0,0"))
                           (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "71"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "5") (term "0,1,0,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "5") (term "1,0,0,0"))
                           (rule "replace_known_right" (formula "5") (term "1,0,0,0") (ifseqformula "70"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "castDel" (formula "3") (term "0,0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "3") (term "1,0,0"))
                           (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "68"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "eqSymm" (formula "68"))
                           (rule "applyEqRigid" (formula "68") (term "1,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "closeTrue" (formula "68"))
                        )
                        (branch "CUT: o_0 = null FALSE"
                            (builtin "One Step Simplification" (formula "75"))
                           (rule "notRight" (formula "75"))
                           (rule "ifthenelse_split" (formula "57") (term "0"))
                           (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE TRUE"
                              (rule "andLeft" (formula "57"))
                              (rule "notLeft" (formula "57"))
                              (rule "notLeft" (formula "57"))
                              (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "57"))
                              (rule "hideAuxiliaryEq" (formula "57"))
                              (rule "replace_known_right" (formula "15") (term "0,0,0,0,0,0") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")) (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                              (rule "replace_known_right" (formula "17") (term "1,0,1,0,0") (ifseqformula "67"))
                               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "68")) (ifInst ""  (formula "68")) (ifInst ""  (formula "67")) (ifInst ""  (formula "68")))
                              (rule "replace_known_right" (formula "56") (term "0,0,0,0") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "67")))
                              (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "56"))
                              (rule "hideAuxiliaryEq" (formula "56"))
                              (rule "replace_known_right" (formula "14") (term "0,1,0,0") (ifseqformula "66"))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "67")))
                              (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "applyEqReverse" (formula "15") (term "0,0,0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEqReverse" (formula "60") (term "1,1,1") (ifseqformula "17"))
                              (rule "applyEqReverse" (formula "59") (term "1,1,1") (ifseqformula "17"))
                              (rule "applyEqReverse" (formula "18") (term "2,0") (ifseqformula "17"))
                              (rule "applyEqReverse" (formula "58") (term "1,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "16") (term "2,0") (ifseqformula "15"))
                              (rule "applyEqReverse" (formula "57") (term "1,1") (ifseqformula "15"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "hideAuxiliaryEq" (formula "16"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "64"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "64"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "52"))
                              (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "63"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "54"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "true_left" (formula "55"))
                              (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "52"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "true_left" (formula "53"))
                              (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "16"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "polySimp_homoEq" (formula "52"))
                              (rule "polySimp_addComm1" (formula "52") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "51"))
                              (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
                              (rule "add_literals" (formula "13") (term "0,3,0"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "0,0"))
                              (rule "add_zero_left" (formula "31") (term "0"))
                              (rule "applyEq" (formula "56") (term "1,3,0,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "56") (term "3,0,0"))
                              (rule "add_literals" (formula "56") (term "0,3,0,0"))
                              (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                              (rule "add_literals" (formula "7") (term "0,1,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "43") (term "1"))
                              (rule "add_literals" (formula "43") (term "0,1"))
                              (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "34") (term "1"))
                              (rule "add_literals" (formula "34") (term "0,1"))
                              (rule "add_zero_left" (formula "34") (term "1"))
                              (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "43") (term "1,1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "56") (term "1,3,0,0") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "34"))
                              (rule "applyEqReverse" (formula "13") (term "1,3,0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "polySimp_homoEq" (formula "17"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "51"))
                              (rule "polySimp_mulComm0" (formula "51") (term "1"))
                              (rule "polySimp_rightDist" (formula "51") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                              (rule "mul_literals" (formula "51") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                              (rule "applyEq" (formula "15") (term "2,0") (ifseqformula "51"))
                              (rule "polySimp_sepPosMonomial" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                              (rule "mul_literals" (formula "17") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                              (rule "applyEq" (formula "55") (term "1,3,0,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "55") (term "3,0,0"))
                              (rule "add_literals" (formula "55") (term "0,3,0,0"))
                              (rule "applyEq" (formula "13") (term "1,3,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "13") (term "3,0"))
                              (rule "add_literals" (formula "13") (term "0,3,0"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "17"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0"))
                              (rule "polySimp_rightDist" (formula "31") (term "0"))
                              (rule "mul_literals" (formula "31") (term "0,0"))
                              (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                              (rule "add_literals" (formula "7") (term "0,1,0"))
                              (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0,1,0"))
                              (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "17"))
                              (rule "polySimp_addAssoc" (formula "42") (term "1"))
                              (rule "add_literals" (formula "42") (term "0,1"))
                              (rule "applyEq" (formula "15") (term "1") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "polySimp_homoEq" (formula "15") (term "1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,1"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,0,1"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,1"))
                              (rule "add_literals" (formula "15") (term "0,1"))
                              (rule "equal_literals" (formula "15") (term "1"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "notLeft" (formula "15"))
                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "56"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                              (rule "polySimp_elimOne" (formula "28") (term "0"))
                              (rule "commute_and" (formula "63") (term "0"))
                              (rule "commute_and_2" (formula "8") (term "0,0"))
                              (rule "commute_and_2" (formula "3") (term "0,0"))
                              (rule "commute_and_2" (formula "4") (term "0,0,0"))
                              (rule "commute_and_2" (formula "63"))
                              (rule "commute_and_2" (formula "4") (term "0,0"))
                              (rule "cut_direct" (formula "44") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                  (builtin "One Step Simplification" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "cut_direct" (formula "45") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "commute_and" (formula "4") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "4") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "65"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "66"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "64") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "64") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "64"))
                                       (rule "notRight" (formula "64"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "false_right" (formula "54"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEqRigid" (formula "63") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "63") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "50"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "59") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "58") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_left" (formula "65") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "54")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "65"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "61") (term "1,0"))
                                             (rule "close" (formula "61") (ifseqformula "15"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "62") (term "1,0"))
                                                (rule "close" (formula "62") (ifseqformula "16"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                                   (rule "polySimp_homoEq" (formula "64"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "64") (term "0"))
                                                   (rule "add_literals" (formula "64") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "64") (term "1,0"))
                                                   (rule "add_literals" (formula "64") (term "0"))
                                                   (rule "equal_literals" (formula "64"))
                                                   (rule "false_right" (formula "64"))
                                                   (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "61") (term "1,0"))
                                                   (rule "close" (formula "61") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "67"))
                                                   (rule "cut_direct" (formula "55") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "14"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "ineffectiveCast" (formula "62") (term "1,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "62") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                             (rule "eqSymm" (formula "64"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "61") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "notRight" (formula "61"))
                                             (rule "replace_known_left" (formula "52") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,0,1") (ifseqformula "4"))
                                                (rule "castDel" (formula "50") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEqRigid" (formula "51") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "60") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "59") (term "1,0"))
                                                (rule "close" (formula "59") (ifseqformula "13"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "50") (term "0,0,1,0"))
                                                   (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "60"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0,1") (ifseqformula "4"))
                                                   (rule "castDel" (formula "61") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "61") (term "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "61"))
                                                   (rule "notRight" (formula "61"))
                                                   (rule "applyEq" (formula "62") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                   (rule "applyEqRigid" (formula "61") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "13"))
                                                   (rule "polySimp_homoEq" (formula "61"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "61") (term "0"))
                                                   (rule "add_literals" (formula "61") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "61") (term "1,0"))
                                                   (rule "add_zero_right" (formula "61") (term "0"))
                                                   (rule "equal_literals" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "applyEqRigid" (formula "50") (term "1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "50") (term "1,0,1,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "orRight" (formula "50"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "65") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "commute_and" (formula "4") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "4") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "66"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "2,2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "5") (term "2,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "5") (term "0,1,0,0") (ifseqformula "17"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "ifthenelse_negated" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "false_right" (formula "52"))
                                       (rule "applyEqRigid" (formula "64") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "64") (term "1") (ifseqformula "15"))
                                       (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "49"))
                                       (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "62") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "62"))
                                       (rule "applyEq" (formula "63") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "4") (term "2,2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "4") (term "2,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "4") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "60") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "59") (term "1,0"))
                                       (rule "close" (formula "59") (ifseqformula "13"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "5"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "54")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "63") (term "1,0"))
                                             (rule "close" (formula "63") (ifseqformula "15"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "false_right" (formula "55"))
                                                (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "63") (term "1,0"))
                                                (rule "close" (formula "63") (ifseqformula "16"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "52") (term "0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "60") (term "1,0"))
                                                   (rule "close" (formula "60") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "cut_direct" (formula "55") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "13"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "51") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "62") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "62") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "65"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "62") (term "0,1,0,1") (ifseqformula "4"))
                                             (rule "castDel" (formula "62") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "notRight" (formula "62"))
                                             (rule "replace_known_left" (formula "52") (term "0,1,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "63") (term "0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "eqSymm" (formula "62"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "close" (formula "59") (ifseqformula "1"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "50") (term "0,1,0,0,1") (ifseqformula "4"))
                                                (rule "castDel" (formula "50") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "applyEq" (formula "62") (term "0,0,0,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "62") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "51") (term "0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "12"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "closeTrue" (formula "61"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "51") (term "0,0,0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "51") (term "0,0,1,0"))
                                                   (rule "replace_known_right" (formula "51") (term "0,1,0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "4"))
                                                   (rule "castDel" (formula "63") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "notRight" (formula "63"))
                                                   (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "50") (term "1,0,1,1") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "50") (term "1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "4"))
                                                   (rule "polySimp_homoEq" (formula "61"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "61") (term "0"))
                                                   (rule "add_literals" (formula "61") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "61") (term "1,0"))
                                                   (rule "add_zero_right" (formula "61") (term "0"))
                                                   (rule "equal_literals" (formula "61"))
                                                   (rule "false_right" (formula "61"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "66") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "cut_direct" (formula "45") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "commute_and" (formula "4") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "4") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "66"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "67"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqRigid" (formula "5") (term "2,2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "5") (term "2,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,1,1,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "1,0,1,1,0,0"))
                                       (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "hideAuxiliaryEq" (formula "8"))
                                       (rule "applyEqRigid" (formula "66") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "66") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "5") (term "2,1,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "5") (term "1,0") (ifseqformula "33"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "0,0,0,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "62"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "48"))
                                       (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "false_right" (formula "51"))
                                       (rule "applyEq" (formula "61") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "61") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "61"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "60") (term "1,0"))
                                       (rule "close" (formula "60") (ifseqformula "14"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "5"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "54")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "54"))
                                             (rule "false_right" (formula "54"))
                                             (rule "applyEq" (formula "65") (term "0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "2") (term "1,0"))
                                             (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "61") (term "1,0"))
                                             (rule "close" (formula "61") (ifseqformula "14"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "16"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "66") (term "0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "61") (term "1,0"))
                                                   (rule "close" (formula "61") (ifseqformula "14"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "68"))
                                                   (rule "cut_direct" (formula "55") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "66") (term "1,0"))
                                                      (rule "close" (formula "66") (ifseqformula "14"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "ineffectiveCast" (formula "63") (term "1,0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "4") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "62") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "62") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "65"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "51") (term "0,0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "63") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "63") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "63") (term "0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "replace_known_right" (formula "51") (term "0,1") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "62") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEq" (formula "49") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "49") (term "1,0,1"))
                                             (rule "applyEq" (formula "49") (term "0,0,0,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "49") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "3"))
                                             (rule "castDel" (formula "60") (term "1,0"))
                                             (rule "close" (formula "60") (ifseqformula "13"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "false_right" (formula "50"))
                                                (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "12"))
                                                (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "3"))
                                                (rule "castDel" (formula "60") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "applyEq" (formula "61") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "closeTrue" (formula "61"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0,1") (ifseqformula "4"))
                                                   (rule "castDel" (formula "62") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "62") (term "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "62"))
                                                   (rule "notRight" (formula "62"))
                                                   (rule "replace_known_left" (formula "52") (term "0,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "14"))
                                                   (rule "polySimp_homoEq" (formula "62"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "62") (term "0"))
                                                   (rule "add_literals" (formula "62") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "62") (term "1,0"))
                                                   (rule "add_zero_right" (formula "62") (term "0"))
                                                   (rule "equal_literals" (formula "62"))
                                                   (rule "false_right" (formula "62"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "60") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "59") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "66") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "commute_and" (formula "4") (term "0,0,0,0"))
                                    (rule "commute_and_2" (formula "4") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "67") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "67"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "54"))
                                       (rule "false_right" (formula "54"))
                                       (rule "applyEq" (formula "65") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "65") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "18"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "notRight" (formula "65"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "64") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "64") (term "1") (ifseqformula "16"))
                                       (rule "applyEq" (formula "64") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "50"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "60") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_right" (formula "67") (term "0,1,0") (ifseqformula "54"))
                                           (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "3")))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "55") (term "0,1,0") (ifseqformula "53"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "ifthenelse_split" (formula "5") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "5"))
                                             (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "4"))
                                             (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "67"))
                                             (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "5"))
                                             (rule "castDel" (formula "65") (term "1,0"))
                                             (rule "close" (formula "65") (ifseqformula "16"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "5"))
                                                (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "false_right" (formula "55"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "4"))
                                                (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "15"))
                                                (rule "eqSymm" (formula "67"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "65"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "4"))
                                                (rule "castDel" (formula "62") (term "1,0"))
                                                (rule "close" (formula "62") (ifseqformula "14"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "ifthenelse_split" (formula "5") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "5"))
                                                   (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "applyEq" (formula "55") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "52") (term "0"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "62") (term "1,0"))
                                                   (rule "close" (formula "62") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "69"))
                                                   (rule "cut_direct" (formula "55") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "56"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "54") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "65") (term "1,0"))
                                                      (rule "close" (formula "65") (ifseqformula "13"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "ineffectiveCast" (formula "51") (term "0") (ifseqformula "3"))
                                                      (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                                      (rule "close" (formula "64") (ifseqformula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                             (rule "andLeft" (formula "3"))
                                             (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                             (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "66"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "castDel" (formula "64") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "replace_known_right" (formula "51") (term "0,1") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "64") (term "0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEq" (formula "49") (term "0,1,0,1") (ifseqformula "3"))
                                             (rule "castDel" (formula "49") (term "1,0,1"))
                                             (rule "applyEqRigid" (formula "49") (term "0,0,0,0") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "closeTrue" (formula "63"))
                                          )
                                          (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "66"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEq" (formula "52") (term "0,0,1") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "51") (term "0,0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "3"))
                                                (rule "castDel" (formula "63") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "notRight" (formula "63"))
                                                (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "false_right" (formula "51"))
                                                (rule "applyEqRigid" (formula "64") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "64") (term "0") (ifseqformula "14"))
                                                (rule "eqSymm" (formula "64"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "closeTrue" (formula "64"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "4"))
                                                   (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "0,0,1") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "51") (term "0,0,0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0,1") (ifseqformula "4"))
                                                   (rule "castDel" (formula "64") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "64") (term "1") (ifseqformula "14"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "notRight" (formula "64"))
                                                   (rule "replace_known_left" (formula "52") (term "0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "62") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "60") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                   (rule "close" (formula "67") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE FALSE"
                              (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "57"))
                              (rule "hideAuxiliaryEq" (formula "57"))
                              (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "67"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "56"))
                              (rule "hideAuxiliaryEq" (formula "56"))
                              (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "66"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "applyEqReverse" (formula "15") (term "0,0,0,0,1,0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "15"))
                              (rule "applyEqReverse" (formula "17") (term "0,0,0,0,1,0,0,0") (ifseqformula "14"))
                               (builtin "One Step Simplification" (formula "17"))
                              (rule "applyEqReverse" (formula "15") (term "0,0,0,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqReverse" (formula "17") (term "0,0,0,1,0,0,0") (ifseqformula "14"))
                              (rule "hideAuxiliaryEq" (formula "14"))
                              (rule "commute_or" (formula "57"))
                              (rule "commute_or" (formula "19"))
                              (rule "commute_and" (formula "72") (term "0"))
                              (rule "commute_and_2" (formula "72"))
                              (rule "commute_and_2" (formula "8") (term "0,0"))
                              (rule "commute_and_2" (formula "3") (term "0,0"))
                              (rule "commute_or" (formula "14") (term "1,0,0,0"))
                              (rule "commute_or" (formula "16") (term "1,0,0,0"))
                              (rule "commute_and_2" (formula "4") (term "0,0,0"))
                              (rule "commute_and_2" (formula "4") (term "0,0"))
                              (rule "commute_and" (formula "4") (term "0,0,0,0"))
                              (rule "commute_and_2" (formula "4") (term "0,0,0"))
                              (rule "cut_direct" (formula "52") (term "0"))
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null TRUE"
                                  (builtin "One Step Simplification" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "cut_direct" (formula "53") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "74") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "74"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "66")))
                                       (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "75"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "75") (term "2,1") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "75") (term "1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "75") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "75") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "75") (term "0") (ifseqformula "62"))
                                       (rule "applyEq" (formula "65") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "72") (term "0,1,0,1") (ifseqformula "4"))
                                       (rule "castDel" (formula "72") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "72") (term "1") (ifseqformula "25"))
                                        (builtin "One Step Simplification" (formula "72"))
                                       (rule "notRight" (formula "72"))
                                       (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "72") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "68") (term "0") (ifseqformula "5"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "close" (formula "68") (ifseqformula "27"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "19") (term "0"))
                                       (branch "CUT: self.size = 2 TRUE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "53") (term "1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "53") (term "0,1"))
                                          (rule "applyEq" (formula "11") (term "1,3,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "11") (term "3,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "15") (term "1,0"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "17") (term "1"))
                                          (rule "mul_literals" (formula "17") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "17") (term "0,1"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "56") (term "1,3,0,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "56") (term "3,0,0"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "43") (term "1"))
                                          (rule "applyEq" (formula "54") (term "1") (ifseqformula "18"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "34") (term "1"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "8") (term "1"))
                                          (rule "ifthenelse_split" (formula "14") (term "0"))
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "54") (term "0,1") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "15")))
                                             (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_commuteLeq" (formula "50"))
                                             (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "51"))
                                             (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "equal_literals" (formula "14") (term "1"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "56")))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "66"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "16"))
                                                   (rule "eqSymm" (formula "66"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "66") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                   (rule "closeTrue" (formula "66"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "15"))
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "closeTrue" (formula "63"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "66") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "64") (term "1,0"))
                                                         (rule "close" (formula "64") (ifseqformula "16"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "68"))
                                                         (rule "cut_direct" (formula "59") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "66") (term "1,0"))
                                                            (rule "close" (formula "66") (ifseqformula "16"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "ineffectiveCast" (formula "63") (term "1,0") (ifseqformula "4"))
                                                            (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "63") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "cut_direct" (formula "56") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEq" (formula "54") (term "0,1,0,0,1") (ifseqformula "1"))
                                                   (rule "castDel" (formula "54") (term "1,0,0,1"))
                                                   (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "64") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                                    (builtin "One Step Simplification" (formula "64"))
                                                   (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "53") (term "0,0,0,1") (ifseqformula "1"))
                                                   (rule "castDel" (formula "53") (term "0,0,1"))
                                                   (rule "replace_known_right" (formula "53") (term "0,1") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "notRight" (formula "53"))
                                                   (rule "replace_known_left" (formula "56") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "62") (term "1,0"))
                                                   (rule "close" (formula "62") (ifseqformula "18"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "56"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "63")))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1"))
                                             (rule "cut_direct" (formula "48") (term "0"))
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "false_right" (formula "55"))
                                                (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "13") (term "1,2,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "13") (term "0,0"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "hideAuxiliaryEq" (formula "13"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "5"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "52")))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "60"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "57") (term "0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "49") (term "0"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "55") (term "1,0"))
                                                      (rule "close" (formula "55") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "3") (term "1,0"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "58") (term "0") (ifseqformula "4"))
                                                         (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "57") (term "1,0"))
                                                         (rule "close" (formula "57") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "4"))
                                                            (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "58") (term "1,0"))
                                                            (rule "close" (formula "58") (ifseqformula "15"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "62"))
                                                            (rule "cut_direct" (formula "53") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "52") (term "0"))
                                                               (rule "applyEq" (formula "61") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "60") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "4") (term "1,0"))
                                                               (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "58") (term "1,0"))
                                                               (rule "close" (formula "58") (ifseqformula "13"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "false_right" (formula "50"))
                                                               (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "ineffectiveCast" (formula "49") (term "0") (ifseqformula "3"))
                                                               (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "1"))
                                                               (rule "close" (formula "57") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "58") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "50") (term "0,0,1,0"))
                                                      (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "57") (term "0,1,0,1") (ifseqformula "1"))
                                                      (rule "castDel" (formula "57") (term "1,0,1"))
                                                      (rule "replace_known_left" (formula "57") (term "1") (ifseqformula "15"))
                                                       (builtin "One Step Simplification" (formula "57"))
                                                      (rule "notRight" (formula "57"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "50") (term "1,0,1,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "50") (term "0,1,0,0,1") (ifseqformula "2"))
                                                      (rule "castDel" (formula "50") (term "1,0,0,1"))
                                                      (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "notRight" (formula "50"))
                                                      (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                                      (rule "castDel" (formula "2") (term "0"))
                                                      (rule "close" (formula "56") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "notRight" (formula "59"))
                                                (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "58") (term "0,1,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")) (ifInst ""  (formula "57")) (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                          )
                                       )
                                       (branch "CUT: self.size = 2 FALSE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "notLeft" (formula "53"))
                                          (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_right" (formula "13") (term "0,0,1,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1,1") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "55") (term "1,1,1") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "16"))
                                          (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                                          (rule "true_left" (formula "52"))
                                          (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
                                          (rule "true_left" (formula "14"))
                                          (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "notRight" (formula "60"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                          (rule "true_left" (formula "50"))
                                          (rule "polySimp_homoEq" (formula "51"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0"))
                                          (rule "applyEq" (formula "55") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "3,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "16"))
                                          (rule "polySimp_homoEq" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                          (rule "add_literals" (formula "9") (term "0,1"))
                                          (rule "applyEq" (formula "53") (term "1") (ifseqformula "16"))
                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                          (rule "add_literals" (formula "33") (term "0,1"))
                                          (rule "add_zero_left" (formula "33") (term "1"))
                                          (rule "applyEqReverse" (formula "12") (term "1,3,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "58") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "55") (term "1,3,0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "polySimp_homoEq" (formula "9"))
                                          (rule "polySimp_homoEq" (formula "16"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                          (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                          (rule "polySimp_invertEq" (formula "57"))
                                          (rule "times_zero_2" (formula "57") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1"))
                                          (rule "mul_literals" (formula "9") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                          (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "3,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "9"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0"))
                                          (rule "mul_literals" (formula "30") (term "0,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "1"))
                                          (rule "add_literals" (formula "52") (term "0,1"))
                                          (rule "applyEq" (formula "14") (term "1") (ifseqformula "9"))
                                          (rule "polySimp_sepPosMonomial" (formula "57"))
                                          (rule "mul_literals" (formula "57") (term "1"))
                                          (rule "polySimp_sepPosMonomial" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1"))
                                          (rule "mul_literals" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                          (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "0,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "3,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "16"))
                                          (rule "polySimp_homoEq" (formula "57"))
                                          (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                          (rule "mul_literals" (formula "57") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                          (rule "add_literals" (formula "57") (term "0,0"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                          (rule "add_literals" (formula "9") (term "0,1"))
                                          (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                          (rule "add_literals" (formula "14") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_homoEq" (formula "14") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,1"))
                                          (rule "equal_literals" (formula "14") (term "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "49") (term "1,1") (ifseqformula "13"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "1"))
                                          (rule "add_literals" (formula "49") (term "0,1"))
                                          (rule "add_zero_left" (formula "49") (term "1"))
                                          (rule "polySimp_sepNegMonomial" (formula "55"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "27") (ifseqformula "55"))
                                          (rule "add_literals" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "55") (term "1,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "6"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_right" (formula "65") (term "0,1,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "4")))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "ifthenelse_split" (formula "6") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "6"))
                                                (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "62") (term "2,0") (ifseqformula "5"))
                                                (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "15"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "closeTrue" (formula "62"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "62") (term "1,0"))
                                                   (rule "close" (formula "62") (ifseqformula "17"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "63") (term "1,0"))
                                                      (rule "close" (formula "63") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "cut_direct" (formula "58") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "65") (term "1,0"))
                                                         (rule "close" (formula "65") (ifseqformula "15"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "1"))
                                                         (rule "applyEqRigid" (formula "61") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "61") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "cut_direct" (formula "55") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                (rule "typeEqDerived" (formula "63") (term "0,0,0") (ifseqformula "1"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,1,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "1,0,1,1"))
                                                (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,0,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "53") (term "0,1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "63") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "notRight" (formula "63"))
                                                (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "61") (ifseqformula "1"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "62")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "75") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "75"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "66")))
                                       (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "76"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "applyEqRigid" (formula "76") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "62"))
                                       (rule "eqSymm" (formula "76"))
                                       (rule "applyEqRigid" (formula "65") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "65"))
                                       (rule "false_right" (formula "65"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "72") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "72") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "71"))
                                        (builtin "One Step Simplification" (formula "72"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "72"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "72") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "69") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "69") (term "1,0"))
                                       (rule "close" (formula "69") (ifseqformula "21"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "19") (term "0"))
                                       (branch "CUT: self.size = 2 TRUE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "true_left" (formula "56"))
                                          (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "17") (term "1"))
                                          (rule "mul_literals" (formula "17") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "17") (term "0,1"))
                                          (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "52") (term "1"))
                                          (rule "mul_literals" (formula "52") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                          (rule "add_literals" (formula "52") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "52") (term "0,1"))
                                          (rule "applyEq" (formula "11") (term "1,3,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "11") (term "3,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "15") (term "1,0"))
                                          (rule "applyEq" (formula "56") (term "1,3,0,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "56") (term "3,0,0"))
                                          (rule "applyEq" (formula "54") (term "1") (ifseqformula "18"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "43") (term "1"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "34") (term "1"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "8") (term "1"))
                                          (rule "ifthenelse_split" (formula "14") (term "0"))
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "applyEqReverse" (formula "54") (term "0,1") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "notRight" (formula "60"))
                                             (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_commuteLeq" (formula "50"))
                                             (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "51"))
                                             (rule "applyEqRigid" (formula "14") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "equal_literals" (formula "14") (term "1"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "56")))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "4") (term "1,0"))
                                                   (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "54") (term "0"))
                                                   (rule "applyEq" (formula "66") (term "2,0") (ifseqformula "5"))
                                                   (rule "narrowSelectType" (formula "66") (term "0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "5"))
                                                   (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "61") (term "1,0"))
                                                   (rule "close" (formula "61") (ifseqformula "16"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "5"))
                                                      (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "closeTrue" (formula "67"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "68") (term "0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "5"))
                                                         (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "65") (term "1,0"))
                                                         (rule "close" (formula "65") (ifseqformula "16"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "cut_direct" (formula "59") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "68") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "67") (term "1,0"))
                                                            (rule "close" (formula "67") (ifseqformula "16"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "ineffectiveCast" (formula "53") (term "0") (ifseqformula "4"))
                                                            (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEqRigid" (formula "5") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "64") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "64") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "cut_direct" (formula "56") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEq" (formula "65") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "castDel" (formula "65") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "65") (term "1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "notRight" (formula "65"))
                                                   (rule "replace_known_left" (formula "55") (term "0,1,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "63") (ifseqformula "1"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "56"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "64")))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1"))
                                             (rule "cut_direct" (formula "48") (term "0"))
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "52") (term "0,0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "5"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_right" (formula "61") (term "0,1,0") (ifseqformula "52"))
                                                    (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "3")))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "50") (term "0"))
                                                      (rule "applyEq" (formula "60") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "60") (term "0") (ifseqformula "15"))
                                                      (rule "eqSymm" (formula "60"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "58") (term "1,0"))
                                                      (rule "close" (formula "58") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "13"))
                                                         (rule "applyEq" (formula "50") (term "0,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "50") (term "0"))
                                                         (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "58") (term "1,0"))
                                                         (rule "close" (formula "58") (ifseqformula "14"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEq" (formula "50") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "4"))
                                                            (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "14"))
                                                            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "57") (term "1,0"))
                                                            (rule "close" (formula "57") (ifseqformula "15"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "63"))
                                                            (rule "cut_direct" (formula "53") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "4") (term "1,0"))
                                                               (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "61") (term "1,0"))
                                                               (rule "close" (formula "61") (ifseqformula "14"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "false_right" (formula "50"))
                                                               (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "ineffectiveCast" (formula "49") (term "0") (ifseqformula "3"))
                                                               (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "1"))
                                                               (rule "close" (formula "58") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "59") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "59") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "replace_known_right" (formula "50") (term "0,1") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "49") (term "0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "49") (term "0,0,1,0"))
                                                      (rule "replace_known_right" (formula "49") (term "0,1,0") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "58") (term "1,0"))
                                                      (rule "close" (formula "58") (ifseqformula "15"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "notRight" (formula "60"))
                                                (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "58") (term "0,0,1,0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "57")) (ifInst ""  (formula "1")) (ifInst ""  (formula "57")) (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                          )
                                       )
                                       (branch "CUT: self.size = 2 FALSE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "notLeft" (formula "53"))
                                          (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                          (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_right" (formula "13") (term "0,0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "55") (term "1,1,1") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1,1") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "16"))
                                          (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "53")))
                                          (rule "true_left" (formula "52"))
                                          (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "58")))
                                          (rule "true_left" (formula "14"))
                                          (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "50")))
                                          (rule "true_left" (formula "49"))
                                          (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "notRight" (formula "60"))
                                          (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "polySimp_homoEq" (formula "51"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "16"))
                                          (rule "polySimp_homoEq" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "3,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                          (rule "add_literals" (formula "33") (term "0,1"))
                                          (rule "add_zero_left" (formula "33") (term "1"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "58") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "12") (term "1,3,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "55") (term "1,3,0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "polySimp_homoEq" (formula "16"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                          (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                          (rule "polySimp_invertEq" (formula "57"))
                                          (rule "mul_literals" (formula "57") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1"))
                                          (rule "mul_literals" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0"))
                                          (rule "mul_literals" (formula "30") (term "0,0"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "3,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_homoEq" (formula "14") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,1"))
                                          (rule "equal_literals" (formula "14") (term "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "polySimp_sepPosMonomial" (formula "55"))
                                          (rule "mul_literals" (formula "55") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "27") (ifseqformula "55"))
                                          (rule "add_literals" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "55") (term "1,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "55")))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "66"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "ifthenelse_split" (formula "6") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "6"))
                                                (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                (rule "castDel" (formula "4") (term "1,0"))
                                                (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "6"))
                                                (rule "castDel" (formula "65") (term "1,0"))
                                                (rule "close" (formula "65") (ifseqformula "17"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "3") (term "1,0"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "61") (term "1,0"))
                                                   (rule "close" (formula "61") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "applyEqRigid" (formula "58") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "64") (term "0") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "52") (term "0"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "61") (term "1,0"))
                                                      (rule "close" (formula "61") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "cut_direct" (formula "58") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "67") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "5") (term "1,0"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "15"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEqRigid" (formula "63") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "63") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "cut_direct" (formula "55") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "1"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "64") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "64") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "64") (term "0,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "replace_known_right" (formula "53") (term "0,1") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "52") (term "0,0,0,1,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "52") (term "0,0,1,0"))
                                                (rule "replace_known_right" (formula "52") (term "0,1,0") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "52"))
                                                (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "63") (term "1,0"))
                                                (rule "close" (formula "63") (ifseqformula "16"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "63")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail = null FALSE"
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "cut_direct" (formula "53") (term "0"))
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null TRUE"
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "true_left" (formula "54"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "75") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "75"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_right" (formula "9") (term "0,1,0,0,0") (ifseqformula "66"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "76"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEq" (formula "5") (term "2,1,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "5") (term "1,0") (ifseqformula "42"))
                                       (rule "applyEq" (formula "5") (term "2,2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "5") (term "2,0") (ifseqformula "39"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "73") (term "0,0,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "73") (term "0,0,0"))
                                       (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                        (builtin "One Step Simplification" (formula "73"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "73"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "74") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "60"))
                                       (rule "eqSymm" (formula "74"))
                                       (rule "applyEq" (formula "73") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "69") (term "0,1,0") (ifseqformula "3"))
                                       (rule "castDel" (formula "69") (term "1,0"))
                                       (rule "close" (formula "69") (ifseqformula "21"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "19") (term "0"))
                                       (branch "CUT: self.size = 2 TRUE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "17") (term "1"))
                                          (rule "mul_literals" (formula "17") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "17") (term "0,1"))
                                          (rule "applyEq" (formula "11") (term "1,3,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "11") (term "3,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "15") (term "1,0"))
                                          (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "53") (term "1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "53") (term "0,1"))
                                          (rule "applyEq" (formula "57") (term "1,3,0,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "57") (term "3,0,0"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "54") (term "1") (ifseqformula "18"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "8") (term "1"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "34") (term "1"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "43") (term "1"))
                                          (rule "ifthenelse_split" (formula "14") (term "0"))
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "54") (term "0,1") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_right" (formula "12") (term "0,0,0,1,0,0") (ifseqformula "59"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "notRight" (formula "60"))
                                             (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_commuteLeq" (formula "50"))
                                             (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "51"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "equal_literals" (formula "14") (term "1"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "56")))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "67"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "67") (term "1,0"))
                                                   (rule "close" (formula "67") (ifseqformula "19"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "66") (term "0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "55") (term "0"))
                                                      (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "63") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "15"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "67") (term "2,0") (ifseqformula "5"))
                                                         (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "63") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "52") (term "0"))
                                                         (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "61") (term "1,0"))
                                                         (rule "close" (formula "61") (ifseqformula "16"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "69"))
                                                         (rule "cut_direct" (formula "59") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "67") (term "1,0"))
                                                            (rule "close" (formula "67") (ifseqformula "16"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "ineffectiveCast" (formula "5") (term "1,0") (ifseqformula "4"))
                                                            (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "4"))
                                                            (rule "close" (formula "64") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "cut_direct" (formula "56") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "65") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "64"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "65"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                                   (rule "castDel" (formula "64") (term "1,0"))
                                                   (rule "close" (formula "64") (ifseqformula "17"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "56"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "64")))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1"))
                                             (rule "cut_direct" (formula "48") (term "0"))
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "replace_known_left" (formula "52") (term "0,0,0,1") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "46"))
                                                (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "13") (term "0,0"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "hideAuxiliaryEq" (formula "13"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "58"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "5"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "52")))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "61"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "61") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "61") (term "0") (ifseqformula "15"))
                                                      (rule "eqSymm" (formula "61"))
                                                      (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "3") (term "1,0"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "5"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "59"))
                                                      (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "49") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "55") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "55") (term "1,0"))
                                                      (rule "close" (formula "55") (ifseqformula "14"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "applyEq" (formula "63") (term "2,0") (ifseqformula "4"))
                                                         (rule "narrowSelectType" (formula "63") (term "0") (ifseqformula "15"))
                                                         (rule "eqSymm" (formula "63"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "51") (term "0"))
                                                         (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "4"))
                                                         (rule "castDel" (formula "59") (term "1,0"))
                                                         (rule "close" (formula "59") (ifseqformula "15"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "58") (term "1,0"))
                                                            (rule "close" (formula "58") (ifseqformula "15"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "63"))
                                                            (rule "cut_direct" (formula "53") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "61") (term "1,0"))
                                                               (rule "close" (formula "61") (ifseqformula "14"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "ineffectiveCast" (formula "49") (term "0") (ifseqformula "3"))
                                                               (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqRigid" (formula "58") (term "1,0") (ifseqformula "1"))
                                                               (rule "close" (formula "58") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "59") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "50") (term "0,0,1,0"))
                                                      (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "58"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0,1") (ifseqformula "1"))
                                                      (rule "castDel" (formula "59") (term "1,0,1"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "notRight" (formula "59"))
                                                      (rule "applyEq" (formula "60") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "59") (term "1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "close" (formula "58") (ifseqformula "1"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "60"))
                                                (rule "notRight" (formula "60"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_right" (formula "58") (term "0,0,1,0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "57")) (ifInst ""  (formula "1")) (ifInst ""  (formula "57")) (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                          )
                                       )
                                       (branch "CUT: self.size = 2 FALSE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "notLeft" (formula "52"))
                                          (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "14") (term "0,0,0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "55") (term "1,1") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1,1") (ifseqformula "14"))
                                          (rule "hideAuxiliaryEq" (formula "14"))
                                          (rule "replace_known_right" (formula "12") (term "0,0,0,0,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "60")) (ifInst ""  (formula "60")))
                                          (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                          (rule "true_left" (formula "50"))
                                          (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "15")))
                                          (rule "true_left" (formula "14"))
                                          (rule "replace_known_right" (formula "48") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "51")))
                                          (rule "true_left" (formula "50"))
                                          (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "notRight" (formula "60"))
                                          (rule "polySimp_homoEq" (formula "51"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "16"))
                                          (rule "polySimp_homoEq" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "applyEq" (formula "55") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "3,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "1"))
                                          (rule "add_literals" (formula "42") (term "0,1"))
                                          (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                          (rule "add_literals" (formula "9") (term "0,1"))
                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                          (rule "add_literals" (formula "33") (term "0,1"))
                                          (rule "add_zero_left" (formula "33") (term "1"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "12") (term "1,3,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "55") (term "1,3,0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "9") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "58") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "polySimp_homoEq" (formula "16"))
                                          (rule "polySimp_homoEq" (formula "9"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                          (rule "mul_literals" (formula "50") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                          (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                          (rule "polySimp_invertEq" (formula "57"))
                                          (rule "mul_literals" (formula "57") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1"))
                                          (rule "mul_literals" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0"))
                                          (rule "mul_literals" (formula "30") (term "0,0"))
                                          (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "16"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "3,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "1"))
                                          (rule "add_literals" (formula "41") (term "0,1"))
                                          (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_homoEq" (formula "14") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,1"))
                                          (rule "equal_literals" (formula "14") (term "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "polySimp_sepNegMonomial" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "55"))
                                          (rule "mul_literals" (formula "55") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "27") (ifseqformula "55"))
                                          (rule "add_literals" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "55") (term "1,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_left" (formula "66") (term "0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "55")))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "66"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "ifthenelse_split" (formula "6") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "6"))
                                                (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "false_right" (formula "58"))
                                                (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "65") (term "2,0") (ifseqformula "5"))
                                                (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "6"))
                                                (rule "castDel" (formula "63") (term "1,0"))
                                                (rule "close" (formula "63") (ifseqformula "16"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "false_right" (formula "58"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "4") (term "1,0"))
                                                   (rule "applyEq" (formula "64") (term "0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "63") (term "1,0"))
                                                   (rule "close" (formula "63") (ifseqformula "16"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "applyEq" (formula "58") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "false_right" (formula "58"))
                                                      (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "55") (term "0"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "63") (term "0,1,0") (ifseqformula "5"))
                                                      (rule "castDel" (formula "63") (term "1,0"))
                                                      (rule "close" (formula "63") (ifseqformula "15"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "cut_direct" (formula "58") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "55") (term "0"))
                                                         (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "65") (term "1,0"))
                                                         (rule "close" (formula "65") (ifseqformula "15"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "63") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "cut_direct" (formula "55") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                (rule "typeEqDerived" (formula "64") (term "0,0,0") (ifseqformula "1"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEq" (formula "53") (term "0,0,0,1,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "0,0,1,0"))
                                                (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "63"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0,1,0,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "63") (term "1,0,1"))
                                                (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "notRight" (formula "63"))
                                                (rule "applyEq" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "close" (formula "63") (ifseqformula "1"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "64") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "63")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: ((self.tail@heap).tail@anon_heap___insertTail_trampoline«anonHeapFunction»).tail@anon_heap_havocPacked«anonHeapFunction» = null FALSE"
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self TRUE"
                                       (rule "andLeft" (formula "3"))
                                       (rule "typeEqDerived" (formula "76") (term "0,0,0") (ifseqformula "4"))
                                       (rule "typeEqDerived" (formula "6") (term "0,1,0,0,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "76"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "notLeft" (formula "4"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "replace_known_left" (formula "9") (term "0,0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "66")) (ifInst ""  (formula "4")))
                                       (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "9"))
                                       (rule "hideAuxiliaryEq" (formula "9"))
                                       (rule "eqSymm" (formula "77"))
                                       (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0,0") (ifseqformula "65"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEqRigid" (formula "75") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "75") (term "0") (ifseqformula "60"))
                                       (rule "eqSymm" (formula "75"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "5") (term "1,0,0,1,0,0"))
                                       (rule "replace_known_left" (formula "5") (term "0,1,0,0") (ifseqformula "23"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "ifthenelse_negated" (formula "5") (term "0"))
                                       (rule "applyEqRigid" (formula "63") (term "0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "63"))
                                       (rule "false_right" (formula "63"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEq" (formula "72") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "70") (term "0,1,0,1") (ifseqformula "3"))
                                       (rule "castDel" (formula "70") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "70") (term "1") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "70"))
                                       (rule "notRight" (formula "70"))
                                       (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "70") (term "2,0") (ifseqformula "3"))
                                       (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "20"))
                                       (rule "eqSymm" (formula "70"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "4"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "close" (formula "69") (ifseqformula "1"))
                                    )
                                    (branch " f_0 = java.lang.Object::$packed ∧ ¬f_0 = java.lang.Object::<created> ∧ o_0 = self FALSE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "cut_direct" (formula "19") (term "0"))
                                       (branch "CUT: self.size = 2 TRUE"
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "true_left" (formula "55"))
                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "19"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "applyEq" (formula "57") (term "1,3,0,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "57") (term "3,0,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "15") (term "1,0"))
                                          (rule "applyEq" (formula "17") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "17") (term "1"))
                                          (rule "mul_literals" (formula "17") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "17") (term "0,1"))
                                          (rule "applyEq" (formula "11") (term "1,3,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "11") (term "3,0"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "18"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "18"))
                                          (rule "polySimp_homoEq" (formula "53") (term "1"))
                                          (rule "mul_literals" (formula "53") (term "1,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,1"))
                                          (rule "add_zero_left" (formula "53") (term "0,1"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "18"))
                                          (rule "qeq_literals" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "43") (term "1"))
                                          (rule "applyEq" (formula "54") (term "1") (ifseqformula "18"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "34") (term "1"))
                                          (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "18"))
                                          (rule "add_literals" (formula "8") (term "1"))
                                          (rule "ifthenelse_split" (formula "14") (term "0"))
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "14"))
                                             (rule "andLeft" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "applyEqReverse" (formula "54") (term "0,1") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "2,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "59")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "16"))
                                             (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "notRight" (formula "61"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_right" (formula "14") (term "0,0,0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_commuteLeq" (formula "50"))
                                             (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "51"))
                                             (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "equal_literals" (formula "14") (term "1"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                             (rule "hideAuxiliaryEq" (formula "13"))
                                             (rule "inEqSimp_commuteLeq" (formula "13"))
                                             (rule "ifthenelse_split" (formula "4") (term "0"))
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "4"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "5"))
                                                (rule "andLeft" (formula "4"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_right" (formula "68") (term "0,1,0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "4")))
                                                (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_right" (formula "59") (term "0,1,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "applyEqRigid" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "68") (term "0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "56") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "applyEqRigid" (formula "65") (term "2,0") (ifseqformula "5"))
                                                   (rule "narrowSelectType" (formula "65") (term "0") (ifseqformula "16"))
                                                    (builtin "One Step Simplification" (formula "65"))
                                                   (rule "closeTrue" (formula "65"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "68") (term "0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "67") (term "1,0"))
                                                      (rule "close" (formula "67") (ifseqformula "17"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "ifthenelse_split" (formula "6") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "7"))
                                                         (rule "hideAuxiliaryEq" (formula "7"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEqRigid" (formula "68") (term "2,0") (ifseqformula "5"))
                                                         (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "16"))
                                                         (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "6"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "17"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "cut_direct" (formula "59") (term "1"))
                                                         (branch "CUT: o_0 = self TRUE"
                                                            (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "60"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "70") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "55") (term "0"))
                                                            (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "4") (term "1,0"))
                                                            (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                            (rule "castDel" (formula "66") (term "1,0"))
                                                            (rule "close" (formula "66") (ifseqformula "15"))
                                                         )
                                                         (branch "CUT: o_0 = self FALSE"
                                                             (builtin "One Step Simplification" (formula "60"))
                                                            (rule "false_right" (formula "60"))
                                                            (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "59"))
                                                             (builtin "One Step Simplification" (formula "54"))
                                                            (rule "false_right" (formula "54"))
                                                            (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "58"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "ineffectiveCast" (formula "53") (term "0") (ifseqformula "4"))
                                                            (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                             (builtin "One Step Simplification" (formula "5"))
                                                            (rule "true_left" (formula "5"))
                                                            (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "1"))
                                                            (rule "applyEqRigid" (formula "65") (term "1,0") (ifseqformula "1"))
                                                            (rule "close" (formula "65") (ifseqformula "3"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                             (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "cut_direct" (formula "56") (term "1"))
                                                (branch "CUT: o_0 = self TRUE"
                                                   (rule "typeEqDerived" (formula "66") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "typeEqDerived" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "57"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEq" (formula "54") (term "0,1,0,0,1") (ifseqformula "1"))
                                                   (rule "castDel" (formula "54") (term "1,0,0,1"))
                                                   (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "applyEq" (formula "66") (term "0,1,0,1") (ifseqformula "1"))
                                                   (rule "castDel" (formula "66") (term "1,0,1"))
                                                   (rule "replace_known_left" (formula "66") (term "1") (ifseqformula "18"))
                                                    (builtin "One Step Simplification" (formula "66"))
                                                   (rule "notRight" (formula "66"))
                                                   (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEq" (formula "66") (term "0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "close" (formula "64") (ifseqformula "1"))
                                                )
                                                (branch "CUT: o_0 = self FALSE"
                                                    (builtin "One Step Simplification" (formula "57"))
                                                   (rule "false_right" (formula "57"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "56"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "55"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "65")))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                             )
                                          )
                                          (branch " ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ¬ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE) ∧ ( ¬ (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created> = TRUE ∨ ((self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction»).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "15") (term "2,0") (ifseqformula "14"))
                                             (rule "applyEqReverse" (formula "52") (term "0,1") (ifseqformula "14"))
                                             (rule "hideAuxiliaryEq" (formula "14"))
                                             (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "57"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                             (rule "applyEqReverse" (formula "50") (term "1,1") (ifseqformula "12"))
                                             (rule "hideAuxiliaryEq" (formula "12"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1"))
                                             (rule "cut_direct" (formula "48") (term "0"))
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null TRUE"
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "true_left" (formula "49"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "48"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "replace_known_left" (formula "48") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "true_left" (formula "48"))
                                                (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "false_right" (formula "57"))
                                                (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "true_left" (formula "47"))
                                                (rule "replace_known_left" (formula "52") (term "0,0,0,1") (ifseqformula "46"))
                                                 (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "46")) (ifInst ""  (formula "46")))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "13") (term "0,0,0") (ifseqformula "46"))
                                                (rule "eqSymm" (formula "13") (term "0,0"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "60"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "hideAuxiliaryEq" (formula "13"))
                                                (rule "applyEq" (formula "12") (term "1,2,0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "45"))
                                                (rule "eqSymm" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "59"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "hideAuxiliaryEq" (formula "12"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "52")))
                                                   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "62"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_right" (formula "53") (term "0,1,0") (ifseqformula "51"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "ifthenelse_split" (formula "5") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "62") (term "2,0") (ifseqformula "4"))
                                                      (rule "narrowSelectType" (formula "62") (term "0") (ifseqformula "14"))
                                                      (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "58") (term "0,1,0") (ifseqformula "4"))
                                                      (rule "castDel" (formula "58") (term "1,0"))
                                                      (rule "close" (formula "58") (ifseqformula "14"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "ifthenelse_split" (formula "5") (term "0"))
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "5"))
                                                         (rule "castDel" (formula "61") (term "1,0"))
                                                         (rule "close" (formula "61") (ifseqformula "16"))
                                                      )
                                                      (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "ifthenelse_split" (formula "5") (term "0"))
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "6"))
                                                             (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "applyEq" (formula "51") (term "0,0") (ifseqformula "5"))
                                                            (rule "castDel" (formula "51") (term "0"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "4"))
                                                             (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                            (rule "castDel" (formula "2") (term "1,0"))
                                                            (rule "applyEq" (formula "58") (term "2,0") (ifseqformula "3"))
                                                            (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "13"))
                                                            (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "4"))
                                                            (rule "castDel" (formula "56") (term "1,0"))
                                                            (rule "close" (formula "56") (ifseqformula "14"))
                                                         )
                                                         (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                            (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "64"))
                                                            (rule "cut_direct" (formula "53") (term "1"))
                                                            (branch "CUT: o_0 = self TRUE"
                                                               (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "applyEq" (formula "52") (term "0,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "52") (term "0"))
                                                               (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "61") (term "0,1,0") (ifseqformula "1"))
                                                               (rule "castDel" (formula "61") (term "1,0"))
                                                               (rule "close" (formula "61") (ifseqformula "14"))
                                                            )
                                                            (branch "CUT: o_0 = self FALSE"
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "53"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "51"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "ineffectiveCast" (formula "49") (term "0") (ifseqformula "3"))
                                                               (rule "typeEqDerived2" (formula "4") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "true_left" (formula "4"))
                                                               (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "1"))
                                                               (rule "close" (formula "58") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "cut_direct" (formula "50") (term "1"))
                                                   (branch "CUT: o_0 = self TRUE"
                                                      (rule "typeEqDerived" (formula "60") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "typeEqDerived" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEq" (formula "50") (term "0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "50") (term "0,0,1,0"))
                                                      (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "60") (term "0,0,0,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "60") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "60") (term "0,0") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "60"))
                                                      (rule "replace_known_right" (formula "50") (term "0,1") (ifseqformula "60"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "49") (term "0,1,0,1") (ifseqformula "1"))
                                                      (rule "castDel" (formula "49") (term "1,0,1"))
                                                      (rule "applyEq" (formula "59") (term "0,1,0") (ifseqformula "1"))
                                                      (rule "castDel" (formula "59") (term "1,0"))
                                                      (rule "close" (formula "59") (ifseqformula "15"))
                                                   )
                                                   (branch "CUT: o_0 = self FALSE"
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "50"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "49"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: (self.tail@heap).tail.tail@anon_heap___insertTail_trampoline«anonHeapFunction» = null FALSE"
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "replace_known_right" (formula "50") (term "0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "notRight" (formula "61"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "57"))
                                                 (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_left" (formula "58") (term "0,1,1,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "57")) (ifInst ""  (formula "57")) (ifInst ""  (formula "57")) (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                          )
                                       )
                                       (branch "CUT: self.size = 2 FALSE"
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "notLeft" (formula "53"))
                                          (rule "replace_known_right" (formula "12") (term "0,0,1,0,0,0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "62")) (ifInst ""  (formula "62")))
                                          (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "12"))
                                          (rule "applyEqReverse" (formula "13") (term "2,0") (ifseqformula "12"))
                                          (rule "hideAuxiliaryEq" (formula "12"))
                                          (rule "replace_known_right" (formula "13") (term "0,0,0,1,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "61")) (ifInst ""  (formula "61")))
                                          (rule "applyEqReverse" (formula "55") (term "1,1,1") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "2,0") (ifseqformula "13"))
                                          (rule "applyEqReverse" (formula "54") (term "1,1,1") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "60")))
                                          (rule "true_left" (formula "16"))
                                          (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "15"))
                                           (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "59")))
                                          (rule "true_left" (formula "14"))
                                          (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "50")))
                                          (rule "true_left" (formula "49"))
                                          (rule "replace_known_right" (formula "62") (term "0,0") (ifseqformula "57"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "notRight" (formula "62"))
                                          (rule "replace_known_right" (formula "49") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "52")))
                                          (rule "true_left" (formula "51"))
                                          (rule "polySimp_homoEq" (formula "51"))
                                          (rule "polySimp_addComm1" (formula "51") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "50"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "55") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "3,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0"))
                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "16"))
                                          (rule "polySimp_homoEq" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                          (rule "mul_literals" (formula "58") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                          (rule "add_literals" (formula "58") (term "0,0"))
                                          (rule "add_zero_left" (formula "58") (term "0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "1"))
                                          (rule "add_literals" (formula "42") (term "0,1"))
                                          (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                          (rule "add_literals" (formula "33") (term "0,1"))
                                          (rule "add_zero_left" (formula "33") (term "1"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "12") (term "1,3,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "7") (term "1,1,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "55") (term "1,3,0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "42") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "58") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "16") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "33"))
                                          (rule "hideAuxiliaryEq" (formula "33"))
                                          (rule "polySimp_homoEq" (formula "16"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "50"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1"))
                                          (rule "mul_literals" (formula "50") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                          (rule "applyEq" (formula "14") (term "2,0") (ifseqformula "50"))
                                          (rule "polySimp_invertEq" (formula "57"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "mul_literals" (formula "57") (term "1"))
                                          (rule "polySimp_elimOne" (formula "57") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "16"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                          (rule "applyEq" (formula "57") (term "0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "54") (term "1,3,0,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "3,0,0"))
                                          (rule "add_literals" (formula "54") (term "0,3,0,0"))
                                          (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "3,0"))
                                          (rule "add_literals" (formula "12") (term "0,3,0"))
                                          (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "16"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0"))
                                          (rule "mul_literals" (formula "30") (term "0,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,0"))
                                          (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "16"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "1,0"))
                                          (rule "add_literals" (formula "7") (term "0,1,0"))
                                          (rule "applyEq" (formula "14") (term "1") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_homoEq" (formula "14") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,1"))
                                          (rule "equal_literals" (formula "14") (term "1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "notLeft" (formula "14"))
                                          (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "55"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "13"))
                                          (rule "hideAuxiliaryEq" (formula "13"))
                                          (rule "inEqSimp_commuteLeq" (formula "13"))
                                          (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "13"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "1"))
                                          (rule "add_literals" (formula "38") (term "0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "55"))
                                          (rule "mul_literals" (formula "55") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "27") (ifseqformula "55"))
                                          (rule "add_literals" (formula "27") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "55") (ifseqformula "27"))
                                          (rule "mul_literals" (formula "55") (term "1,0,0"))
                                          (rule "add_literals" (formula "55") (term "0,0"))
                                          (rule "leq_literals" (formula "55") (term "0"))
                                           (builtin "One Step Simplification" (formula "55"))
                                          (rule "false_right" (formula "55"))
                                          (rule "ifthenelse_split" (formula "4") (term "0"))
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "4"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "notLeft" (formula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "replace_known_right" (formula "58") (term "0,1,0") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_right" (formula "67") (term "0,1,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "4")))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "ifthenelse_split" (formula "6") (term "0"))
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self TRUE"
                                                (rule "andLeft" (formula "6"))
                                                (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "65") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "6"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "16"))
                                             )
                                             (branch "f_0 = case_study.SortedListNode::$head ∧ o_0 = self FALSE"
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "ifthenelse_split" (formula "6") (term "0"))
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self TRUE"
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "4") (term "1,0"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "67") (term "2,0") (ifseqformula "5"))
                                                   (rule "narrowSelectType" (formula "67") (term "0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "66") (term "0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "6"))
                                                   (rule "castDel" (formula "53") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "54") (term "0") (ifseqformula "4"))
                                                    (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "5"))
                                                   (rule "castDel" (formula "62") (term "1,0"))
                                                   (rule "close" (formula "62") (ifseqformula "15"))
                                                )
                                                (branch "f_0 = case_study.SortedListNode::$tail ∧ o_0 = self FALSE"
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "ifthenelse_split" (formula "6") (term "0"))
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self TRUE"
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "typeEqDerived" (formula "4") (term "0") (ifseqformula "7"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "replace_known_left" (formula "58") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "58"))
                                                      (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "6"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "4") (term "1,0"))
                                                      (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "53") (term "0"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "5"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "false_right" (formula "52"))
                                                      (rule "applyEq" (formula "62") (term "0,1,0") (ifseqformula "6"))
                                                      (rule "castDel" (formula "62") (term "1,0"))
                                                      (rule "close" (formula "62") (ifseqformula "16"))
                                                   )
                                                   (branch "f_0 = case_study.SortedListNode::$size ∧ o_0 = self FALSE"
                                                      (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "69"))
                                                      (rule "cut_direct" (formula "58") (term "1"))
                                                      (branch "CUT: o_0 = self TRUE"
                                                         (rule "typeEqDerived" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "59"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "5") (term "1,0"))
                                                         (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "55") (term "0"))
                                                         (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "1"))
                                                         (rule "castDel" (formula "66") (term "1,0"))
                                                         (rule "close" (formula "66") (ifseqformula "15"))
                                                      )
                                                      (branch "CUT: o_0 = self FALSE"
                                                          (builtin "One Step Simplification" (formula "59"))
                                                         (rule "false_right" (formula "59"))
                                                         (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "58"))
                                                          (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "57"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "ineffectiveCast" (formula "52") (term "0") (ifseqformula "4"))
                                                         (rule "typeEqDerived2" (formula "5") (term "0") (ifseqformula "1"))
                                                          (builtin "One Step Simplification" (formula "5"))
                                                         (rule "true_left" (formula "5"))
                                                         (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "64") (ifseqformula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch " ¬f_0 = java.lang.Object::<created> ∧ case_study.SortedListNode::instance(o_0) = TRUE ∧ ¬(case_study.SortedListNode)(o_0) = null ∧ ( (case_study.SortedListNode)(o_0).<created> = TRUE ∨ (case_study.SortedListNode)(o_0).<created>@anon_heap_havocPacked«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "cut_direct" (formula "55") (term "1"))
                                             (branch "CUT: o_0 = self TRUE"
                                                (rule "typeEqDerived" (formula "65") (term "0,0,0") (ifseqformula "1"))
                                                (rule "typeEqDerived" (formula "53") (term "0,1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,1,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "1,0,1,1"))
                                                (rule "applyEq" (formula "53") (term "0,1,0,0,1") (ifseqformula "1"))
                                                (rule "castDel" (formula "53") (term "1,0,0,1"))
                                                (rule "replace_known_left" (formula "53") (term "0,1") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "65") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "65") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "65") (term "0,0") (ifseqformula "64"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                                (rule "castDel" (formula "64") (term "1,0"))
                                                (rule "close" (formula "64") (ifseqformula "16"))
                                             )
                                             (branch "CUT: o_0 = self FALSE"
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "false_right" (formula "56"))
                                                (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "53"))
                                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "64")))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
         (branch "Exceptional Post (havocPacked)"
             (builtin "One Step Simplification" (formula "98"))
             (builtin "One Step Simplification" (formula "101"))
            (rule "andLeft" (formula "98"))
            (rule "andLeft" (formula "99"))
            (rule "andLeft" (formula "99"))
            (rule "notLeft" (formula "99"))
            (rule "close" (formula "101") (ifseqformula "100"))
         )
         (branch "Pre (havocPacked)"
             (builtin "One Step Simplification" (formula "99"))
            (rule "wellFormedStorePrimitive" (formula "99"))
            (rule "wellFormedStoreObject" (formula "99"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "97")))
            (rule "wellFormedStorePrimitive" (formula "99") (term "0"))
            (rule "wellFormedAnonEQ" (formula "99") (term "0") (ifseqformula "61"))
            (rule "wellFormedAnonEQ" (formula "99") (term "0,0") (ifseqformula "58"))
            (rule "replace_known_left" (formula "99") (term "0,0,0") (ifseqformula "38"))
             (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "57")) (ifInst ""  (formula "60")))
            (rule "dismissNonSelectedField" (formula "99") (term "0"))
            (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=java_lang_Object_created__4"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "62"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "98")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "100"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "ifEqualsTRUE" (formula "97"))
             (builtin "One Step Simplification" (formula "97"))
            (rule "orRight" (formula "97"))
            (rule "replace_known_right" (formula "98") (term "0,0") (ifseqformula "97"))
             (builtin "One Step Simplification" (formula "98"))
            (rule "pullOutSelect" (formula "97") (term "0") (inst "selectSK=java_lang_Object_created__5"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "59"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "100")) (ifInst ""  (formula "37")))
            (rule "applyEqReverse" (formula "98") (term "0") (ifseqformula "1"))
            (rule "close" (formula "98") (ifseqformula "37"))
         )
      )
   )
   (branch "Exceptional Post (__insertTail_trampoline)"
       (builtin "One Step Simplification" (formula "24"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "andLeft" (formula "24"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "26"))
      (rule "andLeft" (formula "25"))
      (rule "andLeft" (formula "27"))
      (rule "notLeft" (formula "25"))
      (rule "close" (formula "29") (ifseqformula "28"))
   )
   (branch "Pre (__insertTail_trampoline)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
      (rule "wellFormedAnonEQ" (formula "25") (term "0,1") (ifseqformula "21"))
      (rule "replace_known_left" (formula "25") (term "0,0,1") (ifseqformula "2"))
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "20")))
      (rule "inEqSimp_commuteGeq" (formula "25") (term "0,0"))
      (rule "pullOutSelect" (formula "25") (term "0,1") (inst "selectSK=java_lang_Object_created__0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "26") (term "0,0,0") (inst "selectSK=case_study_SortedListNode_head_1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0"))
      (rule "Class_invariant_axiom_for_case_study_SortedListNode" (formula "27") (term "1,0") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "commute_and" (formula "27"))
      (rule "cut_direct" (formula "20") (term "0"))
      (branch "CUT: self.tail.tail = null TRUE"
          (builtin "One Step Simplification" (formula "21"))
         (rule "true_left" (formula "21"))
         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "20"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
         (rule "qeq_literals" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "16"))
         (rule "add_literals" (formula "9") (term "1"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "self.tail.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_geqRight" (formula "22"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "10"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "self.tail.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "22"))
            (rule "close" (formula "21") (ifseqformula "4"))
         )
      )
      (branch "CUT: self.tail.tail = null FALSE"
          (builtin "One Step Simplification" (formula "20"))
         (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "19"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "23"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "self.tail.<created> = TRUE TRUE"
            (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_geqRight" (formula "24"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "1"))
            (rule "andLeft" (formula "10"))
            (rule "inEqSimp_homoInEq1" (formula "10"))
            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
            (rule "add_literals" (formula "10") (term "1,1,0"))
            (rule "times_zero_1" (formula "10") (term "1,0"))
            (rule "add_zero_right" (formula "10") (term "0"))
            (rule "leq_literals" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
         (branch "self.tail.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRight" (formula "22") (ifseqformula "24"))
            (rule "close" (formula "22") (ifseqformula "4"))
         )
      )
   )
   (branch "Null reference (tail = null)"
       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
      (rule "closeTrue" (formula "25"))
   )
)
(branch "Exceptional Post (havocPacked)"
    (builtin "One Step Simplification" (formula "20"))
    (builtin "One Step Simplification" (formula "23"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "21"))
   (rule "close" (formula "23") (ifseqformula "22"))
)
(branch "Pre (havocPacked)"
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "21"))
)
)
}
