\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:off",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:ban",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : true
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 50000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_DELAYED",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_SCOPE_INV_TACLET",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_COMPLETION",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "../../../property-checker-out/case_study";

\proofObligation "#Proof Obligation Settings
#Sat Oct 05 19:49:30 CEST 2024
contract=case_study.Node[java.lang.Object\\:\\:<inv>()].JML accessible clause.0
name=case_study.Node[java.lang.Object\\:\\:<inv>()].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "florian" ) (keyVersion "7ff2d9dc3ea43e071577b3f8d0e3a537f9213982"))

(autoModeTime "28658")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (userinteraction))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "equiv_right" (formula "8") (userinteraction))
(branch "Case '->'"
   (rule "Class_invariant_axiom_for_case_study_Node" (formula "6") (ifseqformula "7") (userinteraction))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "impLeft" (formula "7") (userinteraction))
   (branch "Case 1"
      (rule "notRight" (formula "8"))
      (rule "eqSymm" (formula "7"))
      (rule "replace_known_left" (formula "7") (term "0,1,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "eqSymm" (formula "7"))
      (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "7"))
      (rule "commuteUnion" (formula "7") (term "1"))
      (rule "commuteUnion_2" (formula "9") (term "1,1,0"))
      (rule "commuteUnion" (formula "9") (term "0,1,1,0"))
      (rule "Class_invariant_axiom_for_case_study_Node" (formula "9") (ifseqformula "8"))
      (rule "eqSymm" (formula "9") (term "0,0"))
      (rule "disjointDefinition" (formula "9") (term "1,1,0"))
      (rule "pullOutSelect" (formula "9") (term "1,1,1") (inst "selectSK=case_study_Node_tail_0"))
      (rule "applyEq" (formula "10") (term "0,0,1,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "10") (term "1,1,0,1,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "10") (term "0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "10") (term "0,0,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "10") (term "1,2,1,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")) (ifInst ""  (formula "5")))
      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "2"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "10") (term "1,1,0,1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "10") (term "0,0,1,0,0,0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "applyEqReverse" (formula "10") (term "1,1,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "10") (term "0,0,1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "applyEqReverse" (formula "10") (term "0,0,0,1") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "9"))
      (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=case_study_Node_footprint_0"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")) (ifInst ""  (formula "5")))
      (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "8"))
      (rule "elementOfSetMinus" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "eqSymm" (formula "9"))
      (rule "commuteUnion_2" (formula "9") (term "0"))
      (rule "commuteUnion" (formula "9") (term "0,0"))
      (rule "associativeLawUnion" (formula "7") (term "1"))
      (rule "associativeLawUnion" (formula "9") (term "1"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "closeTrue" (formula "9"))
   )
   (branch "Case 2"
      (rule "split_or_strong" (formula "8") (userinteraction))
      (branch "Case 1"
         (rule "eqSymm" (formula "6"))
         (rule "replace_known_left" (formula "6") (term "0,1,0") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "eqSymm" (formula "6"))
         (rule "disjointDefinition" (formula "7"))
         (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "6"))
         (rule "applyEq" (formula "7") (term "1,1,0") (ifseqformula "8"))
         (rule "commuteUnion_2" (formula "6") (term "1"))
         (rule "commuteUnion" (formula "10") (term "1,1,0"))
         (rule "commuteUnion" (formula "6") (term "0,1"))
         (rule "Class_invariant_axiom_for_case_study_Node" (formula "10") (ifseqformula "9"))
         (rule "eqSymm" (formula "10") (term "0,0"))
         (rule "disjointDefinition" (formula "10") (term "1,1,0"))
         (rule "pullOutSelect" (formula "10") (term "1,1,1") (inst "selectSK=case_study_Node_tail_0"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "1,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "0,0,1,0,0,0") (ifseqformula "1"))
         (rule "applyEq" (formula "11") (term "0,0,1") (ifseqformula "1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "4")))
         (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "9"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "11") (term "0,0,0,1,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "applyEqReverse" (formula "11") (term "0,0,1,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "applyEqReverse" (formula "11") (term "1,1,1") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "11") (term "0,0,1") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eqSymm" (formula "10"))
         (rule "pullOutSelect" (formula "10") (term "0") (inst "selectSK=case_study_Node_footprint_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")) (ifInst ""  (formula "4")))
         (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "7"))
         (rule "elementOfSetMinus" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifthenelse_negated" (formula "1") (term "0"))
         (rule "elementOfUnion" (formula "1") (term "0,0"))
         (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eqSymm" (formula "10"))
         (rule "commuteUnion" (formula "10") (term "0"))
         (rule "eqSymm" (formula "10"))
         (rule "associativeLawUnion" (formula "10") (term "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "closeTrue" (formula "10"))
      )
      (branch "Case 2"
         (rule "ifthenelse_split" (formula "6") (term "1,1") (userinteraction))
         (branch "self.tail = null TRUE"
            (rule "close" (formula "10") (ifseqformula "6"))
         )
         (branch "self.tail = null FALSE"
            (rule "Class_invariant_axiom_for_case_study_Node" (formula "11") (ifseqformula "10") (userinteraction))
            (rule "andRight" (formula "11"))
            (branch "Case 1"
               (rule "andRight" (formula "11"))
               (branch "Case 1"
                  (rule "ifthenelse_split" (formula "11") (term "1,1") (userinteraction))
                  (branch " self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)] = null TRUE"
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "eqSymm" (formula "7"))
                     (rule "disjointDefinition" (formula "8"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=case_study_Node_tail_0"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "ifEqualsNull" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "1,1") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "elementOfSetMinus" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "elementOfUnionEQ" (formula "11") (ifseqformula "8"))
                     (rule "disjointAllFields" (formula "11") (term "1") (ifseqformula "9"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "elementOfUnion" (formula "11"))
                     (rule "orRight" (formula "11"))
                     (rule "elementOfSingleton" (formula "12"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "false_right" (formula "12"))
                     (rule "elementOfUnion" (formula "11"))
                     (rule "orRight" (formula "11"))
                     (rule "elementOfSingleton" (formula "11"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "false_right" (formula "11"))
                     (rule "elementOfSingleton" (formula "11"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
                  (branch " self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)] = null FALSE"
                     (rule "selectOfAnon" (formula "12") (term "0") (userinteraction))
                     (rule "ifthenelse_split" (formula "12") (term "0") (userinteraction))
                     (branch " (self, case_study.Node::$footprint) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$footprint = java.lang.Object::<created> ∨ (self, case_study.Node::$footprint) ∊ freshLocs(heap) TRUE"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "4")))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "7"))
                        (rule "disjointDefinition" (formula "8"))
                        (rule "elementOfSetMinus" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elementOfUnionEQ" (formula "9") (ifseqformula "6"))
                        (rule "disjointAllFields" (formula "9") (term "1") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "elementOfUnion" (formula "9"))
                        (rule "orRight" (formula "9"))
                        (rule "elementOfSingleton" (formula "10"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "closeTrue" (formula "10"))
                     )
                     (branch " (self, case_study.Node::$footprint) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$footprint = java.lang.Object::<created> ∨ (self, case_study.Node::$footprint) ∊ freshLocs(heap) FALSE"
                        (rule "selectOfAnon" (formula "13") (term "1,1") (userinteraction))
                        (rule "ifthenelse_split" (formula "13") (term "1,1") (userinteraction))
                        (branch " (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$footprint = java.lang.Object::<created> ∨ (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ freshLocs(heap) TRUE"
                           (rule "selectOfAnon" (formula "14") (term "1,1,1") (userinteraction))
                           (rule "ifthenelse_split" (formula "14") (term "1,1,1") (userinteraction))
                           (branch " (self, case_study.Node::$tail) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$tail = java.lang.Object::<created> ∨ (self, case_study.Node::$tail) ∊ freshLocs(heap) TRUE"
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")))
                              (rule "eqSymm" (formula "8"))
                              (rule "eqSymm" (formula "15"))
                              (rule "disjointDefinition" (formula "9"))
                              (rule "elementOfSetMinus" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfSetMinus" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "elementOfSetMinus" (formula "14"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "elementOfUnionEQ" (formula "11") (ifseqformula "8"))
                              (rule "disjointAllFields" (formula "11") (term "1") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "elementOfUnionEQ" (formula "2") (term "0,0") (ifseqformula "8"))
                              (rule "elementOfUnionEQ" (formula "1") (ifseqformula "8"))
                              (rule "disjointAllFields" (formula "1") (term "1") (ifseqformula "9"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfUnion" (formula "11"))
                              (rule "orRight" (formula "11"))
                              (rule "elementOfSingleton" (formula "12"))
                               (builtin "One Step Simplification" (formula "12"))
                              (rule "false_right" (formula "12"))
                              (rule "elementOfUnion" (formula "2") (term "0,0,0"))
                              (rule "elementOfSingleton" (formula "2") (term "1,0,0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "elementOfUnion" (formula "1"))
                              (rule "elementOfSingleton" (formula "1") (term "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "elementOfUnion" (formula "10"))
                              (rule "orRight" (formula "10"))
                              (rule "elementOfSingleton" (formula "10"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "false_right" (formula "10"))
                              (rule "elementOfSingleton" (formula "10"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "closeTrue" (formula "10"))
                           )
                           (branch " (self, case_study.Node::$tail) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$tail = java.lang.Object::<created> ∨ (self, case_study.Node::$tail) ∊ freshLocs(heap) FALSE"
                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")) (ifInst ""  (formula "4")) (userinteraction))
                               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "11")) (ifInst ""  (formula "4")) (userinteraction))
                              (rule "elementOfSetMinus" (formula "14"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "notRight" (formula "14"))
                              (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "3"))
                              (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                              (rule "true_left" (formula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                              (rule "elementOfSetMinus" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "pullOutSelect" (formula "2") (term "1,0,0,1") (inst "selectSK=case_study_Node_tail_0"))
                              (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                              (rule "simplifySelectOfAnon" (formula "2"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")) (ifInst ""  (formula "6")))
                              (rule "replaceKnownSelect_taclet1011001110_0" (formula "14") (term "0"))
                              (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "3") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "commute_or" (formula "2"))
                              (rule "cut_direct" (formula "2") (term "0,0"))
                              (branch "CUT: self.tail.<created> = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "notLeft" (formula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "3"))
                                 (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                 (rule "true_left" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "14"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "notRight" (formula "14"))
                                 (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "4"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
                                 (rule "true_left" (formula "1"))
                                 (rule "unlimit_java_lang_Object__inv_" (formula "11") (userinteraction))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "disjointDefinition" (formula "10"))
                                 (rule "elementOfUnionEQ" (formula "2") (ifseqformula "9"))
                                 (rule "disjointAllFields" (formula "2") (term "1") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnionEQ" (formula "1") (ifseqformula "9"))
                                 (rule "disjointAllFields" (formula "1") (term "1") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfUnionEQ" (formula "12") (ifseqformula "9"))
                                 (rule "orRight" (formula "12"))
                                 (rule "elementOfUnion" (formula "2"))
                                 (rule "elementOfSingleton" (formula "2") (term "1"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfUnion" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "elementOfUnion" (formula "11"))
                                 (rule "orRight" (formula "11"))
                                 (rule "elementOfSingleton" (formula "12"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "elementOfUnion" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1") (term "0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfSingleton" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "elementOfUnion" (formula "10"))
                                 (rule "orRight" (formula "10"))
                                 (rule "elementOfSingleton" (formula "10"))
                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
                                 (rule "false_right" (formula "10"))
                                 (rule "elementOfSingleton" (formula "10"))
                                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "11")))
                                 (rule "false_right" (formula "10"))
                                 (rule "commuteUnion" (formula "14") (term "0,0"))
                                 (rule "commuteUnion_2" (formula "7") (term "0,0"))
                                 (rule "commuteUnion" (formula "7") (term "0,0,0"))
                                 (rule "Class_invariant_axiom_for_case_study_Node" (formula "9") (ifseqformula "12"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "eqSymm" (formula "9"))
                                 (rule "disjointDefinition" (formula "10") (term "1"))
                                 (rule "elementOfUnionEQ" (formula "13") (ifseqformula "9"))
                                 (rule "orRight" (formula "13"))
                                 (rule "elementOfUnion" (formula "13"))
                                 (rule "orRight" (formula "13"))
                                 (rule "elementOfSingleton" (formula "14"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "closeTrue" (formula "14"))
                              )
                              (branch "CUT: self.tail.<created> = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "referencedObjectIsCreatedRight" (formula "11") (ifseqformula "12"))
                                 (rule "close" (formula "11") (ifseqformula "3"))
                              )
                           )
                        )
                        (branch " (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$footprint = java.lang.Object::<created> ∨ (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ freshLocs(heap) FALSE"
                            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")) (ifInst ""  (formula "3")))
                           (rule "orRight" (formula "13"))
                           (rule "notRight" (formula "14"))
                           (rule "eqSymm" (formula "7"))
                           (rule "eqSymm" (formula "15"))
                           (rule "disjointDefinition" (formula "8"))
                           (rule "elementOfSetMinus" (formula "13"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "notRight" (formula "13"))
                           (rule "elementOfSetMinus" (formula "14"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "notRight" (formula "14"))
                           (rule "elementOfUnionEQ" (formula "1") (ifseqformula "9"))
                           (rule "elementOfUnionEQ" (formula "2") (ifseqformula "9"))
                           (rule "disjointAllFields" (formula "2") (term "1") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "elementOfUnion" (formula "1") (term "0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "2"))
                           (rule "elementOfSingleton" (formula "2") (term "1"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=case_study_Node_tail_0"))
                           (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "6")))
                           (rule "eqSymm" (formula "2") (term "0"))
                           (rule "eqSymm" (formula "15"))
                           (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "elementOfUnionEQ" (formula "1") (term "0,0") (ifseqformula "9"))
                           (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1") (term "0,0"))
                           (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "15") (term "1,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "13"))
                           (rule "close" (formula "13") (ifseqformula "8"))
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "11"))
                  (rule "notLeft" (formula "1"))
                  (rule "selectOfAnon" (formula "12") (term "1") (userinteraction))
                  (rule "ifthenelse_split" (formula "12") (term "1") (userinteraction))
                  (branch " (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$footprint = java.lang.Object::<created> ∨ (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ freshLocs(heap) TRUE"
                     (rule "selectOfAnon" (formula "13") (term "1,1") (userinteraction))
                     (rule "ifthenelse_split" (formula "13") (term "1,1") (userinteraction))
                     (branch " (self, case_study.Node::$tail) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$tail = java.lang.Object::<created> ∨ (self, case_study.Node::$tail) ∊ freshLocs(heap) TRUE"
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")) (ifInst ""  (formula "5")))
                        (rule "eqSymm" (formula "8"))
                        (rule "disjointDefinition" (formula "9"))
                        (rule "disjointDefinition" (formula "14"))
                        (rule "elementOfSetMinus" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "elementOfSetMinus" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "elementOfUnionEQ" (formula "10") (ifseqformula "7"))
                        (rule "disjointAllFields" (formula "10") (term "1") (ifseqformula "8"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "elementOfUnionEQ" (formula "1") (term "0,0") (ifseqformula "7"))
                        (rule "elementOfUnion" (formula "10"))
                        (rule "orRight" (formula "10"))
                        (rule "elementOfSingleton" (formula "11"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "false_right" (formula "11"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "10"))
                        (rule "orRight" (formula "10"))
                        (rule "elementOfSingleton" (formula "10"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "false_right" (formula "10"))
                        (rule "elementOfSingleton" (formula "10"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "closeTrue" (formula "10"))
                     )
                     (branch " (self, case_study.Node::$tail) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$tail = java.lang.Object::<created> ∨ (self, case_study.Node::$tail) ∊ freshLocs(heap) FALSE"
                         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "4")) (userinteraction))
                        (rule "elementOfSetMinus" (formula "13"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "notRight" (formula "13"))
                        (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                        (rule "true_left" (formula "1"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")))
                        (rule "elementOfSetMinus" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "pullOutSelect" (formula "2") (term "1,0,0,1") (inst "selectSK=case_study_Node_tail_0"))
                        (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                        (rule "simplifySelectOfAnon" (formula "2"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "14")) (ifInst ""  (formula "6")))
                        (rule "replaceKnownSelect_taclet10101110_0" (formula "12") (term "0"))
                        (rule "elementOfSetMinus" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                        (rule "applyEqReverse" (formula "3") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "commute_or" (formula "2"))
                        (rule "cut_direct" (formula "2") (term "0,0"))
                        (branch "CUT: self.tail.<created> = TRUE TRUE"
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "3"))
                           (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "11") (term "2") (ifseqformula "8") (userinteraction))
                           (rule "elementOfUnion" (formula "11") (userinteraction))
                           (rule "elementOfUnion" (formula "11") (term "0") (userinteraction))
                           (rule "elementOfUnion" (formula "11") (term "0,0") (userinteraction))
                           (rule "orRight" (formula "11"))
                           (rule "orRight" (formula "11"))
                           (rule "orRight" (formula "11"))
                           (rule "unlimit_java_lang_Object__inv_" (formula "10") (userinteraction))
                           (rule "eqSymm" (formula "8"))
                           (rule "elementOfSingleton" (formula "11"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "false_right" (formula "11"))
                           (rule "disjointDefinition" (formula "16"))
                           (rule "elementOfSingleton" (formula "12"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "disjointDefinition" (formula "9"))
                           (rule "elementOfSingleton" (formula "11"))
                            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "12")))
                           (rule "false_right" (formula "11"))
                           (rule "elementOfUnionEQ" (formula "1") (ifseqformula "8"))
                           (rule "disjointAllFields" (formula "1") (term "1") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfUnion" (formula "1"))
                           (rule "elementOfSingleton" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elementOfSingleton" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "commuteUnion_2" (formula "7") (term "0,0"))
                           (rule "commuteUnion" (formula "7") (term "0,0,0"))
                           (rule "Class_invariant_axiom_for_case_study_Node" (formula "9") (ifseqformula "12"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "9"))
                           (rule "eqSymm" (formula "9"))
                           (rule "disjointDefinition" (formula "10") (term "1"))
                           (rule "elementOfUnionEQ" (formula "13") (ifseqformula "9"))
                           (rule "orRight" (formula "13"))
                           (rule "elementOfUnion" (formula "13"))
                           (rule "orRight" (formula "13"))
                           (rule "elementOfSingleton" (formula "14"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "closeTrue" (formula "14"))
                        )
                        (branch "CUT: self.tail.<created> = TRUE FALSE"
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "referencedObjectIsCreatedRight" (formula "11") (ifseqformula "12"))
                           (rule "close" (formula "11") (ifseqformula "3"))
                        )
                     )
                  )
                  (branch " (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$footprint = java.lang.Object::<created> ∨ (self.tail@heap[anon(allLocs ∖ self.footprint, anon_heap«anonHeapFunction»)], case_study.Node::$footprint) ∊ freshLocs(heap) FALSE"
                      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
                     (rule "orRight" (formula "12"))
                     (rule "notRight" (formula "13"))
                     (rule "eqSymm" (formula "7"))
                     (rule "disjointDefinition" (formula "14"))
                     (rule "disjointDefinition" (formula "8"))
                     (rule "elementOfSetMinus" (formula "13"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "notRight" (formula "13"))
                     (rule "elementOfUnionEQ" (formula "1") (ifseqformula "8"))
                     (rule "elementOfUnion" (formula "1") (term "0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "11") (term "0") (inst "selectSK=case_study_Node_tail_0"))
                     (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")) (ifInst ""  (formula "6")))
                     (rule "eqSymm" (formula "2") (term "0"))
                     (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "ifthenelse_negated" (formula "1") (term "0"))
                     (rule "elementOfUnionEQ" (formula "1") (term "0,0") (ifseqformula "9"))
                     (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "10"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "14") (term "1,1,0") (ifseqformula "1"))
                     (rule "close" (formula "14") (ifseqformula "10"))
                  )
               )
            )
            (branch "Case 2"
               (rule "orRight" (formula "11"))
               (rule "unlimit_java_lang_Object__inv_" (formula "12") (userinteraction))
               (rule "unlimit_java_lang_Object__inv_" (formula "8") (userinteraction))
               (rule "observerDependencyFormula" (formula "12") (inst "termWithSmallHeap=java.lang.Object::<inv>(heap,
                        case_study.Node::select(heap,
                                                self,
                                                case_study.Node::$tail))") (userinteraction))
               (branch "Case 1"
                  (rule "close" (formula "12") (ifseqformula "8"))
               )
               (branch "Case 2"
                  (rule "hide_right" (formula "13") (userinteraction))
                  (rule "andRight" (formula "12"))
                  (branch "Case 1"
                     (rule "andRight" (formula "12"))
                     (branch "Case 1"
                        (rule "allRight" (formula "12") (inst "sk=_ov_0"))
                        (rule "impRight" (formula "12"))
                        (rule "eqSymm" (formula "7"))
                        (rule "disjointDefinition" (formula "8"))
                        (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=case_study_Node_tail_0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "5")))
                        (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "elementOfUnionEQ" (formula "1") (term "0,0") (ifseqformula "8"))
                        (rule "disjointAllFields" (formula "1") (term "1,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfUnion" (formula "1") (term "0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "12") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "13") (ifseqformula "2"))
                     )
                     (branch
                        (rule "close" (formula "12") (ifseqformula "8"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "12") (inst "sk=_ov_0") (userinteraction))
                     (rule "allRight" (formula "12") (inst "sk=_fv_0") (userinteraction))
                     (rule "impRight" (formula "12") (userinteraction))
                     (rule "disjointToElementOf" (formula "8") (inst "ov=ov") (inst "fv=fv") (userinteraction))
                     (rule "selectOfAnon" (formula "13") (term "1") (userinteraction))
                     (rule "ifthenelse_split" (formula "13") (term "1") (userinteraction))
                     (branch " (_ov_0, _fv_0) ∊ allLocs ∖ self.footprint ∧ ¬_fv_0 = java.lang.Object::<created> ∨ (_ov_0, _fv_0) ∊ freshLocs(heap) TRUE"
                         (builtin "One Step Simplification" (formula "1") (userinteraction))
                        (rule "split_or_strong" (formula "1") (userinteraction))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "eqSymm" (formula "15"))
                           (rule "eqSymm" (formula "8"))
                           (rule "elementOfSetMinus" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "elementOfUnionEQ" (formula "10") (ifseqformula "7"))
                           (rule "orRight" (formula "10"))
                           (rule "close" (formula "11") (ifseqformula "1"))
                        )
                        (branch "Case 2"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "selectOfAnon" (formula "15") (term "0") (userinteraction))
                           (rule "ifthenelse_split" (formula "15") (term "0") (userinteraction))
                           (branch " (self, case_study.Node::$tail) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$tail = java.lang.Object::<created> ∨ (self, case_study.Node::$tail) ∊ freshLocs(heap) TRUE"
                               (builtin "One Step Simplification" (formula "9"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "5")))
                              (rule "eqSymm" (formula "17"))
                              (rule "eqSymm" (formula "8"))
                              (rule "elementOfSetMinus" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "elementOfSetMinus" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "elementOfUnionEQ" (formula "13") (term "0,0") (ifseqformula "7"))
                              (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "false_right" (formula "13"))
                              (rule "elementOfUnionEQ" (formula "10") (ifseqformula "7"))
                              (rule "orRight" (formula "10"))
                              (rule "elementOfUnion" (formula "10"))
                              (rule "orRight" (formula "10"))
                              (rule "elementOfSingleton" (formula "11"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "false_right" (formula "11"))
                              (rule "elementOfUnion" (formula "10"))
                              (rule "orRight" (formula "10"))
                              (rule "elementOfSingleton" (formula "10"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "false_right" (formula "10"))
                              (rule "elementOfSingleton" (formula "10"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "closeTrue" (formula "10"))
                           )
                           (branch " (self, case_study.Node::$tail) ∊ allLocs ∖ self.footprint ∧ ¬ case_study.Node::$tail = java.lang.Object::<created> ∨ (self, case_study.Node::$tail) ∊ freshLocs(heap) FALSE"
                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")) (userinteraction))
                              (rule "onlyCreatedObjectsAreInLocSets" (formula "1") (ifseqformula "2") (userinteraction))
                              (rule "split_or_strong" (formula "1") (userinteraction))
                              (branch "Case 1"
                                 (rule "close" (formula "13") (ifseqformula "1"))
                              )
                              (branch "Case 2"
                                 (rule "close" (formula "12") (ifseqformula "1"))
                              )
                           )
                        )
                     )
                     (branch " (_ov_0, _fv_0) ∊ allLocs ∖ self.footprint ∧ ¬_fv_0 = java.lang.Object::<created> ∨ (_ov_0, _fv_0) ∊ freshLocs(heap) FALSE"
                         (builtin "One Step Simplification" (formula "8"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
               )
            )
         )
      )
   )
)
(branch "Case '<-'"
   (rule "close" (formula "9") (ifseqformula "7"))
)
)
}
