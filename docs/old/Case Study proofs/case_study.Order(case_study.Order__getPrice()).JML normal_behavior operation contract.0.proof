\profile "Java Profile";

\settings // Proof-Settings-Config-File
{ 
    "Choice" : { 
        "JavaCard" : "JavaCard:off",
        "Strings" : "Strings:on",
        "assertions" : "assertions:on",
        "bigint" : "bigint:on",
        "floatRules" : "floatRules:strictfpOnly",
        "initialisation" : "initialisation:disableStaticInitialisation",
        "intRules" : "intRules:arithmeticSemanticsIgnoringOF",
        "integerSimplificationRules" : "integerSimplificationRules:full",
        "javaLoopTreatment" : "javaLoopTreatment:efficient",
        "mergeGenerateIsWeakeningGoal" : "mergeGenerateIsWeakeningGoal:off",
        "methodExpansion" : "methodExpansion:modularOnly",
        "modelFields" : "modelFields:treatAsAxiom",
        "moreSeqRules" : "moreSeqRules:on",
        "permissions" : "permissions:off",
        "programRules" : "programRules:Java",
        "reach" : "reach:on",
        "runtimeExceptions" : "runtimeExceptions:allow",
        "sequences" : "sequences:on",
        "wdChecks" : "wdChecks:off",
        "wdOperator" : "wdOperator:L"
     },
    "Labels" : { 
        "UseOriginLabels" : false
     },
    "NewSMT" : { 
        
     },
    "SMTSettings" : { 
        "SelectedTaclets" : [ 
            
         ],
        "UseBuiltUniqueness" : false,
        "explicitTypeHierarchy" : false,
        "instantiateHierarchyAssumptions" : true,
        "integersMaximum" : 2147483645,
        "integersMinimum" : -2147483645,
        "invariantForall" : false,
        "maxGenericSorts" : 2,
        "useConstantsForBigOrSmallIntegers" : true,
        "useUninterpretedMultiplication" : true
     },
    "Strategy" : { 
        "ActiveStrategy" : "JavaCardDLStrategy",
        "MaximumNumberOfAutomaticApplications" : 100000,
        "Timeout" : -1,
        "options" : { 
            "AUTO_INDUCTION_OPTIONS_KEY" : "AUTO_INDUCTION_OFF",
            "BLOCK_OPTIONS_KEY" : "BLOCK_CONTRACT_INTERNAL",
            "CLASS_AXIOM_OPTIONS_KEY" : "CLASS_AXIOM_FREE",
            "DEP_OPTIONS_KEY" : "DEP_ON",
            "INF_FLOW_CHECK_PROPERTY" : "INF_FLOW_CHECK_FALSE",
            "LOOP_OPTIONS_KEY" : "LOOP_INVARIANT",
            "METHOD_OPTIONS_KEY" : "METHOD_CONTRACT",
            "MPS_OPTIONS_KEY" : "MPS_MERGE",
            "NON_LIN_ARITH_OPTIONS_KEY" : "NON_LIN_ARITH_DEF_OPS",
            "OSS_OPTIONS_KEY" : "OSS_ON",
            "QUANTIFIERS_OPTIONS_KEY" : "QUANTIFIERS_NON_SPLITTING_WITH_PROGS",
            "QUERYAXIOM_OPTIONS_KEY" : "QUERYAXIOM_ON",
            "QUERY_NEW_OPTIONS_KEY" : "QUERY_OFF",
            "SPLITTING_OPTIONS_KEY" : "SPLITTING_DELAYED",
            "STOPMODE_OPTIONS_KEY" : "STOPMODE_DEFAULT",
            "SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER",
            "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY" : "SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF",
            "USER_TACLETS_OPTIONS_KEY1" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY2" : "USER_TACLETS_OFF",
            "USER_TACLETS_OPTIONS_KEY3" : "USER_TACLETS_OFF",
            "VBT_PHASE" : "VBT_SYM_EX"
         }
     }
 } 

\javaSource "../../../property-checker-out/case_study";

\proofObligation "#Proof Obligation Settings
#Sun Mar 17 16:00:47 CET 2024
contract=case_study.Order[case_study.Order\\:\\:getPrice()].JML normal_behavior operation contract.0
name=case_study.Order[case_study.Order\\:\\:getPrice()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "florian" ) (keyVersion "27183cea39cd71d8280021bab8de03c8490dcfd2"))

(autoModeTime "665")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,0,1,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "Free_class_invariant_axiom_for_case_study_Order" (formula "7") (ifseqformula "8"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "inEqSimp_commuteGeq" (formula "13") (term "1,1,1"))
(rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "11") (term "0"))
 (builtin "One Step Simplification" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "replace_known_right" (formula "12") (term "0,0,1,1") (ifseqformula "14"))
 (builtin "One Step Simplification" (formula "12"))
(rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "applyEq" (formula "9") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "9") (term "0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "applyEq" (formula "13") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "13") (term "0"))
 (builtin "One Step Simplification" (formula "13"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "14"))
(rule "notLeft" (formula "14"))
(rule "replace_known_right" (formula "11") (term "0,1") (ifseqformula "15"))
 (builtin "One Step Simplification" (formula "11"))
(rule "true_left" (formula "11"))
(rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "12"))
 (builtin "One Step Simplification" (formula "11"))
(rule "applyEq" (formula "11") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "11") (term "0"))
 (builtin "One Step Simplification" (formula "11"))
(rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
(rule "times_zero_1" (formula "12") (term "0,0"))
(rule "add_zero_left" (formula "12") (term "0"))
(rule "Class_invariant_axiom_for_case_study_Order" (formula "5") (ifseqformula "17"))
(rule "true_left" (formula "5"))
(rule "Free_class_invariant_axiom_for_case_study_Customer" (formula "7") (ifseqformula "15"))
(rule "leq_literals" (formula "7") (term "1,0,1,1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "qeq_literals" (formula "7") (term "0,1,1"))
 (builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "applyEq" (formula "10") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "10") (term "0"))
 (builtin "One Step Simplification" (formula "10"))
(rule "andLeft" (formula "10"))
(rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "7") (term "0"))
 (builtin "One Step Simplification" (formula "7"))
(rule "applyEq" (formula "9") (term "0,0") (ifseqformula "6"))
(rule "ssubsortDirect" (formula "9") (term "0"))
 (builtin "One Step Simplification" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "9"))
(rule "leq_literals" (formula "14") (term "0"))
 (builtin "One Step Simplification" (formula "14"))
(rule "true_left" (formula "14"))
(rule "Free_class_invariant_axiom_for_case_study_Product" (formula "12") (ifseqformula "17"))
(rule "leq_literals" (formula "12") (term "1,0,1,1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "leq_literals" (formula "12") (term "1,0,1,1,0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "qeq_literals" (formula "12") (term "0,1,1"))
 (builtin "One Step Simplification" (formula "12"))
(rule "qeq_literals" (formula "12") (term "0,1,1,0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "12"))
(rule "applyEq" (formula "16") (term "0,0") (ifseqformula "11"))
(rule "ssubsortDirect" (formula "16") (term "0"))
 (builtin "One Step Simplification" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "applyEq" (formula "15") (term "0,0") (ifseqformula "11"))
(rule "ssubsortDirect" (formula "15") (term "0"))
 (builtin "One Step Simplification" (formula "15"))
(rule "andLeft" (formula "15"))
(rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
(rule "ssubsortDirect" (formula "12") (term "0"))
 (builtin "One Step Simplification" (formula "12"))
(rule "applyEq" (formula "14") (term "0,0") (ifseqformula "11"))
(rule "ssubsortDirect" (formula "14") (term "0"))
 (builtin "One Step Simplification" (formula "14"))
(rule "notLeft" (formula "14"))
(rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "20"))
(rule "times_zero_1" (formula "16") (term "0,0"))
(rule "add_zero_left" (formula "16") (term "0"))
(rule "Free_class_invariant_axiom_for_java_lang_String" (formula "13") (ifseqformula "21"))
(rule "true_left" (formula "13"))
(rule "Free_class_invariant_axiom_for_java_lang_String" (formula "8") (ifseqformula "21"))
(rule "true_left" (formula "8"))
(rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_getPrice,savedHeapBefore_getPrice"))
 (builtin "One Step Simplification" (formula "24"))
(rule "returnUnfold" (formula "24") (term "1") (inst "#v0=i"))
(rule "variableDeclarationAssign" (formula "24") (term "1"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "i"))
(rule "methodCallWithAssignmentUnfoldTarget" (formula "24") (term "1") (inst "#v0=p"))
(rule "variableDeclaration" (formula "24") (term "1") (newnames "p"))
(rule "assignment_read_attribute_this" (formula "24") (term "1"))
 (builtin "One Step Simplification" (formula "24"))
 (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore___getPrice_trampoline,result___getPrice_trampoline,exc_0") (contract "case_study.Product[case_study.Product::__getPrice_trampoline(boolean)].JML normal_behavior operation contract.0") (modality "diamond"))
(branch "Post (__getPrice_trampoline)"
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "10")) (ifInst ""  (formula "22")) (ifInst ""  (formula "22")))
    (builtin "One Step Simplification" (formula "25"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "eqSymm" (formula "20"))
   (rule "assignment" (formula "28") (term "1"))
    (builtin "One Step Simplification" (formula "28"))
   (rule "applyEq" (formula "12") (term "0") (ifseqformula "20"))
   (rule "applyEq" (formula "13") (term "0") (ifseqformula "20"))
   (rule "Class_invariant_axiom_for_case_study_Product" (formula "21") (ifseqformula "25"))
   (rule "true_left" (formula "21"))
   (rule "Free_class_invariant_axiom_for_case_study_Product" (formula "19") (ifseqformula "24"))
   (rule "leq_literals" (formula "19") (term "1,0,1,1"))
    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "11")) (ifInst ""  (formula "22")) (ifInst ""  (formula "14")) (ifInst ""  (formula "15")))
   (rule "qeq_literals" (formula "19") (term "1,1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "qeq_literals" (formula "19") (term "0,0,1,1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "leq_literals" (formula "19") (term "0,1,1"))
    (builtin "One Step Simplification" (formula "19"))
   (rule "andLeft" (formula "19"))
   (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "21"))
   (rule "replace_known_left" (formula "20") (term "1,1") (ifseqformula "13"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "10"))
   (rule "ssubsortDirect" (formula "20") (term "0"))
    (builtin "One Step Simplification" (formula "20"))
   (rule "Free_class_invariant_axiom_for_java_lang_String" (formula "19") (ifseqformula "23"))
   (rule "true_left" (formula "19"))
   (rule "methodCallReturn" (formula "27") (term "1"))
   (rule "assignment" (formula "27") (term "1"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "methodCallEmpty" (formula "27") (term "1"))
   (rule "tryEmpty" (formula "27") (term "1"))
   (rule "emptyModality" (formula "27") (term "1"))
    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "20")))
   (rule "Class_invariant_axiom_for_case_study_Order" (formula "27") (ifseqformula "26"))
   (rule "closeTrue" (formula "27"))
)
(branch "Exceptional Post (__getPrice_trampoline)"
    (builtin "One Step Simplification" (formula "19"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "20"))
   (rule "andLeft" (formula "19"))
   (rule "andLeft" (formula "21"))
   (rule "notLeft" (formula "19"))
   (rule "close" (formula "23") (ifseqformula "22"))
)
(branch "Pre (__getPrice_trampoline)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
   (rule "Class_invariant_axiom_for_case_study_Product" (formula "24") (term "0") (ifseqformula "21"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "referencedObjectIsCreatedRight" (formula "24") (ifseqformula "21"))
   (rule "close" (formula "24") (ifseqformula "1"))
)
(branch "Null reference (p = null)"
    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
   (rule "closeTrue" (formula "24"))
)
)
}
