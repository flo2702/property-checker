// ***** This file is automatically generated from EltwiseIntComparison.java.jpp

package daikon.inv.unary.sequence;

import daikon.*;
import typequals.prototype.qual.NonPrototype;
import typequals.prototype.qual.Prototype;

/**
 * Abstract base class defined so that the different types of EltwiseIntComparison (and separately
 * EltwiseFloatComparison), at the current moment those are ==, !=, &lt;, &le;, &gt;, &ge; can have
 * a common superclass which is needed for actions like the isExclusiveFormula method. It is also
 * used to force the definition of the hasSeenNonSingletonSample function for each type of
 * EltwiseIntComparison.
 */

public abstract class EltwiseFloatComparison extends SingleFloatSequence {
  static final long serialVersionUID = 20030109L;

  public abstract boolean hasSeenNonSingletonSample();

  protected EltwiseFloatComparison(PptSlice ppt) {
    super(ppt);
  }

  protected @Prototype EltwiseFloatComparison() {
    super();
  }
}
